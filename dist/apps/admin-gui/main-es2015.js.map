{"version":3,"sources":["/home/vectoun/git/perun-web-apps/libs/perun/models/src/index.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/ApplicationFormItem.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/ApplicationMail.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/ApplicationState.enum.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/ApplicationType.enum.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/AttributeRights.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/Member.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/PerunPrincipal.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/Resource.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/RichDestination.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/Service.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/TreeGroup.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/index.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api-configuration.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api.module.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/base-service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/models.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/models/destination-propagation-type.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/models/destination-type.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/models/vo-admin-roles.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/request-builder.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services/attributes-manager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services/authz-resolver.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services/database-manager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services/ext-sources-manager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services/facilities-manager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services/groups-manager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services/members-manager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services/owners-manager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services/registrar-manager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services/resources-manager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services/services-manager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services/users-manager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services/utils.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/services/vos-manager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/index.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/attributes.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/authz.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/facility.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/group.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/members.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/propagation-stats-reader.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/registrar.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/resources.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/rt-messages.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/service.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/users.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/vo.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/tokens/src/index.ts","/home/vectoun/git/perun-web-apps/libs/perun/urns/src/index.ts","/home/vectoun/git/perun-web-apps/libs/perun/urns/src/lib/perun-urns.ts","/home/vectoun/git/perun-web-apps/libs/perun/utils/src/index.ts","/home/vectoun/git/perun-web-apps/libs/perun/utils/src/lib/perun-utils.ts","/home/vectoun/git/perun-web-apps/libs/ui/alerts/src/index.ts","/home/vectoun/git/perun-web-apps/libs/ui/alerts/src/lib/alert/alert.component.css","/home/vectoun/git/perun-web-apps/libs/ui/alerts/src/lib/alert/alert.component.ts","/home/vectoun/git/perun-web-apps/libs/ui/alerts/src/lib/ui-alerts.module.ts","/home/vectoun/git/perun-web-apps/libs/ui/alerts/src/lib/alert/alert.component.html","./src/app/admin/pages/admin-page/admin-users/admin-users.component.html","./src/app/app.component.html","./src/app/core/components/auth-callback/auth-callback.component.html","./src/app/facilities/pages/facility-detail-page/facility-allowed-groups/facility-allowed-groups.component.html","./src/app/facilities/pages/facility-detail-page/facility-resources/facility-resources.component.html","./src/app/main-menu-page/main-menu-page.component.html","./src/app/shared/components/animated-router-outlet/animated-router-outlet.component.html","./src/app/shared/components/attributes-list/attribute-value/attribute-value-boolean/attribute-value-boolean.component.html","./src/app/shared/components/attributes-list/attribute-value/attribute-value-list/attribute-value-list.component.html","./src/app/shared/components/attributes-list/attribute-value/attribute-value-map/attribute-value-map.component.html","./src/app/shared/components/attributes-list/attribute-value/attribute-value-string/attribute-value-string.component.html","./src/app/shared/components/attributes-list/attribute-value/attribute-value.component.html","./src/app/shared/components/attributes-list/attributes-list.component.html","./src/app/shared/components/back-button/back-button.component.html","./src/app/shared/components/bug-report-dialog/bug-report-dialog.component.html","./src/app/shared/components/debounce-filter/debounce-filter.component.html","./src/app/shared/components/dialogs/add-application-form-item-dialog/add-application-form-item-dialog.component.html","./src/app/shared/components/dialogs/add-edit-notification-dialog/add-edit-notification-dialog.component.html","./src/app/shared/components/dialogs/add-edit-notification-dialog/tag-bar/tag-bar.component.html","./src/app/shared/components/dialogs/add-edit-notification-dialog/tag-section/tag-section.component.html","./src/app/shared/components/dialogs/add-group-manager-dialog/add-group-manager-dialog.component.html","./src/app/shared/components/dialogs/add-manager-dialog/add-manager-dialog.component.html","./src/app/shared/components/dialogs/add-member-dialog/add-member-dialog.component.html","./src/app/shared/components/dialogs/application-form-copy-items-dialog/application-form-copy-items-dialog.component.html","./src/app/shared/components/dialogs/application-re-send-notification-dialog/application-re-send-notification-dialog.component.html","./src/app/shared/components/dialogs/application-reject-dialog/application-reject-dialog.component.html","./src/app/shared/components/dialogs/assign-group-to-resource-dialog/assign-group-to-resource-dialog.component.html","./src/app/shared/components/dialogs/change-member-status-dialog/change-member-status-dialog.component.html","./src/app/shared/components/dialogs/create-attribute-definition-dialog/create-attribute-definition-dialog.component.html","./src/app/shared/components/dialogs/create-attribute-dialog/create-attribute-dialog.component.html","./src/app/shared/components/dialogs/create-group-dialog/create-group-dialog.component.html","./src/app/shared/components/dialogs/create-resource-tag-dialog/create-resource-tag-dialog.component.html","./src/app/shared/components/dialogs/create-vo-dialog/create-vo-dialog.component.html","./src/app/shared/components/dialogs/delete-application-form-item-dialog/delete-application-form-item-dialog.component.html","./src/app/shared/components/dialogs/delete-attribute-definition-dialog/delete-attribute-definition-dialog.component.html","./src/app/shared/components/dialogs/delete-attribute-dialog/delete-attribute-dialog.component.html","./src/app/shared/components/dialogs/delete-group-dialog/delete-group-dialog.component.html","./src/app/shared/components/dialogs/delete-notification-dialog/delete-notification-dialog.component.html","./src/app/shared/components/dialogs/delete-resource-tag-dialog/delete-resource-tag-dialog.component.html","./src/app/shared/components/dialogs/edit-application-form-item-dialog/edit-application-form-item-dialog.component.html","./src/app/shared/components/dialogs/edit-email-footer-dialog/edit-email-footer-dialog.component.html","./src/app/shared/components/dialogs/invite-member-dialog/invite-member-dialog.component.html","./src/app/shared/components/dialogs/move-group-dialog/move-group-dialog.component.html","./src/app/shared/components/dialogs/notifications-copy-mails-dialog/notifications-copy-mails-dialog.component.html","./src/app/shared/components/dialogs/remove-group-from-resource-dialog/remove-group-from-resource-dialog.component.html","./src/app/shared/components/dialogs/remove-group-manager-dialog/remove-group-manager-dialog.component.html","./src/app/shared/components/dialogs/remove-manager-dialog/remove-manager-dialog.component.html","./src/app/shared/components/dialogs/remove-members-dialog/remove-members-dialog.component.html","./src/app/shared/components/dialogs/remove-resource-dialog/remove-resource-dialog.component.html","./src/app/shared/components/dialogs/remove-vo-dialog/remove-vo-dialog.component.html","./src/app/shared/components/dialogs/show-notification-history-dialog/show-notification-history-dialog.component.html","./src/app/shared/components/dialogs/update-application-form-dialog/update-application-form-dialog.component.html","./src/app/shared/components/group-menu/group-menu.component.html","./src/app/shared/components/groups-list/groups-list.component.html","./src/app/shared/components/immediate-filter/immediate-filter.component.html","./src/app/shared/components/managers-page/managers-page.component.html","./src/app/shared/components/members-candidates-list/members-candidates-list.component.html","./src/app/shared/components/menu-buttons-field/menu-buttons-field.component.html","./src/app/shared/components/notification-dialog/notification-dialog.component.html","./src/app/shared/components/notification/notification.component.html","./src/app/shared/components/notificator/notificator.component.html","./src/app/shared/components/refresh-button/refresh-button.component.html","./src/app/shared/components/report-issue-dialog/report-issue-dialog.component.html","./src/app/shared/components/resources-list/resources-list.component.html","./src/app/shared/components/resources-tags-list/resources-tags-list.component.html","./src/app/shared/components/settings-toggle-item/settings-toggle-item.component.html","./src/app/shared/components/table-options/table-options.component.html","./src/app/shared/components/user-detail-page/user-detail-page.component.html","./src/app/shared/components/user-detail-page/user-detail/user-detail.component.html","./src/app/shared/components/user-detail-page/user-groups/user-groups.component.html","./src/app/shared/components/user-detail-page/user-organizations/user-organizations.component.html","./src/app/shared/components/user-detail-page/user-overview/user-overview.component.html","./src/app/shared/components/user-detail-page/user-settings/user-settings-attributes/user-settings-attributes.component.html","./src/app/shared/components/user-detail-page/user-settings/user-settings-overview/user-settings-overview.component.html","./src/app/shared/components/user-detail-page/user-settings/user-settings.component.html","./src/app/shared/components/user-profile/user-profile.component.html","./src/app/shared/components/users-list/users-list.component.html","./src/app/shared/components/vo-select-table/vo-select-table.component.html","./src/app/shared/debugger-page/debugger-page.component.html","./src/app/shared/perun-footer/perun-footer.component.html","./src/app/shared/perun-nav/perun-nav.component.html","./src/app/shared/side-menu/side-menu-item/side-menu-item.component.html","./src/app/shared/side-menu/side-menu-root-item/side-menu-root-item.component.html","./src/app/shared/side-menu/side-menu.component.html","./src/app/vos/pages/group-detail-page/group-applications/group-applications.component.html","./src/app/vos/pages/group-detail-page/group-members/group-members.component.html","./src/app/vos/pages/group-detail-page/group-resources/group-resources.component.html","./src/app/vos/pages/group-detail-page/group-subgroups/group-subgroups.component.html","./src/app/vos/pages/member-detail-page/member-groups/member-groups.component.html","./src/app/vos/pages/vo-detail-page/vo-applications/vo-applications.component.html","./src/app/vos/pages/vo-detail-page/vo-groups/vo-groups.component.html","./src/app/vos/pages/vo-detail-page/vo-members/vo-members.component.html","./src/app/vos/pages/vo-detail-page/vo-resources/vo-resources-preview/vo-resources-preview.component.html","./src/app/vos/pages/vo-detail-page/vo-resources/vo-resources-states/vo-resources-states.component.html","/home/vectoun/git/perun-web-apps/node_modules/tslib/tslib.es6.js","./$_lazy_route_resource lazy namespace object","./src/app/admin/pages/admin-page/admin-users/admin-users.component.scss","./src/app/admin/pages/admin-page/admin-users/admin-users.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/components/auth-callback/auth-callback.component.scss","./src/app/core/components/auth-callback/auth-callback.component.ts","./src/app/core/core.module.ts","./src/app/core/services/api/ApiInterceptor.ts","./src/app/core/services/api/api-request-configuration.service.ts","./src/app/core/services/api/api.service.ts","./src/app/core/services/api/custom-icon.service.ts","./src/app/core/services/common/app-config.service.ts","./src/app/core/services/common/auth-resolver.service.ts","./src/app/core/services/common/auth.service.ts","./src/app/core/services/common/cache-helper.service.ts","./src/app/core/services/common/cache-route-reuse-strategy.ts","./src/app/core/services/common/notification-storage.service.ts","./src/app/core/services/common/notificator.service.ts","./src/app/core/services/common/side-menu.service.ts","./src/app/core/services/common/store.service.ts","./src/app/facilities/pages/facility-detail-page/facility-allowed-groups/facility-allowed-groups.component.scss","./src/app/facilities/pages/facility-detail-page/facility-allowed-groups/facility-allowed-groups.component.ts","./src/app/facilities/pages/facility-detail-page/facility-resources/facility-resources.component.scss","./src/app/facilities/pages/facility-detail-page/facility-resources/facility-resources.component.ts","./src/app/main-menu-page/main-menu-page.component.scss","./src/app/main-menu-page/main-menu-page.component.ts","./src/app/shared/animations/Animations.ts","./src/app/shared/components/animated-router-outlet/animated-router-outlet.component.scss","./src/app/shared/components/animated-router-outlet/animated-router-outlet.component.ts","./src/app/shared/components/attributes-list/attribute-value/attribute-value-boolean/attribute-value-boolean.component.scss","./src/app/shared/components/attributes-list/attribute-value/attribute-value-boolean/attribute-value-boolean.component.ts","./src/app/shared/components/attributes-list/attribute-value/attribute-value-list/attribute-value-list.component.scss","./src/app/shared/components/attributes-list/attribute-value/attribute-value-list/attribute-value-list.component.ts","./src/app/shared/components/attributes-list/attribute-value/attribute-value-map/attribute-value-map.component.scss","./src/app/shared/components/attributes-list/attribute-value/attribute-value-map/attribute-value-map.component.ts","./src/app/shared/components/attributes-list/attribute-value/attribute-value-string/attribute-value-string.component.scss","./src/app/shared/components/attributes-list/attribute-value/attribute-value-string/attribute-value-string.component.ts","./src/app/shared/components/attributes-list/attribute-value/attribute-value.component.scss","./src/app/shared/components/attributes-list/attribute-value/attribute-value.component.ts","./src/app/shared/components/attributes-list/attributes-list.component.scss","./src/app/shared/components/attributes-list/attributes-list.component.ts","./src/app/shared/components/back-button/back-button.component.scss","./src/app/shared/components/back-button/back-button.component.ts","./src/app/shared/components/bug-report-dialog/bug-report-dialog.component.scss","./src/app/shared/components/bug-report-dialog/bug-report-dialog.component.ts","./src/app/shared/components/debounce-filter/debounce-filter.component.scss","./src/app/shared/components/debounce-filter/debounce-filter.component.ts","./src/app/shared/components/dialogs/add-application-form-item-dialog/add-application-form-item-dialog.component.scss","./src/app/shared/components/dialogs/add-application-form-item-dialog/add-application-form-item-dialog.component.ts","./src/app/shared/components/dialogs/add-edit-notification-dialog/add-edit-notification-dialog.component.scss","./src/app/shared/components/dialogs/add-edit-notification-dialog/add-edit-notification-dialog.component.ts","./src/app/shared/components/dialogs/add-edit-notification-dialog/tag-bar/tag-bar.component.scss","./src/app/shared/components/dialogs/add-edit-notification-dialog/tag-bar/tag-bar.component.ts","./src/app/shared/components/dialogs/add-edit-notification-dialog/tag-section/tag-section.component.scss","./src/app/shared/components/dialogs/add-edit-notification-dialog/tag-section/tag-section.component.ts","./src/app/shared/components/dialogs/add-group-manager-dialog/add-group-manager-dialog.component.scss","./src/app/shared/components/dialogs/add-group-manager-dialog/add-group-manager-dialog.component.ts","./src/app/shared/components/dialogs/add-manager-dialog/add-manager-dialog.component.scss","./src/app/shared/components/dialogs/add-manager-dialog/add-manager-dialog.component.ts","./src/app/shared/components/dialogs/add-member-dialog/add-member-dialog.component.scss","./src/app/shared/components/dialogs/add-member-dialog/add-member-dialog.component.ts","./src/app/shared/components/dialogs/application-form-copy-items-dialog/application-form-copy-items-dialog.component.scss","./src/app/shared/components/dialogs/application-form-copy-items-dialog/application-form-copy-items-dialog.component.ts","./src/app/shared/components/dialogs/application-re-send-notification-dialog/application-re-send-notification-dialog.component.scss","./src/app/shared/components/dialogs/application-re-send-notification-dialog/application-re-send-notification-dialog.component.ts","./src/app/shared/components/dialogs/application-reject-dialog/application-reject-dialog.component.scss","./src/app/shared/components/dialogs/application-reject-dialog/application-reject-dialog.component.ts","./src/app/shared/components/dialogs/assign-group-to-resource-dialog/assign-group-to-resource-dialog.component.scss","./src/app/shared/components/dialogs/assign-group-to-resource-dialog/assign-group-to-resource-dialog.component.ts","./src/app/shared/components/dialogs/change-member-status-dialog/change-member-status-dialog.component.scss","./src/app/shared/components/dialogs/change-member-status-dialog/change-member-status-dialog.component.ts","./src/app/shared/components/dialogs/create-attribute-definition-dialog/create-attribute-definition-dialog.component.scss","./src/app/shared/components/dialogs/create-attribute-definition-dialog/create-attribute-definition-dialog.component.ts","./src/app/shared/components/dialogs/create-attribute-dialog/create-attribute-dialog.component.scss","./src/app/shared/components/dialogs/create-attribute-dialog/create-attribute-dialog.component.ts","./src/app/shared/components/dialogs/create-group-dialog/create-group-dialog.component.scss","./src/app/shared/components/dialogs/create-group-dialog/create-group-dialog.component.ts","./src/app/shared/components/dialogs/create-resource-tag-dialog/create-resource-tag-dialog.component.scss","./src/app/shared/components/dialogs/create-resource-tag-dialog/create-resource-tag-dialog.component.ts","./src/app/shared/components/dialogs/create-vo-dialog/create-vo-dialog.component.scss","./src/app/shared/components/dialogs/create-vo-dialog/create-vo-dialog.component.ts","./src/app/shared/components/dialogs/delete-application-form-item-dialog/delete-application-form-item-dialog.component.scss","./src/app/shared/components/dialogs/delete-application-form-item-dialog/delete-application-form-item-dialog.component.ts","./src/app/shared/components/dialogs/delete-attribute-definition-dialog/delete-attribute-definition-dialog.component.scss","./src/app/shared/components/dialogs/delete-attribute-definition-dialog/delete-attribute-definition-dialog.component.ts","./src/app/shared/components/dialogs/delete-attribute-dialog/delete-attribute-dialog.component.scss","./src/app/shared/components/dialogs/delete-attribute-dialog/delete-attribute-dialog.component.ts","./src/app/shared/components/dialogs/delete-group-dialog/delete-group-dialog.component.scss","./src/app/shared/components/dialogs/delete-group-dialog/delete-group-dialog.component.ts","./src/app/shared/components/dialogs/delete-notification-dialog/delete-notification-dialog.component.scss","./src/app/shared/components/dialogs/delete-notification-dialog/delete-notification-dialog.component.ts","./src/app/shared/components/dialogs/delete-resource-tag-dialog/delete-resource-tag-dialog.component.scss","./src/app/shared/components/dialogs/delete-resource-tag-dialog/delete-resource-tag-dialog.component.ts","./src/app/shared/components/dialogs/edit-application-form-item-dialog/edit-application-form-item-dialog.component.scss","./src/app/shared/components/dialogs/edit-application-form-item-dialog/edit-application-form-item-dialog.component.ts","./src/app/shared/components/dialogs/edit-email-footer-dialog/edit-email-footer-dialog.component.scss","./src/app/shared/components/dialogs/edit-email-footer-dialog/edit-email-footer-dialog.component.ts","./src/app/shared/components/dialogs/invite-member-dialog/invite-member-dialog.component.scss","./src/app/shared/components/dialogs/invite-member-dialog/invite-member-dialog.component.ts","./src/app/shared/components/dialogs/move-group-dialog/move-group-dialog.component.scss","./src/app/shared/components/dialogs/move-group-dialog/move-group-dialog.component.ts","./src/app/shared/components/dialogs/notifications-copy-mails-dialog/notifications-copy-mails-dialog.component.scss","./src/app/shared/components/dialogs/notifications-copy-mails-dialog/notifications-copy-mails-dialog.component.ts","./src/app/shared/components/dialogs/remove-group-from-resource-dialog/remove-group-from-resource-dialog.component.scss","./src/app/shared/components/dialogs/remove-group-from-resource-dialog/remove-group-from-resource-dialog.component.ts","./src/app/shared/components/dialogs/remove-group-manager-dialog/remove-group-manager-dialog.component.scss","./src/app/shared/components/dialogs/remove-group-manager-dialog/remove-group-manager-dialog.component.ts","./src/app/shared/components/dialogs/remove-manager-dialog/remove-manager-dialog.component.scss","./src/app/shared/components/dialogs/remove-manager-dialog/remove-manager-dialog.component.ts","./src/app/shared/components/dialogs/remove-members-dialog/remove-members-dialog.component.scss","./src/app/shared/components/dialogs/remove-members-dialog/remove-members-dialog.component.ts","./src/app/shared/components/dialogs/remove-resource-dialog/remove-resource-dialog.component.scss","./src/app/shared/components/dialogs/remove-resource-dialog/remove-resource-dialog.component.ts","./src/app/shared/components/dialogs/remove-vo-dialog/remove-vo-dialog.component.scss","./src/app/shared/components/dialogs/remove-vo-dialog/remove-vo-dialog.component.ts","./src/app/shared/components/dialogs/show-notification-history-dialog/show-notification-history-dialog.component.scss","./src/app/shared/components/dialogs/show-notification-history-dialog/show-notification-history-dialog.component.ts","./src/app/shared/components/dialogs/update-application-form-dialog/update-application-form-dialog.component.scss","./src/app/shared/components/dialogs/update-application-form-dialog/update-application-form-dialog.component.ts","./src/app/shared/components/group-menu/group-menu.component.scss","./src/app/shared/components/group-menu/group-menu.component.ts","./src/app/shared/components/groups-list/groups-list.component.scss","./src/app/shared/components/groups-list/groups-list.component.ts","./src/app/shared/components/immediate-filter/immediate-filter.component.scss","./src/app/shared/components/immediate-filter/immediate-filter.component.ts","./src/app/shared/components/managers-page/managers-page.component.scss","./src/app/shared/components/managers-page/managers-page.component.ts","./src/app/shared/components/members-candidates-list/members-candidates-list.component.scss","./src/app/shared/components/members-candidates-list/members-candidates-list.component.ts","./src/app/shared/components/menu-buttons-field/menu-buttons-field.component.scss","./src/app/shared/components/menu-buttons-field/menu-buttons-field.component.ts","./src/app/shared/components/notification-dialog/notification-dialog.component.scss","./src/app/shared/components/notification-dialog/notification-dialog.component.ts","./src/app/shared/components/notification/notification.component.scss","./src/app/shared/components/notification/notification.component.ts","./src/app/shared/components/notificator/notificator.component.scss","./src/app/shared/components/notificator/notificator.component.ts","./src/app/shared/components/refresh-button/refresh-button.component.scss","./src/app/shared/components/refresh-button/refresh-button.component.ts","./src/app/shared/components/report-issue-dialog/report-issue-dialog.component.scss","./src/app/shared/components/report-issue-dialog/report-issue-dialog.component.ts","./src/app/shared/components/resources-list/resources-list.component.scss","./src/app/shared/components/resources-list/resources-list.component.ts","./src/app/shared/components/resources-tags-list/resources-tags-list.component.scss","./src/app/shared/components/resources-tags-list/resources-tags-list.component.ts","./src/app/shared/components/settings-toggle-item/settings-toggle-item.component.scss","./src/app/shared/components/settings-toggle-item/settings-toggle-item.component.ts","./src/app/shared/components/table-options/table-options.component.scss","./src/app/shared/components/table-options/table-options.component.ts","./src/app/shared/components/user-detail-page/user-detail-page.component.scss","./src/app/shared/components/user-detail-page/user-detail-page.component.ts","./src/app/shared/components/user-detail-page/user-detail/user-detail.component.scss","./src/app/shared/components/user-detail-page/user-detail/user-detail.component.ts","./src/app/shared/components/user-detail-page/user-groups/user-groups.component.scss","./src/app/shared/components/user-detail-page/user-groups/user-groups.component.ts","./src/app/shared/components/user-detail-page/user-organizations/user-organizations.component.scss","./src/app/shared/components/user-detail-page/user-organizations/user-organizations.component.ts","./src/app/shared/components/user-detail-page/user-overview/user-overview.component.scss","./src/app/shared/components/user-detail-page/user-overview/user-overview.component.ts","./src/app/shared/components/user-detail-page/user-settings/user-settings-attributes/user-settings-attributes.component.scss","./src/app/shared/components/user-detail-page/user-settings/user-settings-attributes/user-settings-attributes.component.ts","./src/app/shared/components/user-detail-page/user-settings/user-settings-overview/user-settings-overview.component.scss","./src/app/shared/components/user-detail-page/user-settings/user-settings-overview/user-settings-overview.component.ts","./src/app/shared/components/user-detail-page/user-settings/user-settings.component.scss","./src/app/shared/components/user-detail-page/user-settings/user-settings.component.ts","./src/app/shared/components/user-profile/user-profile.component.scss","./src/app/shared/components/user-profile/user-profile.component.ts","./src/app/shared/components/users-list/users-list.component.scss","./src/app/shared/components/users-list/users-list.component.ts","./src/app/shared/components/vo-select-table/vo-select-table.component.scss","./src/app/shared/components/vo-select-table/vo-select-table.component.ts","./src/app/shared/debugger-page/debugger-page.component.scss","./src/app/shared/debugger-page/debugger-page.component.ts","./src/app/shared/directives/auto-focus.directive.ts","./src/app/shared/perun-footer/perun-footer.component.scss","./src/app/shared/perun-footer/perun-footer.component.ts","./src/app/shared/perun-nav/perun-nav.component.scss","./src/app/shared/perun-nav/perun-nav.component.ts","./src/app/shared/pipes/any-to-string.pipe.ts","./src/app/shared/pipes/application-form-item-type.pipe.ts","./src/app/shared/pipes/application-form-widget-description.pipe.ts","./src/app/shared/pipes/application-state.pipe.ts","./src/app/shared/pipes/attribute-type-clean.pipe.ts","./src/app/shared/pipes/displayed-role.pipe.ts","./src/app/shared/pipes/member-candidate-email.pipe.ts","./src/app/shared/pipes/member-email.pipe.ts","./src/app/shared/pipes/member-logins.pipe.ts","./src/app/shared/pipes/member-status-icon-color.pipe.ts","./src/app/shared/pipes/member-status-icon.pipe.ts","./src/app/shared/pipes/name-space-to-def.pipe.ts","./src/app/shared/pipes/resource-tags-to-string.pipe.ts","./src/app/shared/pipes/technical-owners.pipe.ts","./src/app/shared/pipes/user-email.pipe.ts","./src/app/shared/pipes/user-full-name.pipe.ts","./src/app/shared/pipes/vo-or-ext-source.pipe.ts","./src/app/shared/shared.module.ts","./src/app/shared/side-menu/side-menu-item.service.ts","./src/app/shared/side-menu/side-menu-item/side-menu-item.component.scss","./src/app/shared/side-menu/side-menu-item/side-menu-item.component.ts","./src/app/shared/side-menu/side-menu-root-item/side-menu-root-item.component.scss","./src/app/shared/side-menu/side-menu-root-item/side-menu-root-item.component.ts","./src/app/shared/side-menu/side-menu.component.scss","./src/app/shared/side-menu/side-menu.component.ts","./src/app/vos/pages/group-detail-page/group-applications/group-applications.component.scss","./src/app/vos/pages/group-detail-page/group-applications/group-applications.component.ts","./src/app/vos/pages/group-detail-page/group-members/group-members.component.scss","./src/app/vos/pages/group-detail-page/group-members/group-members.component.ts","./src/app/vos/pages/group-detail-page/group-resources/group-resources.component.scss","./src/app/vos/pages/group-detail-page/group-resources/group-resources.component.ts","./src/app/vos/pages/group-detail-page/group-subgroups/group-subgroups.component.scss","./src/app/vos/pages/group-detail-page/group-subgroups/group-subgroups.component.ts","./src/app/vos/pages/member-detail-page/member-groups/member-groups.component.scss","./src/app/vos/pages/member-detail-page/member-groups/member-groups.component.ts","./src/app/vos/pages/vo-detail-page/vo-applications/vo-applications.component.scss","./src/app/vos/pages/vo-detail-page/vo-applications/vo-applications.component.ts","./src/app/vos/pages/vo-detail-page/vo-groups/vo-groups.component.scss","./src/app/vos/pages/vo-detail-page/vo-groups/vo-groups.component.ts","./src/app/vos/pages/vo-detail-page/vo-members/vo-members.component.scss","./src/app/vos/pages/vo-detail-page/vo-members/vo-members.component.ts","./src/app/vos/pages/vo-detail-page/vo-resources/vo-resources-preview/vo-resources-preview.component.scss","./src/app/vos/pages/vo-detail-page/vo-resources/vo-resources-preview/vo-resources-preview.component.ts","./src/app/vos/pages/vo-detail-page/vo-resources/vo-resources-states/vo-resources-states.component.scss","./src/app/vos/pages/vo-detail-page/vo-resources/vo-resources-states/vo-resources-states.component.ts","./src/environments/environment.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export * from './lib/User';\nexport * from './lib/Application'\nexport * from './lib/ApplicationForm';\nexport * from './lib/ApplicationFormItem';\nexport * from './lib/ApplicationFormItemData';\nexport * from './lib/ApplicationMail';\nexport * from './lib/ApplicationState.enum';\nexport * from './lib/ApplicationType.enum';\nexport * from './lib/Attribute';\nexport * from './lib/AttributeDefinition';\nexport * from './lib/AttributeRights';\nexport * from './lib/Candidate';\nexport * from './lib/AttrEntity';\nexport * from './lib/ExtSource';\nexport * from './lib/Facility';\nexport * from './lib/Graph';\nexport * from './lib/Group';\nexport * from './lib/Member';\nexport * from './lib/MemberCandidate';\nexport * from './lib/Owner';\nexport * from './lib/PerunPrincipal';\nexport * from './lib/Resource';\nexport * from './lib/ResourceState';\nexport * from './lib/ResourceTag';\nexport * from './lib/RichDestination';\nexport * from './lib/RichFacility';\nexport * from './lib/RichMember';\nexport * from './lib/RichResource';\nexport * from './lib/RichUserExtSource';\nexport * from './lib/RichUser';\nexport * from './lib/RPCError';\nexport * from './lib/RTMessage';\nexport * from './lib/Service';\nexport * from './lib/Task';\nexport * from './lib/TreeGroup';\nexport * from './lib/User';\nexport * from './lib/UserExtSource';\nexport * from './lib/Vo';\n\n","export class Language {\n  errorMessage: string;\n  help: string;\n  label: string;\n  locale: string;\n  options: string;\n\n  constructor() {\n    this.errorMessage = '';\n    this.help = '';\n    this.label = '';\n  }\n}\n\nexport class ApplicationFormItem {\n  applicationTypes: string[];\n  beanName: string;\n  federationAttribute: string;\n  forDelete: boolean;\n  i18n: Map<string, Language>;\n  id: number;\n  ordnum: number;\n  perunDestinationAttribute: string;\n  perunSourceAttribute: string;\n  regex: string;\n  required: boolean;\n  shortname: string;\n  type: string;\n\n  constructor() {\n    this.applicationTypes = ['INITIAL', 'EXTENSION'];\n    this.federationAttribute = '';\n    this.i18n = new Map<string, Language>();\n    this.i18n.set('cs', new Language());\n    this.i18n.set('en', new Language());\n    this.id = 0;\n    this.ordnum = 0;\n    this.perunDestinationAttribute = null;\n    this.perunSourceAttribute = null;\n    this.regex = '';\n    this.required = false;\n    this.shortname = '';\n    this.type = '';\n  }\n}\n","export class Message {\n  locale: string;\n  subject: string;\n  text: string;\n\n  constructor(locale: string) {\n    this.locale = locale;\n    this.subject = '';\n    this.text = '';\n  }\n}\n\nexport class ApplicationMail {\n  appType: string;\n  beanName: string;\n  formId: number;\n  id: number;\n  mailType: string;\n  message: { [s: string]: Message; };\n  locale: string;\n  subject: string;\n  text: string;\n  send: boolean;\n\n  constructor() {\n    this.appType = 'INITIAL';\n    this.formId = 0;\n    this.mailType = 'APP_CREATED_USER';\n    this.send = true;\n    this.message = {};\n    this.message['en'] = new Message('en');\n    this.message['cs'] = new Message('cs');\n  }\n}\n","export enum ApplicationState {\n  APPROVED = 'APPROVED',\n  REJECTED = 'REJECTED',\n  NEW = 'NEW',\n  VERIFIED = 'VERIFIED'\n}\n","export enum ApplicationType {\n  INITIAL = 'INITIAL',\n  EXTENSION = 'EXTENSION'\n}\n","import {Role} from './PerunPrincipal';\n\nexport interface AttributeRights {\n  attributeId: number;\n  role: Role;\n  rights: ActionType[];\n}\n\nexport enum ActionType {\n  WRITE = 'WRITE',\n  WRITE_VO = 'WRITE_VO',\n  WRITE_PUBLIC = 'WRITE_PUBLIC',\n  READ = 'READ',\n  READ_VO = 'READ_VO',\n  READ_PUBLIC = 'READ_PUBLIC',\n}\n","export class Member {\n  id: number;\n  userId: number;\n  voId: number;\n}\n","import {User} from './User';\n\nexport interface PerunPrincipal {\n  actor: string;\n  additionalInformations: any;\n  authzInitialized: boolean;\n  extSourceLoa: number;\n  extSourceName: string;\n  extSourceType: string;\n  roles: Map<Role, Map<string, number[]>>;\n  user: User;\n  userId: number;\n}\n\nexport enum Role {\n  PERUNADMIN = 'PERUNADMIN',\n  VOADMIN = 'VOADMIN',\n  GROUPADMIN = 'GROUPADMIN',\n  SELF = 'SELF',\n  FACILITYADMIN = 'FACILITYADMIN',\n  RESOURCEADMIN = 'RESOURCEADMIN',\n  RESOURCESELFSERVICE = 'RESOURCESELFSERVICE',\n  REGISTRAR = 'REGISTRAR',\n  ENGINE = 'ENGINE',\n  RPC = 'RPC',\n  NOTIFICATIONS = 'NOTIFICATIONS',\n  SERVICEUSER = 'SERVICEUSER',\n  SPONSOR = 'SPONSOR',\n  VOOBSERVER = 'VOOBSERVER',\n  TOPGROUPCREATOR = 'TOPGROUPCREATOR',\n  SECURITYADMIN = 'SECURITYADMIN',\n  CABINETADMIN = 'CABINETADMIN',\n  UNKNOWNROLENAME = 'UNKNOWNROLENAME',\n}\n","export class Resource {\n  id: number;\n  facilityId: number;\n  voId: number;\n  name: string;\n  description: string;\n}\n","import {Facility} from './Facility';\nimport {Service} from './Service';\n\nexport class RichDestination {\n  id: number;\n  destination: string;\n  service: Service;\n  facility: Facility;\n}\n","export class Service {\n  id: number;\n  name: string;\n  description: string;\n}\n","import {Group} from './Group';\n\nexport class TreeGroup implements Group {\n  id: number;\n  name: string;\n  parentGroupId: number;\n  voId: number;\n  children: TreeGroup[];\n  shortName: string;\n  description: string;\n\n  constructor(group: Group) {\n    this.id = group.id;\n    this.name = group.name;\n    this.parentGroupId = group.parentGroupId;\n    this.voId = group.voId;\n    this.shortName = group.shortName;\n    this.description = group.description;\n  }\n\n  addChild(group: TreeGroup) {\n    if (this.children == null) {\n      this.children = [group];\n    } else {\n      this.children.push(group);\n    }\n  }\n\n}\n","export * from './lib/api.module';\nexport * from './lib/models';\nexport * from './lib/services';\nexport * from './lib/api-configuration';\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n\n/**\n * Global configuration\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiConfiguration {\n  rootUrl: string = '';\n}\n\n/**\n * Parameters for `ApiModule.forRoot()`\n */\nexport interface ApiConfigurationParams {\n  rootUrl?: string;\n}\n","/* tslint:disable */\nimport { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiConfiguration, ApiConfigurationParams } from './api-configuration';\n\nimport { UtilsService } from './services/utils.service';\nimport { AuthzResolverService } from './services/authz-resolver.service';\nimport { AttributesManagerService } from './services/attributes-manager.service';\nimport { DatabaseManagerService } from './services/database-manager.service';\nimport { ExtSourcesManagerService } from './services/ext-sources-manager.service';\nimport { UsersManagerService } from './services/users-manager.service';\nimport { MembersManagerService } from './services/members-manager.service';\nimport { FacilitiesManagerService } from './services/facilities-manager.service';\nimport { OwnersManagerService } from './services/owners-manager.service';\nimport { GroupsManagerService } from './services/groups-manager.service';\nimport { ResourcesManagerService } from './services/resources-manager.service';\nimport { VosManagerService } from './services/vos-manager.service';\nimport { RegistrarManagerService } from './services/registrar-manager.service';\nimport { ServicesManagerService } from './services/services-manager.service';\n\n/**\n * Module that provides all services and configuration.\n */\n@NgModule({\n  imports: [],\n  exports: [],\n  declarations: [],\n  providers: [\n    UtilsService,\n    AuthzResolverService,\n    AttributesManagerService,\n    DatabaseManagerService,\n    ExtSourcesManagerService,\n    UsersManagerService,\n    MembersManagerService,\n    FacilitiesManagerService,\n    OwnersManagerService,\n    GroupsManagerService,\n    ResourcesManagerService,\n    VosManagerService,\n    RegistrarManagerService,\n    ServicesManagerService,\n    ApiConfiguration\n  ],\n})\nexport class ApiModule {\n  static forRoot(params: ApiConfigurationParams): ModuleWithProviders {\n    return {\n      ngModule: ApiModule,\n      providers: [\n        {\n          provide: ApiConfiguration,\n          useValue: params\n        }\n      ]\n    }\n  }\n\n  constructor( \n    @Optional() @SkipSelf() parentModule: ApiModule,\n    @Optional() http: HttpClient\n  ) {\n    if (parentModule) {\n      throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n    }\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n      'See also https://github.com/angular/angular/issues/20575');\n    }\n  }\n}\n","/* tslint:disable */\nimport { ApiConfiguration } from './api-configuration';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * Base class for services\n */\nexport class BaseService {\n  constructor(\n    protected config: ApiConfiguration,\n    protected http: HttpClient\n  ) {\n  }\n\n  private _rootUrl: string = '';\n\n  /**\n   * Returns the root url for all operations in this service. If not set directly in this\n   * service, will fallback to `ApiConfiguration.rootUrl`.\n   */\n  get rootUrl(): string {\n    return this._rootUrl || this.config.rootUrl;\n  }\n\n  /**\n   * Sets the root URL for API operations in this service.\n   */\n  set rootUrl(rootUrl: string) {\n    this._rootUrl = rootUrl;\n  }\n}\n","export { PerunException } from './models/perun-exception';\nexport { PerunBean } from './models/perun-bean';\nexport { Auditable } from './models/auditable';\nexport { User } from './models/user';\nexport { RichUser } from './models/rich-user';\nexport { Member } from './models/member';\nexport { RichMember } from './models/rich-member';\nexport { UserExtSource } from './models/user-ext-source';\nexport { ExtSource } from './models/ext-source';\nexport { AttributeDefinition } from './models/attribute-definition';\nexport { Attribute } from './models/attribute';\nexport { Facility } from './models/facility';\nexport { RichFacility } from './models/rich-facility';\nexport { Host } from './models/host';\nexport { Owner } from './models/owner';\nexport { Group } from './models/group';\nexport { RichGroup } from './models/rich-group';\nexport { Resource } from './models/resource';\nexport { RichResource } from './models/rich-resource';\nexport { ResourceTag } from './models/resource-tag';\nexport { Vo } from './models/vo';\nexport { VoAdminRoles } from './models/vo-admin-roles';\nexport { Service } from './models/service';\nexport { DestinationType } from './models/destination-type';\nexport { DestinationPropagationType } from './models/destination-propagation-type';\nexport { Destination } from './models/destination';\nexport { RichDestination } from './models/rich-destination';\nexport { ApplicationForm } from './models/application-form';\nexport { PerunPrincipal } from './models/perun-principal';\n","/* tslint:disable */\n\n/**\n * type of propagation of service settings to a destination\n */\nexport enum DestinationPropagationType {\n  Parallel = 'PARALLEL',\n  Serial = 'SERIAL',\n  Dummy = 'DUMMY'\n}\n","/* tslint:disable */\n\n/**\n * type of destination, i.e. way of delivery of service settings\n */\nexport enum DestinationType {\n  Host = 'host',\n  Email = 'email',\n  Semail = 'semail',\n  Url = 'url',\n  UserHost = 'user@host',\n  UserHostPort = 'user@host:port',\n  ServiceSpecific = 'service-specific',\n  UserHostWindows = 'user@host-windows',\n  HostWindowsProxy = 'host-windows-proxy'\n}\n","/* tslint:disable */\n\n/**\n * admin roles for a Vo\n */\nexport enum VoAdminRoles {\n  Voobserver = 'VOOBSERVER',\n  Topgroupcreator = 'TOPGROUPCREATOR',\n  Voadmin = 'VOADMIN'\n}\n","/* tslint:disable */\nimport { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map<string, any>();\n  private _query = new Map<string, any>();\n  private _header = new Map<string, any>();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any): void {\n    if (value !== null && value !== undefined) {\n      this._path.set(name, value);\n    }\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any): void {\n    if (value !== null && value !== undefined) {\n      this._query.set(name, value);\n    }\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any): void {\n    if (value !== null && value !== undefined) {\n      this._header.set(name, value);\n    }\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if ((this._bodyContentType || '').startsWith('multipart/form-data')) {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value != null) {\n        for (const key of Object.keys(value)) {\n          const val = value[key]\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return new Blob([JSON.stringify(value)], { type: 'application/json' });\n    }\n    return new Blob([String(value)], { type: 'text/plain' });\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build<T=any>(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n  }): HttpRequest<T> {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const param of Array.from(this._path.keys())) {\n      path = path.replace(`{${param}}`, (this._path.get(param) || '').toString());\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const param of Array.from(this._query.keys())) {\n      const value = this._query.get(param);\n      if (value instanceof Array) {\n        for (const item of value) {\n          httpParams = httpParams.append(param, (item !== undefined && item !== null ? item : '').toString());\n        }\n      } else {\n        httpParams = httpParams.set(param, (value !== undefined && value !== null ? value : '').toString());\n      }\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const param of Array.from(this._header.keys())) {\n      const value = this._header.get(param);\n      if (value instanceof Array) {\n        for (const item of value) {\n          httpHeaders = httpHeaders.append(param, (item !== undefined && item !== null ? item : '').toString());\n        }\n      } else {\n        httpHeaders = httpHeaders.set(param, (value !== undefined && value !== null ? value : '').toString());\n      }\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest<T>(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress\n    });\n  }\n}\n\n","export { UtilsService } from './services/utils.service';\nexport { AuthzResolverService } from './services/authz-resolver.service';\nexport { AttributesManagerService } from './services/attributes-manager.service';\nexport { DatabaseManagerService } from './services/database-manager.service';\nexport { ExtSourcesManagerService } from './services/ext-sources-manager.service';\nexport { UsersManagerService } from './services/users-manager.service';\nexport { MembersManagerService } from './services/members-manager.service';\nexport { FacilitiesManagerService } from './services/facilities-manager.service';\nexport { OwnersManagerService } from './services/owners-manager.service';\nexport { GroupsManagerService } from './services/groups-manager.service';\nexport { ResourcesManagerService } from './services/resources-manager.service';\nexport { VosManagerService } from './services/vos-manager.service';\nexport { RegistrarManagerService } from './services/registrar-manager.service';\nexport { ServicesManagerService } from './services/services-manager.service';\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { Attribute } from '../models/attribute';\nimport { AttributeDefinition } from '../models/attribute-definition';\n\n\n/**\n * AttributesManager RPC API in Perun\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AttributesManagerService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getFacilityResourceUserMemberAttributes\n   */\n  static readonly GetFacilityResourceUserMemberAttributesPath = '/json/attributesManager/getAttributes/f-r-u-m';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilityResourceUserMemberAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityResourceUserMemberAttributes$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetFacilityResourceUserMemberAttributesPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('resource', params.resource);\n      rb.query('user', params.user);\n      rb.query('member', params.member);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilityResourceUserMemberAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityResourceUserMemberAttributes(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n  }): Observable<void> {\n\n    return this.getFacilityResourceUserMemberAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getFacilityUserAttributes\n   */\n  static readonly GetFacilityUserAttributesPath = '/json/attributesManager/getAttributes/f-u';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilityUserAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityUserAttributes$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetFacilityUserAttributesPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('user', params.user);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilityUserAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityUserAttributes(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<void> {\n\n    return this.getFacilityUserAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getFacilityAttributesByNames\n   */\n  static readonly GetFacilityAttributesByNamesPath = '/json/attributesManager/getAttributes/f-names';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilityAttributesByNames()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityAttributesByNames$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetFacilityAttributesByNamesPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('attrNames[]', params.attrNames);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilityAttributesByNames$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityAttributesByNames(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<void> {\n\n    return this.getFacilityAttributesByNames$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getFacilityAttributes\n   */\n  static readonly GetFacilityAttributesPath = '/json/attributesManager/getAttributes/f';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilityAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityAttributes$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetFacilityAttributesPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilityAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityAttributes(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.getFacilityAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getVoAttributesByNames\n   */\n  static readonly GetVoAttributesByNamesPath = '/json/attributesManager/getAttributes/vo-names';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getVoAttributesByNames()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoAttributesByNames$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetVoAttributesByNamesPath, 'get');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('attrNames[]', params.attrNames);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getVoAttributesByNames$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoAttributesByNames(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<void> {\n\n    return this.getVoAttributesByNames$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getVoAttributes\n   */\n  static readonly GetVoAttributesPath = '/json/attributesManager/getAttributes/vo';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getVoAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoAttributes$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetVoAttributesPath, 'get');\n    if (params) {\n\n      rb.query('vo', params.vo);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getVoAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoAttributes(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n  }): Observable<void> {\n\n    return this.getVoAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberResourceAndUserFacilityAttributesByNames\n   */\n  static readonly GetMemberResourceAndUserFacilityAttributesByNamesPath = '/json/attributesManager/getAttributes/m-r-names-wu';\n\n  /**\n   * Gets selected non-empty attributes associated with the member and the resource.\n   * It returns member and member-resource attributes and also user and user-facility attributes if\n   * workWithUserAttributes is true.\n   * Attributes are selected by list of attr_names. Empty list means all attributes.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberResourceAndUserFacilityAttributesByNames()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberResourceAndUserFacilityAttributesByNames$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n    /**\n     * flag to work with user attributes\n     */\n    workWithUserAttributes: boolean;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberResourceAndUserFacilityAttributesByNamesPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('resource', params.resource);\n      rb.query('attrNames[]', params.attrNames);\n      rb.query('workWithUserAttributes', params.workWithUserAttributes);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Gets selected non-empty attributes associated with the member and the resource.\n   * It returns member and member-resource attributes and also user and user-facility attributes if\n   * workWithUserAttributes is true.\n   * Attributes are selected by list of attr_names. Empty list means all attributes.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberResourceAndUserFacilityAttributesByNames$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberResourceAndUserFacilityAttributesByNames(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n    /**\n     * flag to work with user attributes\n     */\n    workWithUserAttributes: boolean;\n\n  }): Observable<void> {\n\n    return this.getMemberResourceAndUserFacilityAttributesByNames$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberResourceAndUserFacilityAttributes\n   */\n  static readonly GetMemberResourceAndUserFacilityAttributesPath = '/json/attributesManager/getAttributes/m-r-wu';\n\n  /**\n   * Gets all non-empty attributes associated with the member on the resource and if workWithUserAttributes is\n   * true, gets also all non-empty user, user-facility and member attributes.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberResourceAndUserFacilityAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberResourceAndUserFacilityAttributes$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * flag to work with user attributes\n     */\n    workWithUserAttributes: boolean;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberResourceAndUserFacilityAttributesPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('resource', params.resource);\n      rb.query('workWithUserAttributes', params.workWithUserAttributes);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Gets all non-empty attributes associated with the member on the resource and if workWithUserAttributes is\n   * true, gets also all non-empty user, user-facility and member attributes.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberResourceAndUserFacilityAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberResourceAndUserFacilityAttributes(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * flag to work with user attributes\n     */\n    workWithUserAttributes: boolean;\n\n  }): Observable<void> {\n\n    return this.getMemberResourceAndUserFacilityAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getResourceGroupMemberAttributesByNames\n   */\n  static readonly GetResourceGroupMemberAttributesByNamesPath = '/json/attributesManager/getAttributes/r-g-m-names';\n\n  /**\n   * Get all attributes by the list of attrNames if they are in one of these namespaces:\n   * - member\n   * - group\n   * - member-group\n   * - resource\n   * - member-resource\n   * - group-resource\n   * - user (get from member object)\n   * - facility (get from resource object)\n   * - user-facility\n   * Returns all attributes even if they are empty or virtual.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getResourceGroupMemberAttributesByNames()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceGroupMemberAttributesByNames$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetResourceGroupMemberAttributesByNamesPath, 'get');\n    if (params) {\n\n      rb.query('resource', params.resource);\n      rb.query('group', params.group);\n      rb.query('member', params.member);\n      rb.query('attrNames[]', params.attrNames);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all attributes by the list of attrNames if they are in one of these namespaces:\n   * - member\n   * - group\n   * - member-group\n   * - resource\n   * - member-resource\n   * - group-resource\n   * - user (get from member object)\n   * - facility (get from resource object)\n   * - user-facility\n   * Returns all attributes even if they are empty or virtual.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getResourceGroupMemberAttributesByNames$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceGroupMemberAttributesByNames(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<void> {\n\n    return this.getResourceGroupMemberAttributesByNames$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberResourceAttributes\n   */\n  static readonly GetMemberResourceAttributesPath = '/json/attributesManager/getAttributes/m-r';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberResourceAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberResourceAttributes$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberResourceAttributesPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('resource', params.resource);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberResourceAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberResourceAttributes(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<void> {\n\n    return this.getMemberResourceAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getResourceGroupAndGroupAttributesByNames\n   */\n  static readonly GetResourceGroupAndGroupAttributesByNamesPath = '/json/attributesManager/getAttributes/r-g-names-wg';\n\n  /**\n   * Get all attributes associated with the group and the resource which have their name in list attrNames (empty too).\n   * Virtual attributes too.\n   * If workWithGroupAttributes is true, return also all group attributes in list of attrNames (with virtual attributes too).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getResourceGroupAndGroupAttributesByNames()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceGroupAndGroupAttributesByNames$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n    /**\n     * flag to work with group attributes\n     */\n    workWithGroupAttributes: boolean;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetResourceGroupAndGroupAttributesByNamesPath, 'get');\n    if (params) {\n\n      rb.query('resource', params.resource);\n      rb.query('group', params.group);\n      rb.query('attrNames[]', params.attrNames);\n      rb.query('workWithGroupAttributes', params.workWithGroupAttributes);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all attributes associated with the group and the resource which have their name in list attrNames (empty too).\n   * Virtual attributes too.\n   * If workWithGroupAttributes is true, return also all group attributes in list of attrNames (with virtual attributes too).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getResourceGroupAndGroupAttributesByNames$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceGroupAndGroupAttributesByNames(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n    /**\n     * flag to work with group attributes\n     */\n    workWithGroupAttributes: boolean;\n\n  }): Observable<void> {\n\n    return this.getResourceGroupAndGroupAttributesByNames$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getResourceGroupAndGroupAttributes\n   */\n  static readonly GetResourceGroupAndGroupAttributesPath = '/json/attributesManager/getAttributes/r-g-wg';\n\n  /**\n   * Get all non-empty attributes associated with the group and resource. Virtual attributes too.\n   * If workWithGroupAttributes is true, return also all group attributes.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getResourceGroupAndGroupAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceGroupAndGroupAttributes$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * flag to work with group attributes\n     */\n    workWithGroupAttributes: boolean;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetResourceGroupAndGroupAttributesPath, 'get');\n    if (params) {\n\n      rb.query('resource', params.resource);\n      rb.query('group', params.group);\n      rb.query('workWithGroupAttributes', params.workWithGroupAttributes);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all non-empty attributes associated with the group and resource. Virtual attributes too.\n   * If workWithGroupAttributes is true, return also all group attributes.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getResourceGroupAndGroupAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceGroupAndGroupAttributes(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * flag to work with group attributes\n     */\n    workWithGroupAttributes: boolean;\n\n  }): Observable<void> {\n\n    return this.getResourceGroupAndGroupAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getResourceGroupAttributes\n   */\n  static readonly GetResourceGroupAttributesPath = '/json/attributesManager/getAttributes/r-g';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getResourceGroupAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceGroupAttributes$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetResourceGroupAttributesPath, 'get');\n    if (params) {\n\n      rb.query('resource', params.resource);\n      rb.query('group', params.group);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getResourceGroupAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceGroupAttributes(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n  }): Observable<void> {\n\n    return this.getResourceGroupAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getResourceAttributesByNames\n   */\n  static readonly GetResourceAttributesByNamesPath = '/json/attributesManager/getAttributes/r-names';\n\n  /**\n   * Get all attributes associated with the resource which have name in list attrNames (empty too).\n   * Virtual attributes too.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getResourceAttributesByNames()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceAttributesByNames$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetResourceAttributesByNamesPath, 'get');\n    if (params) {\n\n      rb.query('resource', params.resource);\n      rb.query('attrNames[]', params.attrNames);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all attributes associated with the resource which have name in list attrNames (empty too).\n   * Virtual attributes too.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getResourceAttributesByNames$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceAttributesByNames(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<void> {\n\n    return this.getResourceAttributesByNames$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getResourceAttributes\n   */\n  static readonly GetResourceAttributesPath = '/json/attributesManager/getAttributes/r';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getResourceAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceAttributes$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetResourceAttributesPath, 'get');\n    if (params) {\n\n      rb.query('resource', params.resource);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getResourceAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceAttributes(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<void> {\n\n    return this.getResourceAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberGroupAndUserAttributesByNames\n   */\n  static readonly GetMemberGroupAndUserAttributesByNamesPath = '/json/attributesManager/getAttributes/m-g-names-wu';\n\n  /**\n   * Get all attributes associated with the member in the group which have name in list attrNames (empty too).\n   * If workWithUserAttribute is true, return also all user attributes in list of attrNames (with virtual attributes too).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberGroupAndUserAttributesByNames()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberGroupAndUserAttributesByNames$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n    /**\n     * flag to work with user attributes\n     */\n    workWithUserAttributes: boolean;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberGroupAndUserAttributesByNamesPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('group', params.group);\n      rb.query('attrNames[]', params.attrNames);\n      rb.query('workWithUserAttributes', params.workWithUserAttributes);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all attributes associated with the member in the group which have name in list attrNames (empty too).\n   * If workWithUserAttribute is true, return also all user attributes in list of attrNames (with virtual attributes too).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberGroupAndUserAttributesByNames$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberGroupAndUserAttributesByNames(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n    /**\n     * flag to work with user attributes\n     */\n    workWithUserAttributes: boolean;\n\n  }): Observable<void> {\n\n    return this.getMemberGroupAndUserAttributesByNames$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberAndUserAttributesByNames\n   */\n  static readonly GetMemberAndUserAttributesByNamesPath = '/json/attributesManager/getAttributes/m-names-wu';\n\n  /**\n   * Get all attributes associated with the member which have name in list attrNames (empty too).\n   * Virtual attributes too.\n   * If workWithUserAttribute is true, return also all user attributes in list of attrNames (with virtual attributes too).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberAndUserAttributesByNames()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberAndUserAttributesByNames$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n    /**\n     * flag to work with user attributes\n     */\n    workWithUserAttributes: boolean;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberAndUserAttributesByNamesPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('attrNames[]', params.attrNames);\n      rb.query('workWithUserAttributes', params.workWithUserAttributes);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all attributes associated with the member which have name in list attrNames (empty too).\n   * Virtual attributes too.\n   * If workWithUserAttribute is true, return also all user attributes in list of attrNames (with virtual attributes too).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberAndUserAttributesByNames$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberAndUserAttributesByNames(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n    /**\n     * flag to work with user attributes\n     */\n    workWithUserAttributes: boolean;\n\n  }): Observable<void> {\n\n    return this.getMemberAndUserAttributesByNames$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberAndUserAttributes\n   */\n  static readonly GetMemberAndUserAttributesPath = '/json/attributesManager/getAttributes/m-wu';\n\n  /**\n   * Get all non-empty attributes associated with the member and if workWithUserAttributes is\n   * true, get all non-empty attributes associated with user, who is this member.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberAndUserAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberAndUserAttributes$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * flag to work with user attributes\n     */\n    workWithUserAttributes: boolean;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberAndUserAttributesPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('workWithUserAttributes', params.workWithUserAttributes);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all non-empty attributes associated with the member and if workWithUserAttributes is\n   * true, get all non-empty attributes associated with user, who is this member.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberAndUserAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberAndUserAttributes(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * flag to work with user attributes\n     */\n    workWithUserAttributes: boolean;\n\n  }): Observable<void> {\n\n    return this.getMemberAndUserAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberGroupAttributesByNames\n   */\n  static readonly GetMemberGroupAttributesByNamesPath = '/json/attributesManager/getAttributes/m-g-names';\n\n  /**\n   * Get all attributes (empty and virtual too)associated with the member in the group which have name in list attrNames.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberGroupAttributesByNames()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberGroupAttributesByNames$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberGroupAttributesByNamesPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('group', params.group);\n      rb.query('attrNames[]', params.attrNames);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all attributes (empty and virtual too)associated with the member in the group which have name in list attrNames.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberGroupAttributesByNames$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberGroupAttributesByNames(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<void> {\n\n    return this.getMemberGroupAttributesByNames$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberAttributesByNames\n   */\n  static readonly GetMemberAttributesByNamesPath = '/json/attributesManager/getAttributes/m-names';\n\n  /**\n   * Get all attributes associated with the member which have name in list attrNames (empty too).\n   * Virtual attribute too.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberAttributesByNames()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberAttributesByNames$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberAttributesByNamesPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('attrNames[]', params.attrNames);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all attributes associated with the member which have name in list attrNames (empty too).\n   * Virtual attribute too.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberAttributesByNames$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberAttributesByNames(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<void> {\n\n    return this.getMemberAttributesByNames$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberGroupAttributes\n   */\n  static readonly GetMemberGroupAttributesPath = '/json/attributesManager/getAttributes/m-g';\n\n  /**\n   * Get all non-empty attributes associated with the member in the group.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberGroupAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberGroupAttributes$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberGroupAttributesPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('group', params.group);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all non-empty attributes associated with the member in the group.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberGroupAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberGroupAttributes(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n  }): Observable<void> {\n\n    return this.getMemberGroupAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberAttributes\n   */\n  static readonly GetMemberAttributesPath = '/json/attributesManager/getAttributes/m';\n\n  /**\n   * Get all non-empty attributes associated with the member.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberAttributes$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberAttributesPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all non-empty attributes associated with the member.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberAttributes(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n  }): Observable<void> {\n\n    return this.getMemberAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getUserAttributesByNames\n   */\n  static readonly GetUserAttributesByNamesPath = '/json/attributesManager/getAttributes/u-names';\n\n  /**\n   * Get all attributes associated with the user which have name in list attrNames (empty too).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getUserAttributesByNames()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserAttributesByNames$Response(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetUserAttributesByNamesPath, 'get');\n    if (params) {\n\n      rb.query('user', params.user);\n      rb.query('attrNames[]', params.attrNames);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all attributes associated with the user which have name in list attrNames (empty too).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getUserAttributesByNames$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserAttributesByNames(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<void> {\n\n    return this.getUserAttributesByNames$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getUserAttributes\n   */\n  static readonly GetUserAttributesPath = '/json/attributesManager/getAttributes/u';\n\n  /**\n   * Get all non-empty attributes associated with the user.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getUserAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserAttributes$Response(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetUserAttributesPath, 'get');\n    if (params) {\n\n      rb.query('user', params.user);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all non-empty attributes associated with the user.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getUserAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserAttributes(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<void> {\n\n    return this.getUserAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getGroupAttributesByNames\n   */\n  static readonly GetGroupAttributesByNamesPath = '/json/attributesManager/getAttributes/g-names';\n\n  /**\n   * Get all attributes associated with the group which have name in list attrNames (empty too).\n   * Virtual attribute too.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getGroupAttributesByNames()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupAttributesByNames$Response(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetGroupAttributesByNamesPath, 'get');\n    if (params) {\n\n      rb.query('group', params.group);\n      rb.query('attrNames[]', params.attrNames);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all attributes associated with the group which have name in list attrNames (empty too).\n   * Virtual attribute too.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getGroupAttributesByNames$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupAttributesByNames(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<void> {\n\n    return this.getGroupAttributesByNames$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getGroupAttributes\n   */\n  static readonly GetGroupAttributesPath = '/json/attributesManager/getAttributes/g';\n\n  /**\n   * Get all non-empty attributes associated with the group.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getGroupAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupAttributes$Response(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetGroupAttributesPath, 'get');\n    if (params) {\n\n      rb.query('group', params.group);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all non-empty attributes associated with the group.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getGroupAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupAttributes(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n  }): Observable<void> {\n\n    return this.getGroupAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getHostAttributes\n   */\n  static readonly GetHostAttributesPath = '/json/attributesManager/getAttributes/h';\n\n  /**\n   * Get all non-empty attributes associated with the host.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getHostAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getHostAttributes$Response(params: {\n\n    /**\n     * id of Host\n     */\n    host: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetHostAttributesPath, 'get');\n    if (params) {\n\n      rb.query('host', params.host);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all non-empty attributes associated with the host.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getHostAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getHostAttributes(params: {\n\n    /**\n     * id of Host\n     */\n    host: number;\n\n  }): Observable<void> {\n\n    return this.getHostAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getEntitylessAttributesByKey\n   */\n  static readonly GetEntitylessAttributesByKeyPath = '/json/attributesManager/getAttributes/key';\n\n  /**\n   * Get all entityless attributes with subject equaled String key.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getEntitylessAttributesByKey()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getEntitylessAttributesByKey$Response(params: {\n\n    /**\n     * key for entityless attributes\n     */\n    key: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetEntitylessAttributesByKeyPath, 'get');\n    if (params) {\n\n      rb.query('key', params.key);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all entityless attributes with subject equaled String key.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getEntitylessAttributesByKey$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getEntitylessAttributesByKey(params: {\n\n    /**\n     * key for entityless attributes\n     */\n    key: string;\n\n  }): Observable<void> {\n\n    return this.getEntitylessAttributesByKey$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getUserExtSourceAttributesByNames\n   */\n  static readonly GetUserExtSourceAttributesByNamesPath = '/json/attributesManager/getAttributes/ues-names';\n\n  /**\n   * Get all attributes associated with the userExtSource which have name in list attrNames (empty too).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getUserExtSourceAttributesByNames()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserExtSourceAttributesByNames$Response(params: {\n\n    /**\n     * id of UserExtSource\n     */\n    userExtSource: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetUserExtSourceAttributesByNamesPath, 'get');\n    if (params) {\n\n      rb.query('userExtSource', params.userExtSource);\n      rb.query('attrNames[]', params.attrNames);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all attributes associated with the userExtSource which have name in list attrNames (empty too).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getUserExtSourceAttributesByNames$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserExtSourceAttributesByNames(params: {\n\n    /**\n     * id of UserExtSource\n     */\n    userExtSource: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n  }): Observable<void> {\n\n    return this.getUserExtSourceAttributesByNames$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getUserExtSourceAttributes\n   */\n  static readonly GetUserExtSourceAttributesPath = '/json/attributesManager/getAttributes/ues';\n\n  /**\n   * Get all non-empty attributes associated with the UserExtSource.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getUserExtSourceAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserExtSourceAttributes$Response(params: {\n\n    /**\n     * id of UserExtSource\n     */\n    userExtSource: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetUserExtSourceAttributesPath, 'get');\n    if (params) {\n\n      rb.query('userExtSource', params.userExtSource);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get all non-empty attributes associated with the UserExtSource.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getUserExtSourceAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserExtSourceAttributes(params: {\n\n    /**\n     * id of UserExtSource\n     */\n    userExtSource: number;\n\n  }): Observable<void> {\n\n    return this.getUserExtSourceAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getEntitylessAttributesByName\n   */\n  static readonly GetEntitylessAttributesByNamePath = '/json/attributesManager/getEntitylessAttributes';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getEntitylessAttributesByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getEntitylessAttributesByName$Response(params: {\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attrName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetEntitylessAttributesByNamePath, 'get');\n    if (params) {\n\n      rb.query('attrName', params.attrName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getEntitylessAttributesByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getEntitylessAttributesByName(params: {\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attrName: string;\n\n  }): Observable<void> {\n\n    return this.getEntitylessAttributesByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getEntitylessKeys\n   */\n  static readonly GetEntitylessKeysPath = '/json/attributesManager/getEntitylessKeys';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getEntitylessKeys()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getEntitylessKeys$Response(params: {\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeDefinition: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetEntitylessKeysPath, 'get');\n    if (params) {\n\n      rb.query('attributeDefinition', params.attributeDefinition);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getEntitylessKeys$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getEntitylessKeys(params: {\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeDefinition: number;\n\n  }): Observable<void> {\n\n    return this.getEntitylessKeys$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setFacilityResourceGroupUserMemberAttributes\n   */\n  static readonly SetFacilityResourceGroupUserMemberAttributesPath = '/json/attributesManager/setAttributes/f-r-g-u-m';\n\n  /**\n   * Store the member, user, member-group, member-resource and user-facility attributes.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   * Group and group-resource attributes are not supported in this context.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setFacilityResourceGroupUserMemberAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setFacilityResourceGroupUserMemberAttributes$Response(params: {\n\n    body: { 'facility': number, 'resource': number, 'group': number, 'user': number, 'member': number, 'attributes': Array<Attribute> }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetFacilityResourceGroupUserMemberAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the member, user, member-group, member-resource and user-facility attributes.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   * Group and group-resource attributes are not supported in this context.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setFacilityResourceGroupUserMemberAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setFacilityResourceGroupUserMemberAttributes(params: {\n\n    body: { 'facility': number, 'resource': number, 'group': number, 'user': number, 'member': number, 'attributes': Array<Attribute> }\n  }): Observable<void> {\n\n    return this.setFacilityResourceGroupUserMemberAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setFacilityResourceUserMemberAttributes\n   */\n  static readonly SetFacilityResourceUserMemberAttributesPath = '/json/attributesManager/setAttributes/f-r-u-m';\n\n  /**\n   * Store the member, user, member-resource and user-facility attributes.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setFacilityResourceUserMemberAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setFacilityResourceUserMemberAttributes$Response(params: {\n\n    body: { 'facility': number, 'resource': number, 'user': number, 'member': number, 'attributes': Array<Attribute> }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetFacilityResourceUserMemberAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the member, user, member-resource and user-facility attributes.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setFacilityResourceUserMemberAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setFacilityResourceUserMemberAttributes(params: {\n\n    body: { 'facility': number, 'resource': number, 'user': number, 'member': number, 'attributes': Array<Attribute> }\n  }): Observable<void> {\n\n    return this.setFacilityResourceUserMemberAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setFacilityUserAttributes\n   */\n  static readonly SetFacilityUserAttributesPath = '/json/attributesManager/setAttributes/f-u';\n\n  /**\n   * Store the attributes associated with the facility and user combination.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setFacilityUserAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setFacilityUserAttributes$Response(params: {\n\n    body: { 'facility': number, 'user': number, 'attributes': Array<Attribute> }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetFacilityUserAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with the facility and user combination.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setFacilityUserAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setFacilityUserAttributes(params: {\n\n    body: { 'facility': number, 'user': number, 'attributes': Array<Attribute> }\n  }): Observable<void> {\n\n    return this.setFacilityUserAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setFacilityAttributes\n   */\n  static readonly SetFacilityAttributesPath = '/json/attributesManager/setAttributes/f';\n\n  /**\n   * Store the attributes associated with the facility.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setFacilityAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setFacilityAttributes$Response(params: {\n\n    body: { 'facility': number, 'attributes': Array<Attribute> }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetFacilityAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with the facility.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setFacilityAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setFacilityAttributes(params: {\n\n    body: { 'facility': number, 'attributes': Array<Attribute> }\n  }): Observable<void> {\n\n    return this.setFacilityAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setVoAttributes\n   */\n  static readonly SetVoAttributesPath = '/json/attributesManager/setAttributes/vo';\n\n  /**\n   * Store the attributes associated with the vo.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setVoAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setVoAttributes$Response(params: {\n\n    body: { 'vo': number, 'attributes': Array<Attribute> }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetVoAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with the vo.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setVoAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setVoAttributes(params: {\n\n    body: { 'vo': number, 'attributes': Array<Attribute> }\n  }): Observable<void> {\n\n    return this.setVoAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setMemberResourceAndUserAttributes\n   */\n  static readonly SetMemberResourceAndUserAttributesPath = '/json/attributesManager/setAttributes/m-r-wu';\n\n  /**\n   * Store the attributes associated with the resource and member combination.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   * If workWithUserAttributes is true, the method stores also the attributes associated with user, user-facility and member.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setMemberResourceAndUserAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberResourceAndUserAttributes$Response(params: {\n\n    body: { 'member': number, 'resource': number, 'attributes': Array<Attribute>, 'workWithUserAttributes': boolean }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetMemberResourceAndUserAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with the resource and member combination.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   * If workWithUserAttributes is true, the method stores also the attributes associated with user, user-facility and member.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setMemberResourceAndUserAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberResourceAndUserAttributes(params: {\n\n    body: { 'member': number, 'resource': number, 'attributes': Array<Attribute>, 'workWithUserAttributes': boolean }\n  }): Observable<void> {\n\n    return this.setMemberResourceAndUserAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setMemberResourceAttributes\n   */\n  static readonly SetMemberResourceAttributesPath = '/json/attributesManager/setAttributes/m-r';\n\n  /**\n   * Store the attributes associated with the resource and member combination.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setMemberResourceAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberResourceAttributes$Response(params: {\n\n    body: { 'member': number, 'resource': number, 'attributes': Array<Attribute> }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetMemberResourceAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with the resource and member combination.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setMemberResourceAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberResourceAttributes(params: {\n\n    body: { 'member': number, 'resource': number, 'attributes': Array<Attribute> }\n  }): Observable<void> {\n\n    return this.setMemberResourceAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setResourceGroupWithGroupAttributes\n   */\n  static readonly SetResourceGroupWithGroupAttributesPath = '/json/attributesManager/setAttributes/r-g-wg';\n\n  /**\n   * Store the attributes associated with group and resource, if workWithUserAttributes is true then also from group itself.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setResourceGroupWithGroupAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setResourceGroupWithGroupAttributes$Response(params: {\n\n    body: { 'resource': number, 'group': number, 'attributes': Array<Attribute>, 'workWithGroupAttributes': boolean }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetResourceGroupWithGroupAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with group and resource, if workWithUserAttributes is true then also from group itself.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setResourceGroupWithGroupAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setResourceGroupWithGroupAttributes(params: {\n\n    body: { 'resource': number, 'group': number, 'attributes': Array<Attribute>, 'workWithGroupAttributes': boolean }\n  }): Observable<void> {\n\n    return this.setResourceGroupWithGroupAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setResourceGroupAttributes\n   */\n  static readonly SetResourceGroupAttributesPath = '/json/attributesManager/setAttributes/r-g';\n\n  /**\n   * Store the attributes associated with the group on resource.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setResourceGroupAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setResourceGroupAttributes$Response(params: {\n\n    body: { 'resource': number, 'group': number, 'attributes': Array<Attribute> }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetResourceGroupAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with the group on resource.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setResourceGroupAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setResourceGroupAttributes(params: {\n\n    body: { 'resource': number, 'group': number, 'attributes': Array<Attribute> }\n  }): Observable<void> {\n\n    return this.setResourceGroupAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setResourceAttributes\n   */\n  static readonly SetResourceAttributesPath = '/json/attributesManager/setAttributes/r';\n\n  /**\n   * Store the attributes associated with the resource.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setResourceAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setResourceAttributes$Response(params: {\n\n    body: { 'resource': number, 'attributes': Array<Attribute> }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetResourceAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with the resource.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setResourceAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setResourceAttributes(params: {\n\n    body: { 'resource': number, 'attributes': Array<Attribute> }\n  }): Observable<void> {\n\n    return this.setResourceAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setMemberGroupWithUserAttributes\n   */\n  static readonly SetMemberGroupWithUserAttributesPath = '/json/attributesManager/setAttributes/m-g-wu';\n\n  /**\n   * Store the attributes associated with the member and group combination.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   * If workWithUserAttributes is true, the method stores also the attributes associated with user and member.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setMemberGroupWithUserAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberGroupWithUserAttributes$Response(params: {\n\n    body: { 'member': number, 'group': number, 'attributes': Array<Attribute>, 'workWithUserAttributes': boolean }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetMemberGroupWithUserAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with the member and group combination.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   * If workWithUserAttributes is true, the method stores also the attributes associated with user and member.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setMemberGroupWithUserAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberGroupWithUserAttributes(params: {\n\n    body: { 'member': number, 'group': number, 'attributes': Array<Attribute>, 'workWithUserAttributes': boolean }\n  }): Observable<void> {\n\n    return this.setMemberGroupWithUserAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setMemberWithUserAttributes\n   */\n  static readonly SetMemberWithUserAttributesPath = '/json/attributesManager/setAttributes/m-wu';\n\n  /**\n   * Store the attributes associated with member and user (which we get from this member) if workWithUserAttributes is true.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setMemberWithUserAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberWithUserAttributes$Response(params: {\n\n    body: { 'member': number, 'attributes': Array<Attribute>, 'workWithUserAttributes': boolean }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetMemberWithUserAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with member and user (which we get from this member) if workWithUserAttributes is true.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setMemberWithUserAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberWithUserAttributes(params: {\n\n    body: { 'member': number, 'attributes': Array<Attribute>, 'workWithUserAttributes': boolean }\n  }): Observable<void> {\n\n    return this.setMemberWithUserAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setMemberGroupAttributes\n   */\n  static readonly SetMemberGroupAttributesPath = '/json/attributesManager/setAttributes/m-g';\n\n  /**\n   * Store the attributes associated with the member and group combination.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setMemberGroupAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberGroupAttributes$Response(params: {\n\n    body: { 'member': number, 'group': number, 'attributes': Array<Attribute> }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetMemberGroupAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with the member and group combination.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setMemberGroupAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberGroupAttributes(params: {\n\n    body: { 'member': number, 'group': number, 'attributes': Array<Attribute> }\n  }): Observable<void> {\n\n    return this.setMemberGroupAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setMemberAttributes\n   */\n  static readonly SetMemberAttributesPath = '/json/attributesManager/setAttributes/m';\n\n  /**\n   * Store the attributes associated with the member.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setMemberAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberAttributes$Response(params: {\n\n    body: { 'member': number, 'attributes': Array<Attribute> }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetMemberAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with the member.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setMemberAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberAttributes(params: {\n\n    body: { 'member': number, 'attributes': Array<Attribute> }\n  }): Observable<void> {\n\n    return this.setMemberAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setUserAttributes\n   */\n  static readonly SetUserAttributesPath = '/json/attributesManager/setAttributes/u';\n\n  /**\n   * Store the attributes associated with the user.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setUserAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setUserAttributes$Response(params: {\n\n    body: { 'user': number, 'attributes': Array<Attribute> }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetUserAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with the user.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setUserAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setUserAttributes(params: {\n\n    body: { 'user': number, 'attributes': Array<Attribute> }\n  }): Observable<void> {\n\n    return this.setUserAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setGroupAttributes\n   */\n  static readonly SetGroupAttributesPath = '/json/attributesManager/setAttributes/g';\n\n  /**\n   * Store the attributes associated with the group.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setGroupAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setGroupAttributes$Response(params: {\n\n    body: { 'group': number, 'attributes': Array<Attribute> }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetGroupAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with the group.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setGroupAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setGroupAttributes(params: {\n\n    body: { 'group': number, 'attributes': Array<Attribute> }\n  }): Observable<void> {\n\n    return this.setGroupAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setHostAttributes\n   */\n  static readonly SetHostAttributesPath = '/json/attributesManager/setAttributes/h';\n\n  /**\n   * Store the attributes associated with the host.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setHostAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setHostAttributes$Response(params: {\n\n    body: { 'host': number, 'attributes': Array<Attribute> }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetHostAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with the host.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setHostAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setHostAttributes(params: {\n\n    body: { 'host': number, 'attributes': Array<Attribute> }\n  }): Observable<void> {\n\n    return this.setHostAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setUserExtSourceAttributes\n   */\n  static readonly SetUserExtSourceAttributesPath = '/json/attributesManager/setAttributes/ues';\n\n  /**\n   * Store the attributes associated with the UserExtSource.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setUserExtSourceAttributes()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setUserExtSourceAttributes$Response(params: {\n\n    body: { 'userExtSource': number, 'attributes': Array<Attribute> }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetUserExtSourceAttributesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Store the attributes associated with the UserExtSource.\n   * If an attribute is core attribute then the attribute isn't stored (It's skipped without any notification).\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setUserExtSourceAttributes$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setUserExtSourceAttributes(params: {\n\n    body: { 'userExtSource': number, 'attributes': Array<Attribute> }\n  }): Observable<void> {\n\n    return this.setUserExtSourceAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getFacilityAttributeByName\n   */\n  static readonly GetFacilityAttributeByNamePath = '/json/attributesManager/getAttribute/name-facility';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for facility and attribute name.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilityAttributeByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityAttributeByName$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetFacilityAttributeByNamePath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('attributeName', params.attributeName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for facility and attribute name.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilityAttributeByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityAttributeByName(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<void> {\n\n    return this.getFacilityAttributeByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getFacilityAttributeById\n   */\n  static readonly GetFacilityAttributeByIdPath = '/json/attributesManager/getAttribute/id-facility';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for facility and attribute id.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilityAttributeById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityAttributeById$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetFacilityAttributeByIdPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('attributeId', params.attributeId);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for facility and attribute id.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilityAttributeById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityAttributeById(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<void> {\n\n    return this.getFacilityAttributeById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getUserAttributeByName\n   */\n  static readonly GetUserAttributeByNamePath = '/json/attributesManager/getAttribute/name-user';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for user and attribute name.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getUserAttributeByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserAttributeByName$Response(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetUserAttributeByNamePath, 'get');\n    if (params) {\n\n      rb.query('user', params.user);\n      rb.query('attributeName', params.attributeName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for user and attribute name.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getUserAttributeByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserAttributeByName(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<void> {\n\n    return this.getUserAttributeByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getUserAttributeById\n   */\n  static readonly GetUserAttributeByIdPath = '/json/attributesManager/getAttribute/id-user';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for user and attribute id.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getUserAttributeById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserAttributeById$Response(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetUserAttributeByIdPath, 'get');\n    if (params) {\n\n      rb.query('user', params.user);\n      rb.query('attributeId', params.attributeId);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for user and attribute id.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getUserAttributeById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserAttributeById(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<void> {\n\n    return this.getUserAttributeById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getUserFacilityAttributeByName\n   */\n  static readonly GetUserFacilityAttributeByNamePath = '/json/attributesManager/getAttribute/name-user_facility';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for user, facility and attribute name.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getUserFacilityAttributeByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserFacilityAttributeByName$Response(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetUserFacilityAttributeByNamePath, 'get');\n    if (params) {\n\n      rb.query('user', params.user);\n      rb.query('facility', params.facility);\n      rb.query('attributeName', params.attributeName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for user, facility and attribute name.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getUserFacilityAttributeByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserFacilityAttributeByName(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<void> {\n\n    return this.getUserFacilityAttributeByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getUserFacilityAttributeById\n   */\n  static readonly GetUserFacilityAttributeByIdPath = '/json/attributesManager/getAttribute/id-user_facility';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for user, facility and attribute id.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getUserFacilityAttributeById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserFacilityAttributeById$Response(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetUserFacilityAttributeByIdPath, 'get');\n    if (params) {\n\n      rb.query('user', params.user);\n      rb.query('facility', params.facility);\n      rb.query('attributeId', params.attributeId);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for user, facility and attribute id.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getUserFacilityAttributeById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserFacilityAttributeById(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<void> {\n\n    return this.getUserFacilityAttributeById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getVoAttributeByName\n   */\n  static readonly GetVoAttributeByNamePath = '/json/attributesManager/getAttribute/name-vo';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for virtual organization and attribute name.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getVoAttributeByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoAttributeByName$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetVoAttributeByNamePath, 'get');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('attributeName', params.attributeName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for virtual organization and attribute name.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getVoAttributeByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoAttributeByName(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<void> {\n\n    return this.getVoAttributeByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getVoAttributeById\n   */\n  static readonly GetVoAttributeByIdPath = '/json/attributesManager/getAttribute/id-vo';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for virtual organization and attribute id.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getVoAttributeById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoAttributeById$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetVoAttributeByIdPath, 'get');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('attributeId', params.attributeId);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for virtual organization and attribute id.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getVoAttributeById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoAttributeById(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<void> {\n\n    return this.getVoAttributeById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberAttributeByName\n   */\n  static readonly GetMemberAttributeByNamePath = '/json/attributesManager/getAttribute/name-member';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for member and attribute name.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberAttributeByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberAttributeByName$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberAttributeByNamePath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('attributeName', params.attributeName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for member and attribute name.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberAttributeByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberAttributeByName(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<void> {\n\n    return this.getMemberAttributeByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberAttributeById\n   */\n  static readonly GetMemberAttributeByIdPath = '/json/attributesManager/getAttribute/id-member';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for member and attribute id.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberAttributeById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberAttributeById$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberAttributeByIdPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('attributeId', params.attributeId);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for member and attribute id.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberAttributeById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberAttributeById(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<void> {\n\n    return this.getMemberAttributeById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getGroupAttributeByName\n   */\n  static readonly GetGroupAttributeByNamePath = '/json/attributesManager/getAttribute/name-group';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for group and attribute name.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getGroupAttributeByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupAttributeByName$Response(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetGroupAttributeByNamePath, 'get');\n    if (params) {\n\n      rb.query('group', params.group);\n      rb.query('attributeName', params.attributeName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for group and attribute name.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getGroupAttributeByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupAttributeByName(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<void> {\n\n    return this.getGroupAttributeByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getGroupAttributeById\n   */\n  static readonly GetGroupAttributeByIdPath = '/json/attributesManager/getAttribute/id-group';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for group and attribute id.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getGroupAttributeById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupAttributeById$Response(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetGroupAttributeByIdPath, 'get');\n    if (params) {\n\n      rb.query('group', params.group);\n      rb.query('attributeId', params.attributeId);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for group and attribute id.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getGroupAttributeById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupAttributeById(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<void> {\n\n    return this.getGroupAttributeById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getResourceAttributeByName\n   */\n  static readonly GetResourceAttributeByNamePath = '/json/attributesManager/getAttribute/name-resource';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for resource and attribute name.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getResourceAttributeByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceAttributeByName$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetResourceAttributeByNamePath, 'get');\n    if (params) {\n\n      rb.query('resource', params.resource);\n      rb.query('attributeName', params.attributeName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for resource and attribute name.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getResourceAttributeByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceAttributeByName(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<void> {\n\n    return this.getResourceAttributeByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getResourceAttributeById\n   */\n  static readonly GetResourceAttributeByIdPath = '/json/attributesManager/getAttribute/id-resource';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for resource and attribute id.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getResourceAttributeById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceAttributeById$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetResourceAttributeByIdPath, 'get');\n    if (params) {\n\n      rb.query('resource', params.resource);\n      rb.query('attributeId', params.attributeId);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for resource and attribute id.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getResourceAttributeById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceAttributeById(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<void> {\n\n    return this.getResourceAttributeById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberGroupAttributeByName\n   */\n  static readonly GetMemberGroupAttributeByNamePath = '/json/attributesManager/getAttribute/name-member-group';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for member, group and attribute name.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberGroupAttributeByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberGroupAttributeByName$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberGroupAttributeByNamePath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('group', params.group);\n      rb.query('attributeName', params.attributeName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for member, group and attribute name.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberGroupAttributeByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberGroupAttributeByName(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<void> {\n\n    return this.getMemberGroupAttributeByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberGroupAttributeById\n   */\n  static readonly GetMemberGroupAttributeByIdPath = '/json/attributesManager/getAttribute/id-member-group';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for member, group and attribute id.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberGroupAttributeById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberGroupAttributeById$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberGroupAttributeByIdPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('group', params.group);\n      rb.query('attributeId', params.attributeId);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for member, group and attribute id.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberGroupAttributeById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberGroupAttributeById(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<void> {\n\n    return this.getMemberGroupAttributeById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberResourceAttributeByName\n   */\n  static readonly GetMemberResourceAttributeByNamePath = '/json/attributesManager/getAttribute/name-member-resource';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for member, resource and attribute name.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberResourceAttributeByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberResourceAttributeByName$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberResourceAttributeByNamePath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('resource', params.resource);\n      rb.query('attributeName', params.attributeName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for member, resource and attribute name.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberResourceAttributeByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberResourceAttributeByName(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<void> {\n\n    return this.getMemberResourceAttributeByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberResourceAttributeById\n   */\n  static readonly GetMemberResourceAttributeByIdPath = '/json/attributesManager/getAttribute/id-member-resource';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for member, resource and attribute id.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberResourceAttributeById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberResourceAttributeById$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetMemberResourceAttributeByIdPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('resource', params.resource);\n      rb.query('attributeId', params.attributeId);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for member, resource and attribute id.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberResourceAttributeById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberResourceAttributeById(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<void> {\n\n    return this.getMemberResourceAttributeById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getGroupResourceAttributeByName\n   */\n  static readonly GetGroupResourceAttributeByNamePath = '/json/attributesManager/getAttribute/name-group-resource';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for group, resource and attribute name.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getGroupResourceAttributeByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupResourceAttributeByName$Response(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetGroupResourceAttributeByNamePath, 'get');\n    if (params) {\n\n      rb.query('group', params.group);\n      rb.query('resource', params.resource);\n      rb.query('attributeName', params.attributeName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for group, resource and attribute name.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getGroupResourceAttributeByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupResourceAttributeByName(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<void> {\n\n    return this.getGroupResourceAttributeByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getGroupResourceAttributeById\n   */\n  static readonly GetGroupResourceAttributeByIdPath = '/json/attributesManager/getAttribute/id-group-resource';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for group, resource and attribute id.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getGroupResourceAttributeById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupResourceAttributeById$Response(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetGroupResourceAttributeByIdPath, 'get');\n    if (params) {\n\n      rb.query('group', params.group);\n      rb.query('resource', params.resource);\n      rb.query('attributeId', params.attributeId);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for group, resource and attribute id.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getGroupResourceAttributeById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupResourceAttributeById(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<void> {\n\n    return this.getGroupResourceAttributeById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getUserExtSourceAttributeByName\n   */\n  static readonly GetUserExtSourceAttributeByNamePath = '/json/attributesManager/getAttribute/name-ues';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for UserExtSource and attribute name.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getUserExtSourceAttributeByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserExtSourceAttributeByName$Response(params: {\n\n    /**\n     * id of UserExtSource\n     */\n    userExtSource: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetUserExtSourceAttributeByNamePath, 'get');\n    if (params) {\n\n      rb.query('userExtSource', params.userExtSource);\n      rb.query('attributeName', params.attributeName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for UserExtSource and attribute name.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getUserExtSourceAttributeByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserExtSourceAttributeByName(params: {\n\n    /**\n     * id of UserExtSource\n     */\n    userExtSource: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<void> {\n\n    return this.getUserExtSourceAttributeByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getUserExtSourceAttributeById\n   */\n  static readonly GetUserExtSourceAttributeByIdPath = '/json/attributesManager/getAttribute/id-ues';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for UserExtSource and attribute id.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getUserExtSourceAttributeById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserExtSourceAttributeById$Response(params: {\n\n    /**\n     * id of UserExtSource\n     */\n    userExtSource: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetUserExtSourceAttributeByIdPath, 'get');\n    if (params) {\n\n      rb.query('userExtSource', params.userExtSource);\n      rb.query('attributeId', params.attributeId);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for UserExtSource and attribute id.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getUserExtSourceAttributeById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserExtSourceAttributeById(params: {\n\n    /**\n     * id of UserExtSource\n     */\n    userExtSource: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<void> {\n\n    return this.getUserExtSourceAttributeById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getHostAttributeByName\n   */\n  static readonly GetHostAttributeByNamePath = '/json/attributesManager/getAttribute/name-host';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for host and attribute name.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getHostAttributeByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getHostAttributeByName$Response(params: {\n\n    /**\n     * id of Host\n     */\n    host: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetHostAttributeByNamePath, 'get');\n    if (params) {\n\n      rb.query('host', params.host);\n      rb.query('attributeName', params.attributeName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for host and attribute name.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getHostAttributeByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getHostAttributeByName(params: {\n\n    /**\n     * id of Host\n     */\n    host: number;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<void> {\n\n    return this.getHostAttributeByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getHostAttributeById\n   */\n  static readonly GetHostAttributeByIdPath = '/json/attributesManager/getAttribute/id-host';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for host and attribute id.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getHostAttributeById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getHostAttributeById$Response(params: {\n\n    /**\n     * id of Host\n     */\n    host: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetHostAttributeByIdPath, 'get');\n    if (params) {\n\n      rb.query('host', params.host);\n      rb.query('attributeId', params.attributeId);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for host and attribute id.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getHostAttributeById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getHostAttributeById(params: {\n\n    /**\n     * id of Host\n     */\n    host: number;\n\n    /**\n     * id of AttributeDefinition\n     */\n    attributeId: number;\n\n  }): Observable<void> {\n\n    return this.getHostAttributeById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getEntitylessAttributeByName\n   */\n  static readonly GetEntitylessAttributeByNamePath = '/json/attributesManager/getAttribute/name-entityless';\n\n  /**\n   * This is an overloaded method getAttribute, specialized for entityless key and attribute name.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getEntitylessAttributeByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getEntitylessAttributeByName$Response(params: {\n\n    /**\n     * key for entityless attribute\n     */\n    key: string;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetEntitylessAttributeByNamePath, 'get');\n    if (params) {\n\n      rb.query('key', params.key);\n      rb.query('attributeName', params.attributeName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This is an overloaded method getAttribute, specialized for entityless key and attribute name.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getEntitylessAttributeByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getEntitylessAttributeByName(params: {\n\n    /**\n     * key for entityless attribute\n     */\n    key: string;\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<void> {\n\n    return this.getEntitylessAttributeByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAttribute\n   */\n  static readonly GetAttributePath = '/json/attributesManager/getAttribute/any';\n\n  /**\n   * This method cannot be fully described correctly in OpenID, because it cannot describe allowed combinations of parameters.\n   * One of attributeName, attributeId is required.\n   * The other parameters specify ids that can be combined in the following ways:\n   *  (facility), (user), (user,facility), (vo), (member), (group), (resource),\n   *  (member,group), (member,resource), (group,resource),(userExtSource), (host), (key)\n   * Use the specialized methods getFacilityAttributeByName(), getMemberResourceAttributeById() etc.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAttribute()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAttribute$Response(params?: {\n\n    /**\n     * full name of attribute (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName?: string;\n\n    /**\n     * id of attribute\n     */\n    attributeId?: number;\n\n    /**\n     * id of Facility\n     */\n    facility?: number;\n\n    /**\n     * id of User\n     */\n    user?: number;\n\n    /**\n     * id of Vo\n     */\n    vo?: number;\n\n    /**\n     * id of Resource\n     */\n    resource?: number;\n\n    /**\n     * id of Member\n     */\n    member?: number;\n\n    /**\n     * id of Group\n     */\n    group?: number;\n\n    /**\n     * id of Host\n     */\n    host?: number;\n\n    /**\n     * id of UserExtSource\n     */\n    userExtSource?: number;\n\n    /**\n     * key for entityless attribute\n     */\n    key?: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetAttributePath, 'get');\n    if (params) {\n\n      rb.query('attributeName', params.attributeName);\n      rb.query('attributeId', params.attributeId);\n      rb.query('facility', params.facility);\n      rb.query('user', params.user);\n      rb.query('vo', params.vo);\n      rb.query('resource', params.resource);\n      rb.query('member', params.member);\n      rb.query('group', params.group);\n      rb.query('host', params.host);\n      rb.query('userExtSource', params.userExtSource);\n      rb.query('key', params.key);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method cannot be fully described correctly in OpenID, because it cannot describe allowed combinations of parameters.\n   * One of attributeName, attributeId is required.\n   * The other parameters specify ids that can be combined in the following ways:\n   *  (facility), (user), (user,facility), (vo), (member), (group), (resource),\n   *  (member,group), (member,resource), (group,resource),(userExtSource), (host), (key)\n   * Use the specialized methods getFacilityAttributeByName(), getMemberResourceAttributeById() etc.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAttribute$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAttribute(params?: {\n\n    /**\n     * full name of attribute (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName?: string;\n\n    /**\n     * id of attribute\n     */\n    attributeId?: number;\n\n    /**\n     * id of Facility\n     */\n    facility?: number;\n\n    /**\n     * id of User\n     */\n    user?: number;\n\n    /**\n     * id of Vo\n     */\n    vo?: number;\n\n    /**\n     * id of Resource\n     */\n    resource?: number;\n\n    /**\n     * id of Member\n     */\n    member?: number;\n\n    /**\n     * id of Group\n     */\n    group?: number;\n\n    /**\n     * id of Host\n     */\n    host?: number;\n\n    /**\n     * id of UserExtSource\n     */\n    userExtSource?: number;\n\n    /**\n     * key for entityless attribute\n     */\n    key?: string;\n\n  }): Observable<void> {\n\n    return this.getAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAttributeDefinitionByName\n   */\n  static readonly GetAttributeDefinitionByNamePath = '/json/attributesManager/getAttributeDefinition';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAttributeDefinitionByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAttributeDefinitionByName$Response(params: {\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetAttributeDefinitionByNamePath, 'get');\n    if (params) {\n\n      rb.query('attributeName', params.attributeName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAttributeDefinitionByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAttributeDefinitionByName(params: {\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n  }): Observable<void> {\n\n    return this.getAttributeDefinitionByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAllAttributeDefinitions\n   */\n  static readonly GetAllAttributeDefinitionsPath = '/json/attributesManager/getAttributesDefinition';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllAttributeDefinitions()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllAttributeDefinitions$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetAllAttributeDefinitionsPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllAttributeDefinitions$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllAttributeDefinitions(params?: {\n\n  }): Observable<void> {\n\n    return this.getAllAttributeDefinitions$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAttributeDefinitionById\n   */\n  static readonly GetAttributeDefinitionByIdPath = '/json/attributesManager/getAttributeDefinitionById';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAttributeDefinitionById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAttributeDefinitionById$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetAttributeDefinitionByIdPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAttributeDefinitionById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAttributeDefinitionById(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getAttributeDefinitionById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAttributeDefinitionsByNamespace\n   */\n  static readonly GetAttributeDefinitionsByNamespacePath = '/json/attributesManager/getAttributesDefinitionByNamespace';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAttributeDefinitionsByNamespace()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAttributeDefinitionsByNamespace$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.GetAttributeDefinitionsByNamespacePath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAttributeDefinitionsByNamespace$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAttributeDefinitionsByNamespace(params?: {\n\n  }): Observable<void> {\n\n    return this.getAttributeDefinitionsByNamespace$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setFacilityAttribute\n   */\n  static readonly SetFacilityAttributePath = '/json/attributesManager/setAttribute/facility';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setFacilityAttribute()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setFacilityAttribute$Response(params: {\n\n    body: { 'facility': number, 'attribute': Attribute }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetFacilityAttributePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setFacilityAttribute$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setFacilityAttribute(params: {\n\n    body: { 'facility': number, 'attribute': Attribute }\n  }): Observable<void> {\n\n    return this.setFacilityAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setUserAttribute\n   */\n  static readonly SetUserAttributePath = '/json/attributesManager/setAttribute/user';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setUserAttribute()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setUserAttribute$Response(params: {\n\n    body: { 'user': number, 'attribute': Attribute }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetUserAttributePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setUserAttribute$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setUserAttribute(params: {\n\n    body: { 'user': number, 'attribute': Attribute }\n  }): Observable<void> {\n\n    return this.setUserAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setUserFacilityAttribute\n   */\n  static readonly SetUserFacilityAttributePath = '/json/attributesManager/setAttribute/facility-user';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setUserFacilityAttribute()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setUserFacilityAttribute$Response(params: {\n\n    body: { 'user': number, 'facility': number, 'attribute': Attribute }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetUserFacilityAttributePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setUserFacilityAttribute$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setUserFacilityAttribute(params: {\n\n    body: { 'user': number, 'facility': number, 'attribute': Attribute }\n  }): Observable<void> {\n\n    return this.setUserFacilityAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setVoAttribute\n   */\n  static readonly SetVoAttributePath = '/json/attributesManager/setAttribute/vo';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setVoAttribute()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setVoAttribute$Response(params: {\n\n    body: { 'vo': number, 'attribute': Attribute }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetVoAttributePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setVoAttribute$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setVoAttribute(params: {\n\n    body: { 'vo': number, 'attribute': Attribute }\n  }): Observable<void> {\n\n    return this.setVoAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setMemberAttribute\n   */\n  static readonly SetMemberAttributePath = '/json/attributesManager/setAttribute/member';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setMemberAttribute()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberAttribute$Response(params: {\n\n    body: { 'member': number, 'attribute': Attribute }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetMemberAttributePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setMemberAttribute$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberAttribute(params: {\n\n    body: { 'member': number, 'attribute': Attribute }\n  }): Observable<void> {\n\n    return this.setMemberAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setGroupAttribute\n   */\n  static readonly SetGroupAttributePath = '/json/attributesManager/setAttribute/group';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setGroupAttribute()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setGroupAttribute$Response(params: {\n\n    body: { 'group': number, 'attribute': Attribute }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetGroupAttributePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setGroupAttribute$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setGroupAttribute(params: {\n\n    body: { 'group': number, 'attribute': Attribute }\n  }): Observable<void> {\n\n    return this.setGroupAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setResourceAttribute\n   */\n  static readonly SetResourceAttributePath = '/json/attributesManager/setAttribute/resource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setResourceAttribute()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setResourceAttribute$Response(params: {\n\n    body: { 'resource': number, 'attribute': Attribute }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetResourceAttributePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setResourceAttribute$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setResourceAttribute(params: {\n\n    body: { 'resource': number, 'attribute': Attribute }\n  }): Observable<void> {\n\n    return this.setResourceAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setMemberGroupAttribute\n   */\n  static readonly SetMemberGroupAttributePath = '/json/attributesManager/setAttribute/member-group';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setMemberGroupAttribute()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberGroupAttribute$Response(params: {\n\n    body: { 'member': number, 'group': number, 'attribute': Attribute }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetMemberGroupAttributePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setMemberGroupAttribute$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberGroupAttribute(params: {\n\n    body: { 'member': number, 'group': number, 'attribute': Attribute }\n  }): Observable<void> {\n\n    return this.setMemberGroupAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setMemberResourceAttribute\n   */\n  static readonly SetMemberResourceAttributePath = '/json/attributesManager/setAttribute/member-resource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setMemberResourceAttribute()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberResourceAttribute$Response(params: {\n\n    body: { 'member': number, 'resource': number, 'attribute': Attribute }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetMemberResourceAttributePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setMemberResourceAttribute$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setMemberResourceAttribute(params: {\n\n    body: { 'member': number, 'resource': number, 'attribute': Attribute }\n  }): Observable<void> {\n\n    return this.setMemberResourceAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setGroupResourceAttribute\n   */\n  static readonly SetGroupResourceAttributePath = '/json/attributesManager/setAttribute/group-resource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setGroupResourceAttribute()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setGroupResourceAttribute$Response(params: {\n\n    body: { 'group': number, 'resource': number, 'attribute': Attribute }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetGroupResourceAttributePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setGroupResourceAttribute$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setGroupResourceAttribute(params: {\n\n    body: { 'group': number, 'resource': number, 'attribute': Attribute }\n  }): Observable<void> {\n\n    return this.setGroupResourceAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setUserExtSourceAttribute\n   */\n  static readonly SetUserExtSourceAttributePath = '/json/attributesManager/setAttribute/userExtSource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setUserExtSourceAttribute()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setUserExtSourceAttribute$Response(params: {\n\n    body: { 'userExtSource': number, 'attribute': Attribute }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetUserExtSourceAttributePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setUserExtSourceAttribute$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setUserExtSourceAttribute(params: {\n\n    body: { 'userExtSource': number, 'attribute': Attribute }\n  }): Observable<void> {\n\n    return this.setUserExtSourceAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setHostAttribute\n   */\n  static readonly SetHostAttributePath = '/json/attributesManager/setAttribute/host';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setHostAttribute()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setHostAttribute$Response(params: {\n\n    body: { 'host': number, 'attribute': Attribute }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetHostAttributePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setHostAttribute$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setHostAttribute(params: {\n\n    body: { 'host': number, 'attribute': Attribute }\n  }): Observable<void> {\n\n    return this.setHostAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation setEntitylessAttribute\n   */\n  static readonly SetEntitylessAttributePath = '/json/attributesManager/setAttribute/entityless';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `setEntitylessAttribute()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setEntitylessAttribute$Response(params: {\n\n    body: { 'key': string, 'attribute': Attribute }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.SetEntitylessAttributePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `setEntitylessAttribute$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  setEntitylessAttribute(params: {\n\n    body: { 'key': string, 'attribute': Attribute }\n  }): Observable<void> {\n\n    return this.setEntitylessAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation createAttributeDefinition\n   */\n  static readonly CreateAttributeDefinitionPath = '/json/attributesManager/createAttribute';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `createAttributeDefinition()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  createAttributeDefinition$Response(params: {\n\n    body: { 'attribute': AttributeDefinition }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.CreateAttributeDefinitionPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `createAttributeDefinition$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  createAttributeDefinition(params: {\n\n    body: { 'attribute': AttributeDefinition }\n  }): Observable<void> {\n\n    return this.createAttributeDefinition$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation deleteAttributeDefinition\n   */\n  static readonly DeleteAttributeDefinitionPath = '/urlinjsonout/attributesManager/deleteAttribute';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `deleteAttributeDefinition()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  deleteAttributeDefinition$Response(params: {\n\n    /**\n     * id of AttributeDefinition\n     */\n    attribute: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.DeleteAttributeDefinitionPath, 'post');\n    if (params) {\n\n      rb.query('attribute', params.attribute);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `deleteAttributeDefinition$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  deleteAttributeDefinition(params: {\n\n    /**\n     * id of AttributeDefinition\n     */\n    attribute: number;\n\n  }): Observable<void> {\n\n    return this.deleteAttributeDefinition$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation deleteAttributeDefinitions\n   */\n  static readonly DeleteAttributeDefinitionsPath = '/urlinjsonout/attributesManager/deleteAttributes';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `deleteAttributeDefinitions()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  deleteAttributeDefinitions$Response(params: {\n\n    /**\n     * list of attribute ids List&lt;Integer&gt;\n     */\n    attributes: Array<number>;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AttributesManagerService.DeleteAttributeDefinitionsPath, 'post');\n    if (params) {\n\n      rb.query('attributes[]', params.attributes);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `deleteAttributeDefinitions$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  deleteAttributeDefinitions(params: {\n\n    /**\n     * list of attribute ids List&lt;Integer&gt;\n     */\n    attributes: Array<number>;\n\n  }): Observable<void> {\n\n    return this.deleteAttributeDefinitions$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { PerunPrincipal } from '../models/perun-principal';\n\n\n/**\n * AuthzResolver RPC API in Perun\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthzResolverService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getPerunPrincipal\n   */\n  static readonly GetPerunPrincipalPath = '/json/authzResolver/getPerunPrincipal';\n\n  /**\n   * Returns object representing the currently authenticated user.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getPerunPrincipal()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getPerunPrincipal$Response(params?: {\n\n  }): Observable<StrictHttpResponse<PerunPrincipal>> {\n\n    const rb = new RequestBuilder(this.rootUrl, AuthzResolverService.GetPerunPrincipalPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<PerunPrincipal>;\n      })\n    );\n  }\n\n  /**\n   * Returns object representing the currently authenticated user.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getPerunPrincipal$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getPerunPrincipal(params?: {\n\n  }): Observable<PerunPrincipal> {\n\n    return this.getPerunPrincipal$Response(params).pipe(\n      map((r: StrictHttpResponse<PerunPrincipal>) => r.body as PerunPrincipal)\n    );\n  }\n\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DatabaseManagerService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getCurrentDatabaseVersion\n   */\n  static readonly GetCurrentDatabaseVersionPath = '/json/databaseManager/getCurrentDatabaseVersion';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getCurrentDatabaseVersion()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getCurrentDatabaseVersion$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, DatabaseManagerService.GetCurrentDatabaseVersionPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getCurrentDatabaseVersion$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getCurrentDatabaseVersion(params?: {\n\n  }): Observable<void> {\n\n    return this.getCurrentDatabaseVersion$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getDatabaseDriverInformation\n   */\n  static readonly GetDatabaseDriverInformationPath = '/json/databaseManager/getDatabaseDriverInformation';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getDatabaseDriverInformation()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getDatabaseDriverInformation$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, DatabaseManagerService.GetDatabaseDriverInformationPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getDatabaseDriverInformation$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getDatabaseDriverInformation(params?: {\n\n  }): Observable<void> {\n\n    return this.getDatabaseDriverInformation$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getDatabaseInformation\n   */\n  static readonly GetDatabaseInformationPath = '/json/databaseManager/getDatabaseInformation';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getDatabaseInformation()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getDatabaseInformation$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, DatabaseManagerService.GetDatabaseInformationPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getDatabaseInformation$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getDatabaseInformation(params?: {\n\n  }): Observable<void> {\n\n    return this.getDatabaseInformation$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExtSourcesManagerService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getExtSourceById\n   */\n  static readonly GetExtSourceByIdPath = '/json/extSourcesManager/getExtSourceById';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getExtSourceById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getExtSourceById$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ExtSourcesManagerService.GetExtSourceByIdPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getExtSourceById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getExtSourceById(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getExtSourceById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getExtSourceByName\n   */\n  static readonly GetExtSourceByNamePath = '/json/extSourcesManager/getExtSourceByName';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getExtSourceByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getExtSourceByName$Response(params: {\n\n    /**\n     * ExtSource Name\n     */\n    name: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ExtSourcesManagerService.GetExtSourceByNamePath, 'get');\n    if (params) {\n\n      rb.query('name', params.name);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getExtSourceByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getExtSourceByName(params: {\n\n    /**\n     * ExtSource Name\n     */\n    name: string;\n\n  }): Observable<void> {\n\n    return this.getExtSourceByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getExtSources\n   */\n  static readonly GetExtSourcesPath = '/json/extSourcesManager/getExtSources';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getExtSources()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getExtSources$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ExtSourcesManagerService.GetExtSourcesPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getExtSources$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getExtSources(params?: {\n\n  }): Observable<void> {\n\n    return this.getExtSources$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { Facility } from '../models/facility';\n\n\n/**\n * FacilitiesManager RPC API in Perun\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FacilitiesManagerService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getFacilityById\n   */\n  static readonly GetFacilityByIdPath = '/json/facilitiesManager/getFacilityById';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilityById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityById$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetFacilityByIdPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilityById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityById(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getFacilityById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getFacilityByName\n   */\n  static readonly GetFacilityByNamePath = '/json/facilitiesManager/getFacilityByName';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilityByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityByName$Response(params: {\n\n    /**\n     * name of Facility\n     */\n    name: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetFacilityByNamePath, 'get');\n    if (params) {\n\n      rb.query('name', params.name);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilityByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityByName(params: {\n\n    /**\n     * name of Facility\n     */\n    name: string;\n\n  }): Observable<void> {\n\n    return this.getFacilityByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAssignedUsers\n   */\n  static readonly GetAssignedUsersPath = '/json/facilitiesManager/getAssignedUsers';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAssignedUsers()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAssignedUsers$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of Service\n     */\n    service?: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetAssignedUsersPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('service', params.service);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAssignedUsers$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAssignedUsers(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of Service\n     */\n    service?: number;\n\n  }): Observable<void> {\n\n    return this.getAssignedUsers$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getRichFacilities\n   */\n  static readonly GetRichFacilitiesPath = '/json/facilitiesManager/getRichFacilities';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getRichFacilities()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichFacilities$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetRichFacilitiesPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getRichFacilities$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichFacilities(params?: {\n\n  }): Observable<void> {\n\n    return this.getRichFacilities$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getFacilitiesByDestination\n   */\n  static readonly GetFacilitiesByDestinationPath = '/json/facilitiesManager/getFacilitiesByDestination';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilitiesByDestination()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilitiesByDestination$Response(params: {\n\n    /**\n     * string name of destination\n     */\n    destination: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetFacilitiesByDestinationPath, 'get');\n    if (params) {\n\n      rb.query('destination', params.destination);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilitiesByDestination$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilitiesByDestination(params: {\n\n    /**\n     * string name of destination\n     */\n    destination: string;\n\n  }): Observable<void> {\n\n    return this.getFacilitiesByDestination$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getFacilitiesByAttribute\n   */\n  static readonly GetFacilitiesByAttributePath = '/json/facilitiesManager/getFacilitiesByAttribute';\n\n  /**\n   * Searching only def and opt attributes. Large attributes are not supported.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilitiesByAttribute()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilitiesByAttribute$Response(params: {\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n    /**\n     * string value of Attribute\n     */\n    attributeValue: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetFacilitiesByAttributePath, 'get');\n    if (params) {\n\n      rb.query('attributeName', params.attributeName);\n      rb.query('attributeValue', params.attributeValue);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Searching only def and opt attributes. Large attributes are not supported.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilitiesByAttribute$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilitiesByAttribute(params: {\n\n    /**\n     * full name of attribute definition (namespace + &#x27;:&#x27; + friendlyName)\n     */\n    attributeName: string;\n\n    /**\n     * string value of Attribute\n     */\n    attributeValue: string;\n\n  }): Observable<void> {\n\n    return this.getFacilitiesByAttribute$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAllFacilities\n   */\n  static readonly GetAllFacilitiesPath = '/json/facilitiesManager/getFacilities';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllFacilities()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllFacilities$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetAllFacilitiesPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllFacilities$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllFacilities(params?: {\n\n  }): Observable<void> {\n\n    return this.getAllFacilities$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getFacilitiesCount\n   */\n  static readonly GetFacilitiesCountPath = '/json/facilitiesManager/getFacilitiesCount';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilitiesCount()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilitiesCount$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetFacilitiesCountPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilitiesCount$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilitiesCount(params?: {\n\n  }): Observable<void> {\n\n    return this.getFacilitiesCount$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getFacilityOwners\n   */\n  static readonly GetFacilityOwnersPath = '/json/facilitiesManager/getOwners';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilityOwners()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityOwners$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetFacilityOwnersPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilityOwners$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityOwners(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.getFacilityOwners$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation addFacilityOwner\n   */\n  static readonly AddFacilityOwnerPath = '/urlinjsonout/facilitiesManager/addOwner';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `addFacilityOwner()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addFacilityOwner$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of Owner\n     */\n    owner: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.AddFacilityOwnerPath, 'post');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('owner', params.owner);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `addFacilityOwner$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addFacilityOwner(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of Owner\n     */\n    owner: number;\n\n  }): Observable<void> {\n\n    return this.addFacilityOwner$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeFacilityOwner\n   */\n  static readonly RemoveFacilityOwnerPath = '/urlinjsonout/facilitiesManager/removeOwner';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeFacilityOwner()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeFacilityOwner$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of Owner\n     */\n    owner: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.RemoveFacilityOwnerPath, 'post');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('owner', params.owner);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeFacilityOwner$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeFacilityOwner(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of Owner\n     */\n    owner: number;\n\n  }): Observable<void> {\n\n    return this.removeFacilityOwner$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAllowedVos\n   */\n  static readonly GetAllowedVosPath = '/urlinjsonout/facilitiesManager/getAllowedVos';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllowedVos()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllowedVos$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetAllowedVosPath, 'post');\n    if (params) {\n\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllowedVos$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllowedVos(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.getAllowedVos$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAllowedGroups\n   */\n  static readonly GetAllowedGroupsPath = '/json/facilitiesManager/getAllowedGroups';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllowedGroups()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllowedGroups$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of Vo\n     */\n    vo?: number;\n\n    /**\n     * id of Service\n     */\n    service?: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetAllowedGroupsPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('vo', params.vo);\n      rb.query('service', params.service);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllowedGroups$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllowedGroups(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of Vo\n     */\n    vo?: number;\n\n    /**\n     * id of Service\n     */\n    service?: number;\n\n  }): Observable<void> {\n\n    return this.getAllowedGroups$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAllowedRichGroupsWithAttributes\n   */\n  static readonly GetAllowedRichGroupsWithAttributesPath = '/json/facilitiesManager/getAllowedRichGroupsWithAttributes';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllowedRichGroupsWithAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllowedRichGroupsWithAttributes$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n    /**\n     * id of Vo\n     */\n    vo?: number;\n\n    /**\n     * id of Service\n     */\n    service?: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetAllowedRichGroupsWithAttributesPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('attrNames[]', params.attrNames);\n      rb.query('vo', params.vo);\n      rb.query('service', params.service);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllowedRichGroupsWithAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllowedRichGroupsWithAttributes(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * list of attribute names List&lt;String&gt;\n     */\n    attrNames: Array<string>;\n\n    /**\n     * id of Vo\n     */\n    vo?: number;\n\n    /**\n     * id of Service\n     */\n    service?: number;\n\n  }): Observable<void> {\n\n    return this.getAllowedRichGroupsWithAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAssignedResourcesForFacility\n   */\n  static readonly GetAssignedResourcesForFacilityPath = '/json/facilitiesManager/getAssignedResources';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAssignedResourcesForFacility()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAssignedResourcesForFacility$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetAssignedResourcesForFacilityPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAssignedResourcesForFacility$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAssignedResourcesForFacility(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.getAssignedResourcesForFacility$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAssignedRichResourcesForFacility\n   */\n  static readonly GetAssignedRichResourcesForFacilityPath = '/json/facilitiesManager/getAssignedRichResources';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAssignedRichResourcesForFacility()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAssignedRichResourcesForFacility$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetAssignedRichResourcesForFacilityPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAssignedRichResourcesForFacility$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAssignedRichResourcesForFacility(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.getAssignedRichResourcesForFacility$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation createFacility\n   */\n  static readonly CreateFacilityPath = '/urlinjsonout/facilitiesManager/createFacility';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `createFacility()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  createFacility$Response(params: {\n\n    /**\n     * name of a facility - can contain only a-Z0-9.-_ and space characters\n     */\n    name: string;\n\n    /**\n     * optional description of a facility\n     */\n    description?: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.CreateFacilityPath, 'post');\n    if (params) {\n\n      rb.query('name', params.name);\n      rb.query('description', params.description);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `createFacility$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  createFacility(params: {\n\n    /**\n     * name of a facility - can contain only a-Z0-9.-_ and space characters\n     */\n    name: string;\n\n    /**\n     * optional description of a facility\n     */\n    description?: string;\n\n  }): Observable<void> {\n\n    return this.createFacility$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation deleteFacility\n   */\n  static readonly DeleteFacilityPath = '/urlinjsonout/facilitiesManager/deleteFacility';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `deleteFacility()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  deleteFacility$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.DeleteFacilityPath, 'post');\n    if (params) {\n\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `deleteFacility$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  deleteFacility(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.deleteFacility$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation updateFacility\n   */\n  static readonly UpdateFacilityPath = '/json/facilitiesManager/updateFacility';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `updateFacility()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  updateFacility$Response(params: {\n\n    body: { 'facility': Facility }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.UpdateFacilityPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `updateFacility$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  updateFacility(params: {\n\n    body: { 'facility': Facility }\n  }): Observable<void> {\n\n    return this.updateFacility$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getOwnerFacilities\n   */\n  static readonly GetOwnerFacilitiesPath = '/json/facilitiesManager/getOwnerFacilities';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getOwnerFacilities()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getOwnerFacilities$Response(params: {\n\n    /**\n     * id of Owner\n     */\n    owner: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetOwnerFacilitiesPath, 'get');\n    if (params) {\n\n      rb.query('owner', params.owner);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getOwnerFacilities$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getOwnerFacilities(params: {\n\n    /**\n     * id of Owner\n     */\n    owner: number;\n\n  }): Observable<void> {\n\n    return this.getOwnerFacilities$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getHosts\n   */\n  static readonly GetHostsPath = '/json/facilitiesManager/getHosts';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getHosts()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getHosts$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetHostsPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getHosts$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getHosts(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.getHosts$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getHostById\n   */\n  static readonly GetHostByIdPath = '/json/facilitiesManager/getHostById';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getHostById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getHostById$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetHostByIdPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getHostById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getHostById(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getHostById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getHostsByHostname\n   */\n  static readonly GetHostsByHostnamePath = '/json/facilitiesManager/getHostsByHostname';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getHostsByHostname()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getHostsByHostname$Response(params: {\n\n    /**\n     * name of a host\n     */\n    hostname: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetHostsByHostnamePath, 'get');\n    if (params) {\n\n      rb.query('hostname', params.hostname);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getHostsByHostname$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getHostsByHostname(params: {\n\n    /**\n     * name of a host\n     */\n    hostname: string;\n\n  }): Observable<void> {\n\n    return this.getHostsByHostname$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getFacilityForHost\n   */\n  static readonly GetFacilityForHostPath = '/json/facilitiesManager/getFacilityForHost';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilityForHost()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityForHost$Response(params: {\n\n    /**\n     * id of Host\n     */\n    host: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetFacilityForHostPath, 'get');\n    if (params) {\n\n      rb.query('host', params.host);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilityForHost$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityForHost(params: {\n\n    /**\n     * id of Host\n     */\n    host: number;\n\n  }): Observable<void> {\n\n    return this.getFacilityForHost$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getHostsCount\n   */\n  static readonly GetHostsCountPath = '/json/facilitiesManager/getHostsCount';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getHostsCount()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getHostsCount$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetHostsCountPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getHostsCount$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getHostsCount(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.getHostsCount$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation addHosts\n   */\n  static readonly AddHostsPath = '/urlinjsonout/facilitiesManager/addHosts';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `addHosts()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addHosts$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * list of host names List&lt;String&gt;\n     */\n    hostnames: Array<string>;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.AddHostsPath, 'post');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('hostnames[]', params.hostnames);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `addHosts$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addHosts(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * list of host names List&lt;String&gt;\n     */\n    hostnames: Array<string>;\n\n  }): Observable<void> {\n\n    return this.addHosts$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeHosts\n   */\n  static readonly RemoveHostsPath = '/urlinjsonout/facilitiesManager/removeHosts';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeHosts()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeHosts$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * list of host ids List&lt;Integer&gt;\n     */\n    hosts: Array<number>;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.RemoveHostsPath, 'post');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('hosts[]', params.hosts);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeHosts$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeHosts(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * list of host ids List&lt;Integer&gt;\n     */\n    hosts: Array<number>;\n\n  }): Observable<void> {\n\n    return this.removeHosts$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation addHost\n   */\n  static readonly AddHostPath = '/urlinjsonout/facilitiesManager/addHost';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `addHost()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addHost$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * DNS name of host\n     */\n    hostname: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.AddHostPath, 'post');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('hostname', params.hostname);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `addHost$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addHost(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * DNS name of host\n     */\n    hostname: string;\n\n  }): Observable<void> {\n\n    return this.addHost$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeHost\n   */\n  static readonly RemoveHostPath = '/urlinjsonout/facilitiesManager/removeHost';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeHost()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeHost$Response(params: {\n\n    /**\n     * id of Host\n     */\n    host: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.RemoveHostPath, 'post');\n    if (params) {\n\n      rb.query('host', params.host);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeHost$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeHost(params: {\n\n    /**\n     * id of Host\n     */\n    host: number;\n\n  }): Observable<void> {\n\n    return this.removeHost$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation addFacilityAdminUser\n   */\n  static readonly AddFacilityAdminUserPath = '/urlinjsonout/facilitiesManager/addAdmin/user';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `addFacilityAdminUser()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addFacilityAdminUser$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.AddFacilityAdminUserPath, 'post');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('user', params.user);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `addFacilityAdminUser$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addFacilityAdminUser(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<void> {\n\n    return this.addFacilityAdminUser$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation addFacilityAdminGroup\n   */\n  static readonly AddFacilityAdminGroupPath = '/urlinjsonout/facilitiesManager/addAdmin/group';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `addFacilityAdminGroup()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addFacilityAdminGroup$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * Group id\n     */\n    authorizedGroup: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.AddFacilityAdminGroupPath, 'post');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('authorizedGroup', params.authorizedGroup);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `addFacilityAdminGroup$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addFacilityAdminGroup(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * Group id\n     */\n    authorizedGroup: number;\n\n  }): Observable<void> {\n\n    return this.addFacilityAdminGroup$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeFacilityAdminUser\n   */\n  static readonly RemoveFacilityAdminUserPath = '/urlinjsonout/facilitiesManager/removeAdmin/user';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeFacilityAdminUser()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeFacilityAdminUser$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.RemoveFacilityAdminUserPath, 'post');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('user', params.user);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeFacilityAdminUser$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeFacilityAdminUser(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<void> {\n\n    return this.removeFacilityAdminUser$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeFacilityAdminGroup\n   */\n  static readonly RemoveFacilityAdminGroupPath = '/urlinjsonout/facilitiesManager/removeAdmin/group';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeFacilityAdminGroup()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeFacilityAdminGroup$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * Group id\n     */\n    authorizedGroup: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.RemoveFacilityAdminGroupPath, 'post');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('authorizedGroup', params.authorizedGroup);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeFacilityAdminGroup$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeFacilityAdminGroup(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * Group id\n     */\n    authorizedGroup: number;\n\n  }): Observable<void> {\n\n    return this.removeFacilityAdminGroup$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getFacilityAdminUsers\n   */\n  static readonly GetFacilityAdminUsersPath = '/json/facilitiesManager/getAdmins';\n\n  /**\n   * Get list of all facility administrators for supported role and given facility.\n   * If onlyDirectAdmins is true, return only direct admins of the group for supported role.\n   * Supported roles: FacilityAdmin\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilityAdminUsers()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityAdminUsers$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * if true, get only direct facility administrators (if false, get both direct and indirect)\n     */\n    onlyDirectAdmins: boolean;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetFacilityAdminUsersPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('onlyDirectAdmins', params.onlyDirectAdmins);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get list of all facility administrators for supported role and given facility.\n   * If onlyDirectAdmins is true, return only direct admins of the group for supported role.\n   * Supported roles: FacilityAdmin\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilityAdminUsers$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityAdminUsers(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * if true, get only direct facility administrators (if false, get both direct and indirect)\n     */\n    onlyDirectAdmins: boolean;\n\n  }): Observable<void> {\n\n    return this.getFacilityAdminUsers$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getFacilityAdminGroups\n   */\n  static readonly GetFacilityAdminGroupsPath = '/json/facilitiesManager/getAdminGroups';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getFacilityAdminGroups()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityAdminGroups$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, FacilitiesManagerService.GetFacilityAdminGroupsPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getFacilityAdminGroups$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getFacilityAdminGroups(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.getFacilityAdminGroups$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\n\n\n/**\n * GroupsManager RPC API in Perun\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GroupsManagerService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getGroupById\n   */\n  static readonly GetGroupByIdPath = '/json/groupsManager/getGroupById';\n\n  /**\n   * Throws GroupNotExistsException when the group doesn't exist.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getGroupById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupById$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, GroupsManagerService.GetGroupByIdPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Throws GroupNotExistsException when the group doesn't exist.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getGroupById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupById(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getGroupById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getGroupByName\n   */\n  static readonly GetGroupByNamePath = '/json/groupsManager/getGroupByName';\n\n  /**\n   * Returns a group by VO and Group name.\n   * IMPORTANT: need to use full name of group (ex. 'toplevel:a:b', not the shortname which is in this example 'b')\n   * Throws GroupNotExistsException when the group doesn't exist.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getGroupByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupByName$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * full group name\n     */\n    name: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, GroupsManagerService.GetGroupByNamePath, 'get');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('name', params.name);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Returns a group by VO and Group name.\n   * IMPORTANT: need to use full name of group (ex. 'toplevel:a:b', not the shortname which is in this example 'b')\n   * Throws GroupNotExistsException when the group doesn't exist.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getGroupByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupByName(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * full group name\n     */\n    name: string;\n\n  }): Observable<void> {\n\n    return this.getGroupByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation isGroupMember\n   */\n  static readonly IsGroupMemberPath = '/json/groupsManager/isGroupMember';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `isGroupMember()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  isGroupMember$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, GroupsManagerService.IsGroupMemberPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n      rb.query('group', params.group);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `isGroupMember$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  isGroupMember(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n  }): Observable<void> {\n\n    return this.isGroupMember$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberGroups\n   */\n  static readonly GetMemberGroupsPath = '/json/groupsManager/getMemberGroups';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberGroups()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberGroups$Response(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, GroupsManagerService.GetMemberGroupsPath, 'get');\n    if (params) {\n\n      rb.query('member', params.member);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberGroups$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberGroups(params: {\n\n    /**\n     * id of Member\n     */\n    member: number;\n\n  }): Observable<void> {\n\n    return this.getMemberGroups$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\n\n\n/**\n * MembersManager RPC API in Perun\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MembersManagerService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getMemberById\n   */\n  static readonly GetMemberByIdPath = '/json/membersManager/getMemberById';\n\n  /**\n   * Gets Member\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberById$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, MembersManagerService.GetMemberByIdPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Gets Member\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberById(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getMemberById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getRichMember\n   */\n  static readonly GetRichMemberPath = '/json/membersManager/getRichMember';\n\n  /**\n   * Get RichMember without attributes\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getRichMember()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichMember$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, MembersManagerService.GetRichMemberPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get RichMember without attributes\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getRichMember$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichMember(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getRichMember$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getRichMemberWithAttributes\n   */\n  static readonly GetRichMemberWithAttributesPath = '/json/membersManager/getRichMemberWithAttributes';\n\n  /**\n   * Get richMember with member/user attributes\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getRichMemberWithAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichMemberWithAttributes$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, MembersManagerService.GetRichMemberWithAttributesPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get richMember with member/user attributes\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getRichMemberWithAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichMemberWithAttributes(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getRichMemberWithAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMemberByUser\n   */\n  static readonly GetMemberByUserPath = '/json/membersManager/getMemberByUser';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMemberByUser()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberByUser$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, MembersManagerService.GetMemberByUserPath, 'get');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('user', params.user);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMemberByUser$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMemberByUser(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<void> {\n\n    return this.getMemberByUser$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getMembersByUser\n   */\n  static readonly GetMembersByUserPath = '/json/membersManager/getMembersByUser';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMembersByUser()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMembersByUser$Response(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, MembersManagerService.GetMembersByUserPath, 'get');\n    if (params) {\n\n      rb.query('user', params.user);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMembersByUser$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMembersByUser(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<void> {\n\n    return this.getMembersByUser$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation findMembersInVo\n   */\n  static readonly FindMembersInVoPath = '/json/membersManager/findMembersInVo';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `findMembersInVo()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  findMembersInVo$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * string to search by\n     */\n    searchString: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, MembersManagerService.FindMembersInVoPath, 'get');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('searchString', params.searchString);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `findMembersInVo$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  findMembersInVo(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * string to search by\n     */\n    searchString: string;\n\n  }): Observable<void> {\n\n    return this.findMembersInVo$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\n\n\n/**\n * OwnersManager RPC API in Perun\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OwnersManagerService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation createOwner\n   */\n  static readonly CreateOwnerPath = '/json/ownersManager/createOwner';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `createOwner()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  createOwner$Response(params: {\n\n    body: { 'name': string, 'contact': string, 'ownerType': 0 | 1 }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, OwnersManagerService.CreateOwnerPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `createOwner$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  createOwner(params: {\n\n    body: { 'name': string, 'contact': string, 'ownerType': 0 | 1 }\n  }): Observable<void> {\n\n    return this.createOwner$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation deleteOwner\n   */\n  static readonly DeleteOwnerPath = '/urlinjsonout/ownersManager/deleteOwner';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `deleteOwner()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  deleteOwner$Response(params: {\n\n    /**\n     * id of Owner\n     */\n    owner: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, OwnersManagerService.DeleteOwnerPath, 'post');\n    if (params) {\n\n      rb.query('owner', params.owner);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `deleteOwner$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  deleteOwner(params: {\n\n    /**\n     * id of Owner\n     */\n    owner: number;\n\n  }): Observable<void> {\n\n    return this.deleteOwner$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getOwnerById\n   */\n  static readonly GetOwnerByIdPath = '/json/ownersManager/getOwnerById';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getOwnerById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getOwnerById$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, OwnersManagerService.GetOwnerByIdPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getOwnerById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getOwnerById(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getOwnerById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAllOwners\n   */\n  static readonly GetAllOwnersPath = '/json/ownersManager/getOwners';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllOwners()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllOwners$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, OwnersManagerService.GetAllOwnersPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllOwners$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllOwners(params?: {\n\n  }): Observable<void> {\n\n    return this.getAllOwners$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegistrarManagerService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getVoApplicationForm\n   */\n  static readonly GetVoApplicationFormPath = '/json/registrarManager/getApplicationForm/vo';\n\n  /**\n   * There is exactly one form for membership per VO, one form is used for both initial registration and annual account expansion,\n   * just the form items are marked whether the should be present in one, the other, or both types of application.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getVoApplicationForm()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoApplicationForm$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, RegistrarManagerService.GetVoApplicationFormPath, 'get');\n    if (params) {\n\n      rb.query('vo', params.vo);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * There is exactly one form for membership per VO, one form is used for both initial registration and annual account expansion,\n   * just the form items are marked whether the should be present in one, the other, or both types of application.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getVoApplicationForm$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoApplicationForm(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n  }): Observable<void> {\n\n    return this.getVoApplicationForm$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getGroupApplicationForm\n   */\n  static readonly GetGroupApplicationFormPath = '/json/registrarManager/getApplicationForm/group';\n\n  /**\n   * There is exactly one form for membership per Group, one form is used for both initial registration and annual account expansion,\n   * just the form items are marked whether the should be present in one, the other, or both types of application.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getGroupApplicationForm()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupApplicationForm$Response(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, RegistrarManagerService.GetGroupApplicationFormPath, 'get');\n    if (params) {\n\n      rb.query('group', params.group);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * There is exactly one form for membership per Group, one form is used for both initial registration and annual account expansion,\n   * just the form items are marked whether the should be present in one, the other, or both types of application.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getGroupApplicationForm$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupApplicationForm(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n  }): Observable<void> {\n\n    return this.getGroupApplicationForm$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { Resource } from '../models/resource';\nimport { ResourceTag } from '../models/resource-tag';\n\n\n/**\n * ResourcesManager RPC API in Perun\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ResourcesManagerService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getResourceById\n   */\n  static readonly GetResourceByIdPath = '/json/resourcesManager/getResourceById';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getResourceById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceById$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.GetResourceByIdPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getResourceById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceById(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getResourceById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getResourceByName\n   */\n  static readonly GetResourceByNamePath = '/json/resourcesManager/getResourceByName';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getResourceByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceByName$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * resource name\n     */\n    name: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.GetResourceByNamePath, 'get');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('facility', params.facility);\n      rb.query('name', params.name);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getResourceByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourceByName(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * resource name\n     */\n    name: string;\n\n  }): Observable<void> {\n\n    return this.getResourceByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getRichResourceById\n   */\n  static readonly GetRichResourceByIdPath = '/json/resourcesManager/getRichResourceById';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getRichResourceById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichResourceById$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.GetRichResourceByIdPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getRichResourceById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichResourceById(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getRichResourceById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation createResource\n   */\n  static readonly CreateResourcePath = '/urlinjsonout/resourcesManager/createResource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `createResource()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  createResource$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * resource name\n     */\n    name: string;\n\n    /**\n     * optional resource description\n     */\n    description?: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.CreateResourcePath, 'post');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('facility', params.facility);\n      rb.query('name', params.name);\n      rb.query('description', params.description);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `createResource$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  createResource(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * resource name\n     */\n    name: string;\n\n    /**\n     * optional resource description\n     */\n    description?: string;\n\n  }): Observable<void> {\n\n    return this.createResource$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation updateResource\n   */\n  static readonly UpdateResourcePath = '/json/resourcesManager/updateResource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `updateResource()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  updateResource$Response(params: {\n\n    body: { 'resource': Resource }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.UpdateResourcePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `updateResource$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  updateResource(params: {\n\n    body: { 'resource': Resource }\n  }): Observable<void> {\n\n    return this.updateResource$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation deleteResource\n   */\n  static readonly DeleteResourcePath = '/urlinjsonout/resourcesManager/deleteResource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `deleteResource()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  deleteResource$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.DeleteResourcePath, 'post');\n    if (params) {\n\n      rb.query('resource', params.resource);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `deleteResource$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  deleteResource(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<void> {\n\n    return this.deleteResource$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation assignGroupToResource\n   */\n  static readonly AssignGroupToResourcePath = '/urlinjsonout/resourcesManager/assignGroupToResource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `assignGroupToResource()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  assignGroupToResource$Response(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.AssignGroupToResourcePath, 'post');\n    if (params) {\n\n      rb.query('group', params.group);\n      rb.query('resource', params.resource);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `assignGroupToResource$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  assignGroupToResource(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<void> {\n\n    return this.assignGroupToResource$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation assignGroupsToResource\n   */\n  static readonly AssignGroupsToResourcePath = '/urlinjsonout/resourcesManager/assignGroupsToResource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `assignGroupsToResource()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  assignGroupsToResource$Response(params: {\n\n    /**\n     * list of Group ids List&lt;Integer&gt;\n     */\n    groups: Array<number>;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.AssignGroupsToResourcePath, 'post');\n    if (params) {\n\n      rb.query('groups[]', params.groups);\n      rb.query('resource', params.resource);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `assignGroupsToResource$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  assignGroupsToResource(params: {\n\n    /**\n     * list of Group ids List&lt;Integer&gt;\n     */\n    groups: Array<number>;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<void> {\n\n    return this.assignGroupsToResource$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation assignGroupToResources\n   */\n  static readonly AssignGroupToResourcesPath = '/urlinjsonout/resourcesManager/assignGroupToResources';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `assignGroupToResources()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  assignGroupToResources$Response(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * list of Resource ids List&lt;Integer&gt;\n     */\n    resources: Array<number>;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.AssignGroupToResourcesPath, 'post');\n    if (params) {\n\n      rb.query('group', params.group);\n      rb.query('resources[]', params.resources);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `assignGroupToResources$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  assignGroupToResources(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * list of Resource ids List&lt;Integer&gt;\n     */\n    resources: Array<number>;\n\n  }): Observable<void> {\n\n    return this.assignGroupToResources$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeGroupFromResource\n   */\n  static readonly RemoveGroupFromResourcePath = '/urlinjsonout/resourcesManager/removeGroupFromResource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeGroupFromResource()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeGroupFromResource$Response(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.RemoveGroupFromResourcePath, 'post');\n    if (params) {\n\n      rb.query('group', params.group);\n      rb.query('resource', params.resource);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeGroupFromResource$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeGroupFromResource(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<void> {\n\n    return this.removeGroupFromResource$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeGroupsFromResource\n   */\n  static readonly RemoveGroupsFromResourcePath = '/urlinjsonout/resourcesManager/removeGroupsFromResource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeGroupsFromResource()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeGroupsFromResource$Response(params: {\n\n    /**\n     * list of Group ids List&lt;Integer&gt;\n     */\n    groups: Array<number>;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.RemoveGroupsFromResourcePath, 'post');\n    if (params) {\n\n      rb.query('groups[]', params.groups);\n      rb.query('resource', params.resource);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeGroupsFromResource$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeGroupsFromResource(params: {\n\n    /**\n     * list of Group ids List&lt;Integer&gt;\n     */\n    groups: Array<number>;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<void> {\n\n    return this.removeGroupsFromResource$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeGroupFromResources\n   */\n  static readonly RemoveGroupFromResourcesPath = '/urlinjsonout/resourcesManager/removeGroupFromResources';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeGroupFromResources()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeGroupFromResources$Response(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * list of Resource ids List&lt;Integer&gt;\n     */\n    resources: Array<number>;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.RemoveGroupFromResourcesPath, 'post');\n    if (params) {\n\n      rb.query('group', params.group);\n      rb.query('resources[]', params.resources);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeGroupFromResources$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeGroupFromResources(params: {\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n    /**\n     * list of Resource ids List&lt;Integer&gt;\n     */\n    resources: Array<number>;\n\n  }): Observable<void> {\n\n    return this.removeGroupFromResources$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAssignedGroups\n   */\n  static readonly GetAssignedGroupsPath = '/json/resourcesManager/getAssignedGroups';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAssignedGroups()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAssignedGroups$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * optional member id\n     */\n    member?: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.GetAssignedGroupsPath, 'get');\n    if (params) {\n\n      rb.query('resource', params.resource);\n      rb.query('member', params.member);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAssignedGroups$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAssignedGroups(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * optional member id\n     */\n    member?: number;\n\n  }): Observable<void> {\n\n    return this.getAssignedGroups$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getResourcesWhereUserIsAdmin\n   */\n  static readonly GetResourcesWhereUserIsAdminPath = '/json/resourcesManager/getResourcesWhereUserIsAdmin';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getResourcesWhereUserIsAdmin()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourcesWhereUserIsAdmin$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.GetResourcesWhereUserIsAdminPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('vo', params.vo);\n      rb.query('user', params.user);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getResourcesWhereUserIsAdmin$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourcesWhereUserIsAdmin(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<void> {\n\n    return this.getResourcesWhereUserIsAdmin$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getResourcesWhereGroupIsAdmin\n   */\n  static readonly GetResourcesWhereGroupIsAdminPath = '/json/resourcesManager/getResourcesWhereUserIsAdmin/group';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getResourcesWhereGroupIsAdmin()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourcesWhereGroupIsAdmin$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.GetResourcesWhereGroupIsAdminPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n      rb.query('vo', params.vo);\n      rb.query('group', params.group);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getResourcesWhereGroupIsAdmin$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourcesWhereGroupIsAdmin(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of Group\n     */\n    group: number;\n\n  }): Observable<void> {\n\n    return this.getResourcesWhereGroupIsAdmin$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getResourcesFromVoWhereUserIsAdmin\n   */\n  static readonly GetResourcesFromVoWhereUserIsAdminPath = '/json/resourcesManager/getResourcesWhereUserIsAdmin/fromVo';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getResourcesFromVoWhereUserIsAdmin()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourcesFromVoWhereUserIsAdmin$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.GetResourcesFromVoWhereUserIsAdminPath, 'get');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('user', params.user);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getResourcesFromVoWhereUserIsAdmin$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getResourcesFromVoWhereUserIsAdmin(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<void> {\n\n    return this.getResourcesFromVoWhereUserIsAdmin$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAllResourcesWhereUserIsAdmin\n   */\n  static readonly GetAllResourcesWhereUserIsAdminPath = '/json/resourcesManager/getResourcesWhereUserIsAdmin/all';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllResourcesWhereUserIsAdmin()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllResourcesWhereUserIsAdmin$Response(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.GetAllResourcesWhereUserIsAdminPath, 'get');\n    if (params) {\n\n      rb.query('user', params.user);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllResourcesWhereUserIsAdmin$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllResourcesWhereUserIsAdmin(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<void> {\n\n    return this.getAllResourcesWhereUserIsAdmin$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation assignService\n   */\n  static readonly AssignServicePath = '/urlinjsonout/resourcesManager/assignService';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `assignService()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  assignService$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.AssignServicePath, 'post');\n    if (params) {\n\n      rb.query('resource', params.resource);\n      rb.query('service', params.service);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `assignService$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  assignService(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n  }): Observable<void> {\n\n    return this.assignService$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation assignServicesPackage\n   */\n  static readonly AssignServicesPackagePath = '/urlinjsonout/resourcesManager/assignServicesPackage';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `assignServicesPackage()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  assignServicesPackage$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of ServicesPackage\n     */\n    servicesPackage: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.AssignServicesPackagePath, 'post');\n    if (params) {\n\n      rb.query('resource', params.resource);\n      rb.query('servicesPackage', params.servicesPackage);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `assignServicesPackage$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  assignServicesPackage(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of ServicesPackage\n     */\n    servicesPackage: number;\n\n  }): Observable<void> {\n\n    return this.assignServicesPackage$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeService\n   */\n  static readonly RemoveServicePath = '/urlinjsonout/resourcesManager/removeService';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeService()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeService$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.RemoveServicePath, 'post');\n    if (params) {\n\n      rb.query('resource', params.resource);\n      rb.query('service', params.service);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeService$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeService(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n  }): Observable<void> {\n\n    return this.removeService$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeServicesPackage\n   */\n  static readonly RemoveServicesPackagePath = '/urlinjsonout/resourcesManager/removeServicesPackage';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeServicesPackage()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeServicesPackage$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of ServicesPackage\n     */\n    servicesPackage: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.RemoveServicesPackagePath, 'post');\n    if (params) {\n\n      rb.query('resource', params.resource);\n      rb.query('servicesPackage', params.servicesPackage);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeServicesPackage$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeServicesPackage(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n    /**\n     * id of ServicesPackage\n     */\n    servicesPackage: number;\n\n  }): Observable<void> {\n\n    return this.removeServicesPackage$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation assignResourceTagToResource\n   */\n  static readonly AssignResourceTagToResourcePath = '/json/resourcesManager/assignResourceTagToResource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `assignResourceTagToResource()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  assignResourceTagToResource$Response(params: {\n\n    body: { 'resource': number, 'resourceTag': ResourceTag }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.AssignResourceTagToResourcePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `assignResourceTagToResource$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  assignResourceTagToResource(params: {\n\n    body: { 'resource': number, 'resourceTag': ResourceTag }\n  }): Observable<void> {\n\n    return this.assignResourceTagToResource$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeResourceTagFromResource\n   */\n  static readonly RemoveResourceTagFromResourcePath = '/json/resourcesManager/removeResourceTagFromResource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeResourceTagFromResource()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  removeResourceTagFromResource$Response(params: {\n\n    body: { 'resource': number, 'resourceTag': ResourceTag }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.RemoveResourceTagFromResourcePath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeResourceTagFromResource$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  removeResourceTagFromResource(params: {\n\n    body: { 'resource': number, 'resourceTag': ResourceTag }\n  }): Observable<void> {\n\n    return this.removeResourceTagFromResource$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeAllResourceTagsFromResource\n   */\n  static readonly RemoveAllResourceTagsFromResourcePath = '/urlinjsonout/resourcesManager/removeAllResourcesTagFromResource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeAllResourceTagsFromResource()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeAllResourceTagsFromResource$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.RemoveAllResourceTagsFromResourcePath, 'post');\n    if (params) {\n\n      rb.query('resource', params.resource);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeAllResourceTagsFromResource$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeAllResourceTagsFromResource(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<void> {\n\n    return this.removeAllResourceTagsFromResource$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAllResourcesByResourceTag\n   */\n  static readonly GetAllResourcesByResourceTagPath = '/json/resourcesManager/getAllResourcesByResourceTag';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllResourcesByResourceTag()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  getAllResourcesByResourceTag$Response(params: {\n\n    body: { 'resource': number, 'resourceTag': ResourceTag }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.GetAllResourcesByResourceTagPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllResourcesByResourceTag$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  getAllResourcesByResourceTag(params: {\n\n    body: { 'resource': number, 'resourceTag': ResourceTag }\n  }): Observable<void> {\n\n    return this.getAllResourcesByResourceTag$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAllResourcesTagsForVo\n   */\n  static readonly GetAllResourcesTagsForVoPath = '/json/resourcesManager/getAllResourcesTagsForVo';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllResourcesTagsForVo()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllResourcesTagsForVo$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.GetAllResourcesTagsForVoPath, 'get');\n    if (params) {\n\n      rb.query('vo', params.vo);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllResourcesTagsForVo$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllResourcesTagsForVo(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n  }): Observable<void> {\n\n    return this.getAllResourcesTagsForVo$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAllResourcesTagsForResource\n   */\n  static readonly GetAllResourcesTagsForResourcePath = '/json/resourcesManager/getAllResourcesTagsForResource';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllResourcesTagsForResource()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllResourcesTagsForResource$Response(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ResourcesManagerService.GetAllResourcesTagsForResourcePath, 'get');\n    if (params) {\n\n      rb.query('resource', params.resource);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllResourcesTagsForResource$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllResourcesTagsForResource(params: {\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<void> {\n\n    return this.getAllResourcesTagsForResource$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { DestinationPropagationType } from '../models/destination-propagation-type';\nimport { DestinationType } from '../models/destination-type';\nimport { Service } from '../models/service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ServicesManagerService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getServiceById\n   */\n  static readonly GetServiceByIdPath = '/json/servicesManager/getServiceById';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getServiceById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getServiceById$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ServicesManagerService.GetServiceByIdPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getServiceById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getServiceById(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getServiceById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getServiceByName\n   */\n  static readonly GetServiceByNamePath = '/json/servicesManager/getServiceByName';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getServiceByName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getServiceByName$Response(params: {\n\n    /**\n     * name of service\n     */\n    name: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ServicesManagerService.GetServiceByNamePath, 'get');\n    if (params) {\n\n      rb.query('name', params.name);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getServiceByName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getServiceByName(params: {\n\n    /**\n     * name of service\n     */\n    name: string;\n\n  }): Observable<void> {\n\n    return this.getServiceByName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getDestinationById\n   */\n  static readonly GetDestinationByIdPath = '/json/servicesManager/getDestinationById';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getDestinationById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getDestinationById$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ServicesManagerService.GetDestinationByIdPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getDestinationById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getDestinationById(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getDestinationById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getDestinations\n   */\n  static readonly GetDestinationsPath = '/json/servicesManager/getDestinations/s-f';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getDestinations()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getDestinations$Response(params: {\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ServicesManagerService.GetDestinationsPath, 'get');\n    if (params) {\n\n      rb.query('service', params.service);\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getDestinations$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getDestinations(params: {\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.getDestinations$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAllDestinations\n   */\n  static readonly GetAllDestinationsPath = '/json/servicesManager/getDestinations/all';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllDestinations()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllDestinations$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ServicesManagerService.GetAllDestinationsPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllDestinations$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllDestinations(params?: {\n\n  }): Observable<void> {\n\n    return this.getAllDestinations$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getRichDestinationsForService\n   */\n  static readonly GetRichDestinationsForServicePath = '/json/servicesManager/getAllRichDestinations/s';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getRichDestinationsForService()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichDestinationsForService$Response(params: {\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ServicesManagerService.GetRichDestinationsForServicePath, 'get');\n    if (params) {\n\n      rb.query('service', params.service);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getRichDestinationsForService$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichDestinationsForService(params: {\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n  }): Observable<void> {\n\n    return this.getRichDestinationsForService$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getRichDestinationsForFacility\n   */\n  static readonly GetRichDestinationsForFacilityPath = '/json/servicesManager/getAllRichDestinations/f';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getRichDestinationsForFacility()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichDestinationsForFacility$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ServicesManagerService.GetRichDestinationsForFacilityPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getRichDestinationsForFacility$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichDestinationsForFacility(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.getRichDestinationsForFacility$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getRichDestinations\n   */\n  static readonly GetRichDestinationsPath = '/json/servicesManager/getRichDestinations';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getRichDestinations()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichDestinations$Response(params: {\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ServicesManagerService.GetRichDestinationsPath, 'get');\n    if (params) {\n\n      rb.query('service', params.service);\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getRichDestinations$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichDestinations(params: {\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.getRichDestinations$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation addDestination\n   */\n  static readonly AddDestinationPath = '/urlinjsonout/servicesManager/addDestination';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `addDestination()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addDestination$Response(params: {\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * Destination&#x27;s destination, usually a DNS name\n     */\n    destination: string;\n\n    /**\n     * Destination&#x27;s type\n     */\n    type: DestinationType;\n\n    /**\n     * Destination&#x27;s propagationType\n     */\n    propagationType: DestinationPropagationType;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ServicesManagerService.AddDestinationPath, 'post');\n    if (params) {\n\n      rb.query('service', params.service);\n      rb.query('facility', params.facility);\n      rb.query('destination', params.destination);\n      rb.query('type', params.type);\n      rb.query('propagationType', params.propagationType);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `addDestination$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addDestination(params: {\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * Destination&#x27;s destination, usually a DNS name\n     */\n    destination: string;\n\n    /**\n     * Destination&#x27;s type\n     */\n    type: DestinationType;\n\n    /**\n     * Destination&#x27;s propagationType\n     */\n    propagationType: DestinationPropagationType;\n\n  }): Observable<void> {\n\n    return this.addDestination$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation addDestinationToMultipleServices\n   */\n  static readonly AddDestinationToMultipleServicesPath = '/json/servicesManager/addDestination';\n\n  /**\n   * Adds an destination for a facility and list of services. If destination doesn't exist it will be created.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `addDestinationToMultipleServices()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  addDestinationToMultipleServices$Response(params: {\n\n    body: { 'services': Array<Service>, 'facility': number, 'destination': string, 'type': DestinationType, 'propagationType': DestinationPropagationType }\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ServicesManagerService.AddDestinationToMultipleServicesPath, 'post');\n    if (params) {\n\n\n      rb.body(params.body, 'application/json');\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Adds an destination for a facility and list of services. If destination doesn't exist it will be created.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `addDestinationToMultipleServices$Response()` instead.\n   *\n   * This method sends `application/json` and handles response body of type `application/json`\n   */\n  addDestinationToMultipleServices(params: {\n\n    body: { 'services': Array<Service>, 'facility': number, 'destination': string, 'type': DestinationType, 'propagationType': DestinationPropagationType }\n  }): Observable<void> {\n\n    return this.addDestinationToMultipleServices$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeDestination\n   */\n  static readonly RemoveDestinationPath = '/urlinjsonout/servicesManager/removeDestination';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeDestination()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeDestination$Response(params: {\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * Destination&#x27;s destination\n     */\n    destination: string;\n\n    /**\n     * Destination&#x27;s type\n     */\n    type: DestinationType;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ServicesManagerService.RemoveDestinationPath, 'post');\n    if (params) {\n\n      rb.query('service', params.service);\n      rb.query('facility', params.facility);\n      rb.query('destination', params.destination);\n      rb.query('type', params.type);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeDestination$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeDestination(params: {\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n    /**\n     * Destination&#x27;s destination\n     */\n    destination: string;\n\n    /**\n     * Destination&#x27;s type\n     */\n    type: DestinationType;\n\n  }): Observable<void> {\n\n    return this.removeDestination$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeAllDestinations\n   */\n  static readonly RemoveAllDestinationsPath = '/urlinjsonout/servicesManager/removeAllDestinations';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeAllDestinations()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeAllDestinations$Response(params: {\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ServicesManagerService.RemoveAllDestinationsPath, 'post');\n    if (params) {\n\n      rb.query('service', params.service);\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeAllDestinations$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeAllDestinations(params: {\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.removeAllDestinations$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAssignedServices\n   */\n  static readonly GetAssignedServicesPath = '/json/servicesManager/getAssignedServices';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAssignedServices()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAssignedServices$Response(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ServicesManagerService.GetAssignedServicesPath, 'get');\n    if (params) {\n\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAssignedServices$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAssignedServices(params: {\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.getAssignedServices$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAssignedResources\n   */\n  static readonly GetAssignedResourcesPath = '/json/servicesManager/getAssignedResourcesForService';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAssignedResources()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAssignedResources$Response(params: {\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ServicesManagerService.GetAssignedResourcesPath, 'get');\n    if (params) {\n\n      rb.query('service', params.service);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAssignedResources$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAssignedResources(params: {\n\n    /**\n     * id of Service\n     */\n    service: number;\n\n  }): Observable<void> {\n\n    return this.getAssignedResources$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\n\n\n/**\n * UsersManager RPC API in Perun\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersManagerService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getUserById\n   */\n  static readonly GetUserByIdPath = '/json/usersManager/getUserById';\n\n  /**\n   * Returns object representing the User\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getUserById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserById$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UsersManagerService.GetUserByIdPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Returns object representing the User\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getUserById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserById(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getUserById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getUserByExtSourceNameAndExtLogin\n   */\n  static readonly GetUserByExtSourceNameAndExtLoginPath = '/json/usersManager/getUserByExtSourceNameAndExtLogin';\n\n  /**\n   * Returns User found by its authentication data\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getUserByExtSourceNameAndExtLogin()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserByExtSourceNameAndExtLogin$Response(params: {\n\n    /**\n     * external login of user, e.g. john\n     */\n    extLogin: string;\n\n    /**\n     * external source name, e.g. IdP entityId\n     */\n    extSourceName: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UsersManagerService.GetUserByExtSourceNameAndExtLoginPath, 'get');\n    if (params) {\n\n      rb.query('extLogin', params.extLogin);\n      rb.query('extSourceName', params.extSourceName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Returns User found by its authentication data\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getUserByExtSourceNameAndExtLogin$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserByExtSourceNameAndExtLogin(params: {\n\n    /**\n     * external login of user, e.g. john\n     */\n    extLogin: string;\n\n    /**\n     * external source name, e.g. IdP entityId\n     */\n    extSourceName: string;\n\n  }): Observable<void> {\n\n    return this.getUserByExtSourceNameAndExtLogin$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getRichUserWithAttributes\n   */\n  static readonly GetRichUserWithAttributesPath = '/json/usersManager/getRichUserWithAttributes';\n\n  /**\n   * Returns object representing the User with attributes\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getRichUserWithAttributes()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichUserWithAttributes$Response(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UsersManagerService.GetRichUserWithAttributesPath, 'get');\n    if (params) {\n\n      rb.query('user', params.user);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Returns object representing the User with attributes\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getRichUserWithAttributes$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getRichUserWithAttributes(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<void> {\n\n    return this.getRichUserWithAttributes$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getUserExtSources\n   */\n  static readonly GetUserExtSourcesPath = '/json/usersManager/getUserExtSources';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getUserExtSources()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserExtSources$Response(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UsersManagerService.GetUserExtSourcesPath, 'get');\n    if (params) {\n\n      rb.query('user', params.user);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getUserExtSources$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getUserExtSources(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<void> {\n\n    return this.getUserExtSources$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getGroupsForFacilityWhereUserIsActive\n   */\n  static readonly GetGroupsForFacilityWhereUserIsActivePath = '/json/usersManager/getGroupsWhereUserIsActive/facility';\n\n  /**\n   * That means User is a VALID in the VO and the Group and groups are assigned to the facility.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getGroupsForFacilityWhereUserIsActive()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupsForFacilityWhereUserIsActive$Response(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UsersManagerService.GetGroupsForFacilityWhereUserIsActivePath, 'get');\n    if (params) {\n\n      rb.query('user', params.user);\n      rb.query('facility', params.facility);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * That means User is a VALID in the VO and the Group and groups are assigned to the facility.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getGroupsForFacilityWhereUserIsActive$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupsForFacilityWhereUserIsActive(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * id of Facility\n     */\n    facility: number;\n\n  }): Observable<void> {\n\n    return this.getGroupsForFacilityWhereUserIsActive$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getGroupsForResourceWhereUserIsActive\n   */\n  static readonly GetGroupsForResourceWhereUserIsActivePath = '/json/usersManager/getGroupsWhereUserIsActive/resource';\n\n  /**\n   * That means User is a VALID in the VO and the Group and groups are assigned to the resource.\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getGroupsForResourceWhereUserIsActive()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupsForResourceWhereUserIsActive$Response(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UsersManagerService.GetGroupsForResourceWhereUserIsActivePath, 'get');\n    if (params) {\n\n      rb.query('user', params.user);\n      rb.query('resource', params.resource);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * That means User is a VALID in the VO and the Group and groups are assigned to the resource.\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getGroupsForResourceWhereUserIsActive$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGroupsForResourceWhereUserIsActive(params: {\n\n    /**\n     * id of User\n     */\n    user: number;\n\n    /**\n     * id of Resource\n     */\n    resource: number;\n\n  }): Observable<void> {\n\n    return this.getGroupsForResourceWhereUserIsActive$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilsService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getPerunRpcVersion\n   */\n  static readonly GetPerunRpcVersionPath = '/';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getPerunRpcVersion()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getPerunRpcVersion$Response(params?: {\n\n  }): Observable<StrictHttpResponse<string>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UtilsService.GetPerunRpcVersionPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: 'text/plain'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<string>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getPerunRpcVersion$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getPerunRpcVersion(params?: {\n\n  }): Observable<string> {\n\n    return this.getPerunRpcVersion$Response(params).pipe(\n      map((r: StrictHttpResponse<string>) => r.body as string)\n    );\n  }\n\n  /**\n   * Path part for operation getPerunStatus\n   */\n  static readonly GetPerunStatusPath = '/json/utils/getPerunStatus';\n\n  /**\n   * Returns list of strings which looks like this\n   * \"Version of Perun: 3.8.6\",\n   * \"Version of PerunDB: 3.1.55\",\n   * \"Version of Servlet: Apache Tomcat/9.0.16 (Debian)\",\n   * \"Version of DB-driver: PostgreSQL JDBC Driver-42.2.8\",\n   * \"Version of DB: PostgreSQL-12.0 (Debian 12.0-2.pgdg100+1)\",\n   * \"Version of Java platform: 11.0.5\",\n   * \"AuditerConsumer: '127.0.0.1:6071' with last processed id='23463958'\",\n   * \"AuditerConsumer: 'ldapcConsumer' with last processed id='23463958'\",\n   * \"AuditerConsumer: 'notifications' with last processed id='23463952'\",\n   * \"LastMessageId: 23463958\",\n   * \"Timestamp: 2019-11-14 10:12:30.99\"\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getPerunStatus()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getPerunStatus$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UtilsService.GetPerunStatusPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Returns list of strings which looks like this\n   * \"Version of Perun: 3.8.6\",\n   * \"Version of PerunDB: 3.1.55\",\n   * \"Version of Servlet: Apache Tomcat/9.0.16 (Debian)\",\n   * \"Version of DB-driver: PostgreSQL JDBC Driver-42.2.8\",\n   * \"Version of DB: PostgreSQL-12.0 (Debian 12.0-2.pgdg100+1)\",\n   * \"Version of Java platform: 11.0.5\",\n   * \"AuditerConsumer: '127.0.0.1:6071' with last processed id='23463958'\",\n   * \"AuditerConsumer: 'ldapcConsumer' with last processed id='23463958'\",\n   * \"AuditerConsumer: 'notifications' with last processed id='23463952'\",\n   * \"LastMessageId: 23463958\",\n   * \"Timestamp: 2019-11-14 10:12:30.99\"\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getPerunStatus$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getPerunStatus(params?: {\n\n  }): Observable<void> {\n\n    return this.getPerunStatus$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getPerunStatistics\n   */\n  static readonly GetPerunStatisticsPath = '/json/utils/getPerunStatistics';\n\n  /**\n   * Returns list of strings which looks like this\n   * \"Timestamp: '2019-11-14 10:46:39.613'\",\n   * \"USERS: '39927'\",\n   * \"FACILITIES: '552'\",\n   * \"DESTINATIONS: '2568'\",\n   * \"VOS: '341'\",\n   * \"RESOURCES: '2560'\",\n   * \"GROUPS: '2300'\",\n   * \"AUDITMESSAGES: '7333237'\"\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getPerunStatistics()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getPerunStatistics$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UtilsService.GetPerunStatisticsPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Returns list of strings which looks like this\n   * \"Timestamp: '2019-11-14 10:46:39.613'\",\n   * \"USERS: '39927'\",\n   * \"FACILITIES: '552'\",\n   * \"DESTINATIONS: '2568'\",\n   * \"VOS: '341'\",\n   * \"RESOURCES: '2560'\",\n   * \"GROUPS: '2300'\",\n   * \"AUDITMESSAGES: '7333237'\"\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getPerunStatistics$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getPerunStatistics(params?: {\n\n  }): Observable<void> {\n\n    return this.getPerunStatistics$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getPerunSystemTimeInMillis\n   */\n  static readonly GetPerunSystemTimeInMillisPath = '/json/utils/getPerunSystemTimeInMillis';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getPerunSystemTimeInMillis()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getPerunSystemTimeInMillis$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UtilsService.GetPerunSystemTimeInMillisPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getPerunSystemTimeInMillis$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getPerunSystemTimeInMillis(params?: {\n\n  }): Observable<void> {\n\n    return this.getPerunSystemTimeInMillis$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getGuiConfiguration\n   */\n  static readonly GetGuiConfigurationPath = '/json/utils/getGuiConfiguration';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getGuiConfiguration()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGuiConfiguration$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UtilsService.GetGuiConfigurationPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getGuiConfiguration$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getGuiConfiguration(params?: {\n\n  }): Observable<void> {\n\n    return this.getGuiConfiguration$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { VoAdminRoles } from '../models/vo-admin-roles';\n\n\n/**\n * VosManager RPC API in Perun\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class VosManagerService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getMyVos\n   */\n  static readonly GetMyVosPath = '/json/vosManager/getVos';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMyVos()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMyVos$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, VosManagerService.GetMyVosPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMyVos$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getMyVos(params?: {\n\n  }): Observable<void> {\n\n    return this.getMyVos$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getAllVos\n   */\n  static readonly GetAllVosPath = '/json/vosManager/getAllVos';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllVos()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllVos$Response(params?: {\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, VosManagerService.GetAllVosPath, 'get');\n    if (params) {\n\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllVos$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getAllVos(params?: {\n\n  }): Observable<void> {\n\n    return this.getAllVos$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getVoByShortName\n   */\n  static readonly GetVoByShortNamePath = '/json/vosManager/getVoByShortName';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getVoByShortName()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoByShortName$Response(params?: {\n\n    /**\n     * short name of Vo\n     */\n    shortName?: string;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, VosManagerService.GetVoByShortNamePath, 'get');\n    if (params) {\n\n      rb.query('shortName', params.shortName);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getVoByShortName$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoByShortName(params?: {\n\n    /**\n     * short name of Vo\n     */\n    shortName?: string;\n\n  }): Observable<void> {\n\n    return this.getVoByShortName$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getVoById\n   */\n  static readonly GetVoByIdPath = '/json/vosManager/getVoById';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getVoById()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoById$Response(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, VosManagerService.GetVoByIdPath, 'get');\n    if (params) {\n\n      rb.query('id', params.id);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getVoById$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoById(params: {\n\n    /**\n     * numeric id\n     */\n    id: number;\n\n  }): Observable<void> {\n\n    return this.getVoById$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation addVoAdminUser\n   */\n  static readonly AddVoAdminUserPath = '/urlinjsonout/vosManager/addAdmin/user';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `addVoAdminUser()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addVoAdminUser$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, VosManagerService.AddVoAdminUserPath, 'post');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('user', params.user);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `addVoAdminUser$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addVoAdminUser(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<void> {\n\n    return this.addVoAdminUser$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation addVoAdminGroup\n   */\n  static readonly AddVoAdminGroupPath = '/urlinjsonout/vosManager/addAdmin/group';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `addVoAdminGroup()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addVoAdminGroup$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * Group id\n     */\n    authorizedGroup: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, VosManagerService.AddVoAdminGroupPath, 'post');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('authorizedGroup', params.authorizedGroup);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `addVoAdminGroup$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  addVoAdminGroup(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * Group id\n     */\n    authorizedGroup: number;\n\n  }): Observable<void> {\n\n    return this.addVoAdminGroup$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeVoAdminUser\n   */\n  static readonly RemoveVoAdminUserPath = '/urlinjsonout/vosManager/removeAdmin/user';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeVoAdminUser()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeVoAdminUser$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, VosManagerService.RemoveVoAdminUserPath, 'post');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('user', params.user);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeVoAdminUser$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeVoAdminUser(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * id of User\n     */\n    user: number;\n\n  }): Observable<void> {\n\n    return this.removeVoAdminUser$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation removeVoAdminGroup\n   */\n  static readonly RemoveVoAdminGroupPath = '/urlinjsonout/vosManager/removeAdmin/group';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `removeVoAdminGroup()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeVoAdminGroup$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * Group id\n     */\n    authorizedGroup: number;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, VosManagerService.RemoveVoAdminGroupPath, 'post');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('authorizedGroup', params.authorizedGroup);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `removeVoAdminGroup$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  removeVoAdminGroup(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * Group id\n     */\n    authorizedGroup: number;\n\n  }): Observable<void> {\n\n    return this.removeVoAdminGroup$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getVoAdminUsers\n   */\n  static readonly GetVoAdminUsersPath = '/json/vosManager/getAdmins';\n\n  /**\n   * Get list of all vo administrators for supported role and specific vo.\n   * If onlyDirectAdmins is true, return only direct admins of the vo for supported role.\n   * Supported roles: VOOBSERVER, TOPGROUPCREATOR, VOADMIN\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getVoAdminUsers()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoAdminUsers$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * supported role name\n     */\n    role: VoAdminRoles;\n\n    /**\n     * get only direct administrators (if false, get both direct and indirect)\n     */\n    onlyDirectAdmins: boolean;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, VosManagerService.GetVoAdminUsersPath, 'get');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('role', params.role);\n      rb.query('onlyDirectAdmins', params.onlyDirectAdmins);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get list of all vo administrators for supported role and specific vo.\n   * If onlyDirectAdmins is true, return only direct admins of the vo for supported role.\n   * Supported roles: VOOBSERVER, TOPGROUPCREATOR, VOADMIN\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getVoAdminUsers$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoAdminUsers(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * supported role name\n     */\n    role: VoAdminRoles;\n\n    /**\n     * get only direct administrators (if false, get both direct and indirect)\n     */\n    onlyDirectAdmins: boolean;\n\n  }): Observable<void> {\n\n    return this.getVoAdminUsers$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n  /**\n   * Path part for operation getVoAdminGroups\n   */\n  static readonly GetVoAdminGroupsPath = '/json/vosManager/getAdminGroups';\n\n  /**\n   * Get list of administrator groups of the given VO.\n   * Supported roles: VOOBSERVER, TOPGROUPCREATOR, VOADMIN\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getVoAdminGroups()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoAdminGroups$Response(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * supported role name\n     */\n    role: VoAdminRoles;\n\n  }): Observable<StrictHttpResponse<void>> {\n\n    const rb = new RequestBuilder(this.rootUrl, VosManagerService.GetVoAdminGroupsPath, 'get');\n    if (params) {\n\n      rb.query('vo', params.vo);\n      rb.query('role', params.role);\n\n    }\n    return this.http.request(rb.build({\n      responseType: 'text',\n      accept: '*/*'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n      })\n    );\n  }\n\n  /**\n   * Get list of administrator groups of the given VO.\n   * Supported roles: VOOBSERVER, TOPGROUPCREATOR, VOADMIN\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getVoAdminGroups$Response()` instead.\n   *\n   * This method doesn't expect any response body\n   */\n  getVoAdminGroups(params: {\n\n    /**\n     * id of Vo\n     */\n    vo: number;\n\n    /**\n     * supported role name\n     */\n    role: VoAdminRoles;\n\n  }): Observable<void> {\n\n    return this.getVoAdminGroups$Response(params).pipe(\n      map((r: StrictHttpResponse<void>) => r.body as void)\n    );\n  }\n\n}\n","export { AttributesService } from './lib/attributes.service';\nexport { AuthzService } from './lib/authz.service';\nexport { FacilityService } from './lib/facility.service';\nexport { GroupService } from './lib/group.service';\nexport { MembersService } from './lib/members.service';\nexport { PerunApiService } from './lib/perun-api-service';\nexport { PropagationStatsReaderService } from './lib/propagation-stats-reader.service';\nexport { RegistrarService } from './lib/registrar.service';\nexport { ResourcesService } from './lib/resources.service';\nexport { RtMessagesService } from './lib/rt-messages.service';\nexport { ServiceService } from './lib/service.service';\nexport { UsersService } from './lib/users.service';\nexport { VoService } from './lib/vo.service';\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport { Attribute, AttributeDefinition, AttributeRights, AttrEntity, Graph } from '@perun-web-apps/perun/models';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttributesService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) {}\n\n  getAttribute(entityId: number, entity: AttrEntity, urn: string, showNotificationOnError = true): Observable<Attribute> {\n    return this.apiService.get(`json/attributesManager/getAttribute?${entity}=${entityId}&attributeName=${urn}`,\n      new HttpParams(), showNotificationOnError);\n  }\n\n  setAttribute(entityId: number, entity: AttrEntity, attribute: Attribute, showNotificationOnError = true): Observable<void> {\n    const payload = {};\n    payload[entity] = entityId;\n    payload['attribute'] = attribute;\n\n    return this.apiService.post(`json/attributesManager/setAttribute`, payload, showNotificationOnError);\n  }\n\n  getAttributeModulesDependenciesGraphText(format: string, showNotificationOnError = true): Observable<Graph> {\n    return this.apiService.get(`json/attributesManager/getAttributeModulesDependenciesGraphText?format=${format}`,\n      new HttpParams(), showNotificationOnError);\n  }\n\n  getAttributesDefinition(showNotificationOnError = true): Observable<AttributeDefinition[]> {\n    return this.apiService.get('json/attributesManager/getAttributesDefinition',\n      new HttpParams(), showNotificationOnError);\n  }\n\n  getAllAttributes(entityId: number, entity: AttrEntity, showNotificationOnError = true): Observable<Attribute[]> {\n    return this.apiService.get(`json/attributesManager/getAttributes?${entity}=${entityId}`, new HttpParams(), showNotificationOnError);\n  }\n\n  deleteAttributes(entityId: number, entity: AttrEntity, attributeIDs: number[], showNotificationOnError = true) {\n    const payload = {};\n    payload[entity] = entityId;\n    payload['attributes'] = attributeIDs;\n\n    return this.apiService.post('json/attributesManager/removeAttributes', payload, showNotificationOnError);\n  }\n\n  getAttributeDefinitions(voId: number, entity: string, showNotificationOnError = true): Observable<AttributeDefinition[]> {\n    return this.apiService.get(`json/attributesManager/getAttributesDefinitionWithRights?${entity}=${voId}`,\n      new HttpParams(), showNotificationOnError);\n  }\n\n  setAttributes(entityId: number, entity: AttrEntity, attributes: Attribute[], showNotificationOnError = true): Observable<number> {\n    const payload = {};\n    payload[entity] = entityId;\n    payload['attributes'] = attributes;\n\n    return this.apiService.post('json/attributesManager/setAttributes', payload, showNotificationOnError);\n  }\n\n  getAttributes(entityId: number, entity: AttrEntity, attributes: string[], showNotificationOnError = true): Observable<Attribute[]> {\n    const payload = {};\n    payload[entity] = entityId;\n    payload['attrNames'] = attributes;\n\n    return this.apiService.post('json/attributesManager/getAttributes', payload, showNotificationOnError);\n  }\n\n  deleteAttributeDefinitions(attributeDefIds: number[], showNotificationOnError = true) {\n    const payload = {};\n    payload['attributes'] = attributeDefIds;\n\n    return this.apiService.post('json/attributesManager/deleteAttributes', payload, showNotificationOnError);\n  }\n\n  createAttributeDefinition(attrDef: AttributeDefinition, showNotificationOnError = true): Observable<AttributeDefinition> {\n    const payload = {};\n    payload['attribute'] = attrDef;\n\n    return this.apiService.post('json/attributesManager/createAttribute', payload, showNotificationOnError);\n  }\n\n  setAttributesRights(rights: AttributeRights[], showNotificationOnError = true) {\n    const payload = {};\n    payload['rights'] = rights;\n\n    return this.apiService.post('json/attributesManager/setAttributeRights', payload, showNotificationOnError);\n  }\n}\n\n","import { Inject, Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpParams} from '@angular/common/http';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport { Group, PerunPrincipal, RichUser, Role } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthzService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) { }\n\n  getPerunPrincipal(showNotificationOnError = true): Observable<PerunPrincipal> {\n    return this.apiService.get('json/authzResolver/getPerunPrincipal', new HttpParams(), showNotificationOnError);\n  }\n\n  getRichAdmins(role: string, complementaryObjectId: number, complementaryObjectName: string, attributes: string[],\n                allUserAttributes = false, onlyDirectAdmins = true, showNotificationOnError = true): Observable<RichUser[]> {\n    return this.apiService\n      .post(`json/authzResolver/getRichAdmins`,\n        {\n          role: role,\n          complementaryObjectId: complementaryObjectId,\n          complementaryObjectName: complementaryObjectName,\n          specificAttributes: attributes,\n          allUserAttributes: allUserAttributes,\n          onlyDirectAdmins: onlyDirectAdmins\n        }, showNotificationOnError);\n  }\n\n  getManagerGroups( role: string, complementaryObjectId: number, complementaryObjectName: string,\n                    showNotificationOnError = true): Observable<Group[]> {\n    return this.apiService.post(`json/authzResolver/getAdminGroups`, {\n      role: role,\n      complementaryObjectId: complementaryObjectId,\n      complementaryObjectName: complementaryObjectName\n    }, showNotificationOnError);\n  }\n\n  removeManagers(role: Role, userIds: number[], complementaryObject: Object, showNotificationOnError = true): Observable<RichUser[]> {\n    return this.apiService.post('json/authzResolver/unsetRole', {\n      role: role,\n      users: userIds,\n      complementaryObject: complementaryObject\n    }, showNotificationOnError);\n  }\n\n  setRole(role: Role, userIds: number[], complementaryObject: Object, showNotificationOnError = true): Observable<RichUser> {\n    return this.apiService.post('json/authzResolver/setRole', {\n      role: role,\n      users: userIds,\n      complementaryObject: complementaryObject\n    }, showNotificationOnError);\n  }\n\n  unsetRole(role: Role, userIds: number[], complementaryObject: Object, showNotificationOnError = true): Observable<RichUser[]> {\n    return this.apiService.post('json/authzResolver/unsetRole', {\n      role: role,\n      users: userIds,\n      complementaryObject: complementaryObject\n    }, showNotificationOnError);\n  }\n\n  unsetRoleForGroups(role: Role, groupIds: number[], complementaryObject: Object, showNotificationOnError = true): Observable<RichUser[]> {\n    return this.apiService.post('json/authzResolver/unsetRole', {\n      role: role,\n      authorizedGroups: groupIds,\n      complementaryObject: complementaryObject\n    }, showNotificationOnError);\n  }\n\n  setRoleForGroups(role: Role, groupIds: number[], complementaryObject: Object, showNotificationOnError = true): Observable<RichUser> {\n    return this.apiService.post('json/authzResolver/setRole', {\n      role: role,\n      authorizedGroups: groupIds,\n      complementaryObject: complementaryObject\n    }, showNotificationOnError);\n  }\n\n  logout(showNotificationOnError = true): Observable<string> {\n    return this.apiService.get('json/utils/logout', new HttpParams(), showNotificationOnError);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpParams} from '@angular/common/http';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport { Facility, Group, Resource, RichFacility, Vo } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FacilityService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) { }\n\n  getFacilityById(id: number, showNotificationOnError = true): Observable<Facility> {\n    return this.apiService.post('json/facilitiesManager/getFacilityById', {\n      'id': id\n    }, showNotificationOnError);\n  }\n\n  getFacilitiesByDestination(destination: string, showNotificationOnError = true): Observable<Facility[]> {\n    return this.apiService.post('json/facilitiesManager/getFacilitiesByDestination', {\n      'destination': destination\n    }, showNotificationOnError);\n  }\n\n  getAssignedResources(facility: number, showNotificationOnError = true): Observable<Resource[]> {\n    return this.apiService.post('json/facilitiesManager/getAssignedResources', {\n      'facility': facility\n    }, showNotificationOnError);\n  }\n\n  getAllowedGroups(facility: number, vo: number, showNotificationOnError = true): Observable<Group[]> {\n    return this.apiService.post('json/facilitiesManager/getAllowedGroups', {\n      'facility': facility,\n      'vo': vo\n    }, showNotificationOnError);\n  }\n\n  getFacilities(showNotificationOnError = true): Observable<Facility[]> {\n    return this.apiService.get('json/facilitiesManager/getFacilities', new HttpParams(), showNotificationOnError);\n  }\n\n  getRichFacilities(showNotificationOnError = true): Observable<RichFacility[]> {\n    return this.apiService.get('json/facilitiesManager/getRichFacilities', new HttpParams(), showNotificationOnError);\n  }\n\n  getAllowedVos(facility: number, showNotificationOnError = true): Observable<Vo[]> {\n    return this.apiService.post('json/facilitiesManager/getAllowedVos', {\n      'facility': facility\n    }, showNotificationOnError);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpParams} from '@angular/common/http';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport { Group, Vo } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) { }\n\n  getGroupById(id: number, showNotificationOnError = true): Observable<Group> {\n    return this.apiService.get(`json/groupsManager/getGroupById?id=${id}`, new HttpParams(), showNotificationOnError);\n  }\n\n  getAllGroups(voId: number, showNotificationOnError = true): Observable<Group[]> {\n    return this.apiService.get(`json/groupsManager/getAllGroups?vo=${voId}`, new HttpParams(), showNotificationOnError);\n  }\n\n  getAllSubGroups(groupId: number, showNotificationOnError = true): Observable<Group[]> {\n    return this.apiService.get(`json/groupsManager/getSubGroups?parentGroup=${groupId}`, new HttpParams(), showNotificationOnError);\n  }\n\n  getSubGroups(groupId: number, showNotificationOnError = true): Observable<Group[]> {\n    return this.apiService.get(`json/groupsManager/getSubGroups?parentGroup=${groupId}`, new HttpParams(), showNotificationOnError);\n  }\n\n  getAllRichSubGroupsWithAttributesByNames(groupId: number, showNotificationOnError = true): Observable<Group[]> {\n    return this.apiService.get(`json/groupsManager/getAllRichSubGroupsWithAttributesByNames?group=${groupId}&attrNames=[]`,\n      new HttpParams(), showNotificationOnError);\n  }\n\n  createGroup(voId: number, name: string, description: string, showNotificationOnError = true): Observable<Group> {\n    return this.apiService.post('json/groupsManager/createGroup', {\n      vo: voId,\n      name: name,\n      description: description\n    }, showNotificationOnError);\n  }\n\n  createSubGroup(groupId: number, name: string, description: string, showNotificationOnError = true): Observable<Group> {\n    return this.apiService.post('json/groupsManager/createGroup', {\n      parentGroup: groupId,\n      name: name,\n      description: description\n    }, showNotificationOnError);\n  }\n\n  getMemberGroups(memberId: number, showNotificationOnError = true): Observable<Group[]> {\n    return this.apiService.get(`json/groupsManager/getMemberGroups?member=${memberId}`, new HttpParams(), showNotificationOnError);\n  }\n\n  deleteGroups(groups: Group[], showNotificationOnError = true) {\n    return this.apiService.post('json/groupsManager/deleteGroups', {\n      groups : groups.map( val => (val.id)),\n      forceDelete : 1\n    }, showNotificationOnError);\n  }\n\n  getAllMemberGroups(member: number, showNotificationOnError = true): Observable<Group[]> {\n    return this.apiService.post('json/groupsManager/getAllMemberGroups', {\n      'member': member\n    }, showNotificationOnError);\n  }\n\n  moveGroup(movingGroupId: number, destinationGroupId?: number, showNotificationOnError = true): Observable<void> {\n    return this.apiService.post('json/groupsManager/moveGroup', {\n      'movingGroup' : movingGroupId,\n      'destinationGroup' : destinationGroupId\n    }, showNotificationOnError);\n  }\n\n  getVoOfGroup(id: number, showNotificationOnError = true): Observable<Vo> {\n    return this.apiService.get(`json/groupsManager/getVo?group=${id}`, new HttpParams(), showNotificationOnError);\n  }\n\n  addMembers(group: number, members: number[], showNotificationOnError: boolean = true): Observable<void> {\n    return this.apiService.post('json/groupsManager/addMembers', {\n      group: group,\n      members: members\n      }, showNotificationOnError);\n  }\n\n  removeMembers(group: number, members: number[], showNotificationOnError: boolean = true): Observable<any> {\n    return this.apiService.post('json/groupsManager/removeMembers', {\n      group: group,\n      members: members\n    }, showNotificationOnError);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpParams} from '@angular/common/http';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport { Candidate, Group, Member, RichMember } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) { }\n\n  getMemberById(memberId: number, showNotificationOnError = true): Observable<Member> {\n    return this.apiService.get(`json/membersManager/getMemberById?id=${memberId}`, new HttpParams(), showNotificationOnError);\n  }\n\n  findCompleteRichMembers(voId: number, searchString: string, attrsNames: string[],allowedStatuses:string [], showNotificationOnError = true):\n    Observable<RichMember[]> {\n    return this.apiService.post('json/membersManager/findCompleteRichMembers',\n      {\n        'vo': voId,\n        'searchString': searchString,\n        'attrsNames': attrsNames,\n        'allowedStatuses': allowedStatuses\n      }, showNotificationOnError);\n  }\n\n  getCompleteRichMembers(voId: number, attrsNames: string[], allowedStatuses: string[], showNotificationOnError = true): Observable<RichMember[]> {\n    return this.apiService.post(`json/membersManager/getCompleteRichMembers`,\n      {\n        'vo': voId,\n        'attrsNames': attrsNames,\n        'allowedStatuses': allowedStatuses\n      }, showNotificationOnError);\n  }\n\n  getRichMemberWithAttributes(memberId: number, showNotificationOnError = true): Observable<RichMember> {\n    return this.apiService.get(`json/membersManager/getRichMemberWithAttributes?id=${memberId}`,\n      new HttpParams(), showNotificationOnError);\n  }\n\n  findCompleteRichMembersForGroup(groupId: number, searchString: string, attrsNames: string[], showNotificationOnError = true):\n    Observable<RichMember[]> {\n\n    return this.apiService.post('json/membersManager/findCompleteRichMembers', {\n      'group': groupId,\n      'attrsNames': attrsNames,\n      'allowedStatuses': ['INVALID', 'SUSPENDED', 'EXPIRED', 'VALID', 'DISABLED'],\n      'searchString': searchString,\n      'lookingInParentGroup': false\n    }, showNotificationOnError);\n  }\n\n  getCompleteRichMembersForGroup(groupId: number, attrNames: string[], showNotificationOnError = true): Observable<RichMember[]> {\n    return this.apiService.post('json/membersManager/getCompleteRichMembers', {\n      'group': groupId,\n      'attrsNames': attrNames,\n      'allowedStatuses': ['INVALID', 'SUSPENDED', 'VALID'],\n      'lookingInParentGroup': false\n    }, showNotificationOnError);\n  }\n\n  deleteMembers(memberIds: number[], showNotificationOnError = true): Observable<void> {\n    return this.apiService.post('json/membersManager/deleteMembers', {\n      'members': memberIds\n    }, showNotificationOnError);\n  }\n\n  getMembersByUser(user: number, showNotificationOnError = true): Observable<Member[]> {\n    return this.apiService.post('json/membersManager/getMembersByUser', {\n      'user': user\n    }, showNotificationOnError);\n  }\n\n  createMember(voId: number, userId: number, showNotificationOnError = true): Observable<RichMember> {\n    return this.apiService.post('json/membersManager/createMember', {\n      vo: voId,\n      user: userId\n    }, showNotificationOnError);\n  }\n\n  createMemberWithGroups(\n    voId: number,\n    userId: number,\n    groups: Group[],\n    showNotificationOnError = true\n  ): Observable<RichMember> {\n    return this.apiService.post('json/membersManager/createMember', {\n      vo: voId,\n      user: userId,\n      groups: groups\n    }, showNotificationOnError);\n  }\n\n  createMemberForCandidateWithGroups(\n    voId: number,\n    candidate: Candidate,\n    groups: Group[],\n    showNotificationOnError = true\n  ): Observable<RichMember> {\n    return this.apiService.post('json/membersManager/createMember', {\n      vo: voId,\n      candidate: candidate,\n      groups: groups\n    }, showNotificationOnError);\n  }\n\n  createMemberForCandidate(\n    voId: number,\n    candidate: Candidate,\n    showNotificationOnError = true\n  ): Observable<RichMember> {\n    return this.apiService.post('json/membersManager/createMember', {\n      vo: voId,\n      candidate: candidate\n    }, showNotificationOnError);\n  }\n\n  getMemberByUser(voId: number, userId: number, showNotificationOnError = true): Observable<Member> {\n    return this.apiService.post('json/membersManager/getMemberByUser', {\n      'vo': voId,\n      'user': userId\n    }, showNotificationOnError);\n  }\n\n  getRichMember(memberId: number, showNotificationOnError = true): Observable<RichMember> {\n    return this.apiService.post('json/membersManager/getRichMember', {\n      'id': memberId\n    }, showNotificationOnError);\n  }\n\n  setStatus(member: number, status: string, showNotificationOnError = true): Observable<Member> {\n    return this.apiService.post('json/membersManager/setStatus', {\n      'member': member,\n      'status': status\n    }, showNotificationOnError);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport { ResourceState } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PropagationStatsReaderService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) {}\n\n  getAllResourcesState(voId: number, showNotificationOnError = true): Observable<ResourceState[]> {\n    return this.apiService.post('json/propagationStatsReader/getAllResourcesState',\n      {\n        'voId': voId\n      }, showNotificationOnError);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport {\n  Application,\n  ApplicationForm,\n  ApplicationFormItem,\n  ApplicationFormItemData, ApplicationMail, UserExtSource\n} from '@perun-web-apps/perun/models';\nimport { HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrarService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) { }\n\n  consolidate(token: string, showNotificationsOnError = true): Observable<UserExtSource[]> {\n    return this.apiService.post('json/registrarManager/consolidateIdentityUsingToken', {\n      token: token\n    }, showNotificationsOnError);\n  }\n\n  sendInvitation(voId: number, name: string, email: string, language: string, showNotificationOnError = true): Observable<void> {\n    return this.apiService.post('json/registrarManager/sendInvitation', {\n      'voId': voId,\n      'name': name,\n      'email': email,\n      'language': language}, showNotificationOnError);\n  }\n\n  sendInvitationToExistingUser(userId: number, voId: number, showNotificationOnError = true): Observable<void> {\n    return this.apiService.post('json/registrarManager/sendInvitation', {\n      voId: voId,\n      userId: userId\n    }, showNotificationOnError);\n  }\n\n  getApplicationsForVo(voId: number, showNotificationOnError = true): Observable<Application[]> {\n    return this.apiService.post('json/registrarManager/getApplicationsForVo', {\n      'vo': voId\n    }, showNotificationOnError);\n  }\n\n  getApplicationsForVoWithState(voId: number, state: string[], showNotificationOnError = true): Observable<Application[]> {\n    return this.apiService.post('json/registrarManager/getApplicationsForVo', {\n      'vo': voId,\n      'state': state\n    }, showNotificationOnError);\n  }\n\n  getApplicationsForGroup(groupId: number, showNotificationOnError = true): Observable<Application[]> {\n    return this.apiService.post('json/registrarManager/getApplicationsForGroup', {\n      'group': groupId\n    }, showNotificationOnError);\n  }\n\n  getApplicationsForGroupWithState(groupId: number, state: string[], showNotificationOnError = true): Observable<Application[]> {\n    return this.apiService.post('json/registrarManager/getApplicationsForGroup', {\n      'group': groupId,\n      'state': state\n    }, showNotificationOnError);\n  }\n\n  getApplicationById(applicationId: number, showNotificationOnError = true): Observable<Application> {\n    return this.apiService.post('json/registrarManager/getApplicationById', {\n      'id': applicationId\n    }, showNotificationOnError);\n  }\n\n  getApplicationDataById(applicationId: number, showNotificationOnError = true): Observable<ApplicationFormItemData[]> {\n    return this.apiService.post('json/registrarManager/getApplicationDataById', {\n      'id': applicationId\n    }, showNotificationOnError);\n  }\n\n  verifyApplication(applicationId: number, showNotificationOnError = true): Observable<Application> {\n    return this.apiService.post('json/registrarManager/verifyApplication', {\n      'id': applicationId\n    }, showNotificationOnError);\n  }\n\n  approveApplication(applicationId: number, showNotificationOnError = true): Observable<Application> {\n    return this.apiService.post('json/registrarManager/approveApplication', {\n      'id': applicationId\n    }, showNotificationOnError);\n  }\n\n  rejectApplication(applicationId: number, reason: string, showNotificationOnError = true): Observable<Application> {\n    return this.apiService.post('json/registrarManager/rejectApplication', {\n      'id': applicationId,\n      'reason': reason\n    }, showNotificationOnError);\n  }\n\n  deleteApplication(applicationId: number, showNotificationOnError = true): Observable<Application> {\n    return this.apiService.post('json/registrarManager/deleteApplication', {\n      'id': applicationId\n    }, showNotificationOnError);\n  }\n\n  sendMessage(applicationId: number, mailType: string, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/sendMessage', {\n      'appId': applicationId,\n      'mailType': mailType\n    }, showNotificationOnError);\n  }\n\n  sendMessageWithReason(applicationId: number, mailType: string, reason: string, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/sendMessage', {\n      'appId': applicationId,\n      'mailType': mailType,\n      'reason': reason\n    }, showNotificationOnError);\n  }\n\n  getApplicationFormForVo(voId: number, showNotificationOnError = true): Observable<ApplicationForm> {\n    return this.apiService.post('json/registrarManager/getApplicationForm', {\n      'vo': voId\n    }, showNotificationOnError);\n  }\n\n  getApplicationFormForGroup(groupId: number, showNotificationOnError = true): Observable<ApplicationForm> {\n    return this.apiService.post('json/registrarManager/getApplicationForm', {\n      'group': groupId\n    }, showNotificationOnError);\n  }\n\n  getFormItemsForVo(voId: number, showNotificationOnError = true): Observable<ApplicationFormItem[]> {\n    return this.apiService.post('json/registrarManager/getFormItems', {\n      'vo': voId\n    }, showNotificationOnError);\n  }\n\n  updateFormItemsForVo(voId: number, items: ApplicationFormItem[], showNotificationOnError = true): Observable<number> {\n    return this.apiService.post('json/registrarManager/updateFormItems', {\n      'items': items,\n      'vo': voId\n    }, showNotificationOnError);\n  }\n\n  updateFormItemsForGroup(groupId: number, items: ApplicationFormItem[], showNotificationOnError = true): Observable<number> {\n    return this.apiService.post('json/registrarManager/updateFormItems', {\n      'items': items,\n      'group': groupId\n    }, showNotificationOnError);\n  }\n\n  updateForm(applicationItem: ApplicationForm, showNotificationOnError = true): Observable<ApplicationForm> {\n    return this.apiService.post('json/registrarManager/updateForm', {\n      'form': applicationItem\n    }, showNotificationOnError);\n  }\n\n  copyFormFromVoToVo(fromVo: number, toVo: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/copyForm', {\n      'fromVo': fromVo,\n      'toVo': toVo\n    }, showNotificationOnError);\n  }\n\n  copyFormFromGroupToVo(fromGroup: number, toVo: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/copyForm', {\n      'fromGroup': fromGroup,\n      'toVo': toVo\n    }, showNotificationOnError);\n  }\n\n  getApplicationMailsForVo(vo: number, showNotificationOnError = true): Observable<ApplicationMail[]> {\n    return this.apiService.post('json/registrarManager/getApplicationMails', {\n      'vo': vo\n    }, showNotificationOnError);\n  }\n\n  getApplicationMailsForGroup(group: number, showNotificationOnError = true): Observable<ApplicationMail[]> {\n    return this.apiService.post('json/registrarManager/getApplicationMails', {\n      'group': group\n    }, showNotificationOnError);\n  }\n\n  setSendingEnabled(enabled: number, applicationMails: ApplicationMail[], showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/setSendingEnabled', {\n      'enabled': enabled,\n      'mails': applicationMails\n    }, showNotificationOnError);\n  }\n\n  copyMailsFromGroupToVo(fromGroup: number, toVo: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/copyMails', {\n      'fromGroup': fromGroup,\n      'toVo': toVo\n    }, showNotificationOnError);\n  }\n\n  copyMailsFromVoToVo(fromVo: number, toVo: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/copyMails', {\n      'fromVo': fromVo,\n      'toVo': toVo\n    }, showNotificationOnError);\n  }\n\n  deleteApplicationMailForVo(vo: number, id: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/deleteApplicationMail', {\n      'vo': vo,\n      'id': id\n    }, showNotificationOnError);\n  }\n\n  deleteApplicationMailForGroup(group: number, id: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/deleteApplicationMail', {\n      'group': group,\n      'id': id\n    }, showNotificationOnError);\n  }\n\n  updateApplicationMail(mail: ApplicationMail, showNotificationOnError = true) {\n    return this.apiService.post( 'json/registrarManager/updateApplicationMail', {\n      'mail': mail\n    }, showNotificationOnError);\n  }\n\n  addApplicationMailForVo(vo: number, mail: ApplicationMail, showNotificationOnError = true): Observable<ApplicationMail> {\n    return this.apiService.post('json/registrarManager/addApplicationMail', {\n      'vo': vo,\n      'mail': mail\n    }, showNotificationOnError);\n  }\n\n  addApplicationMailForGroup(group: number, mail: ApplicationMail, showNotificationOnError = true): Observable<ApplicationMail> {\n    return this.apiService.post('json/registrarManager/addApplicationMail', {\n      'group': group,\n      'mail': mail\n    }, showNotificationOnError);\n  }\n\n  copyFormFromGroupToGroup(fromGroup: number, toGroup: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/copyForm', {\n      'fromGroup': fromGroup,\n      'toGroup': toGroup\n    }, showNotificationOnError);\n  }\n\n  copyFormFromVoToGroup(fromVo: number, toGroup: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/copyForm', {\n      'fromVo': fromVo,\n      'toGroup': toGroup\n    }, showNotificationOnError);\n  }\n\n  copyMailsFromGroupToGroup(fromGroup: number, toGroup: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/copyMails', {\n      'fromGroup': fromGroup,\n      'toGroup': toGroup\n    }, showNotificationOnError);\n  }\n\n  copyMailsFromVoToGroup(fromVo: number, toGroup: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/copyMails', {\n      'fromVo': fromVo,\n      'toGroup': toGroup\n    }, showNotificationOnError);\n  }\n\n  getFormItemsForGroup(group: number, showNotificationOnError = true): Observable<ApplicationFormItem[]> {\n    return this.apiService.post('json/registrarManager/getFormItems', {\n      'group': group\n    }, showNotificationOnError);\n  }\n\n  createApplicationForm(group: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/createApplicationForm', {\n      'group': group\n    }, showNotificationOnError);\n  }\n\n  getConsolidatorToken(showNotificationOnError = true): Observable<string> {\n    return this.apiService.get('json/registrarManager/getConsolidatorToken',\n      new HttpParams(), showNotificationOnError);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpParams} from '@angular/common/http';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport { Group, Resource, ResourceTag, RichResource, Service } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResourcesService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) { }\n\n  getResourceById(id: number, showNotificationOnError = true): Observable<Resource> {\n    return this.apiService.post('json/resourcesManager/getResourceById', {\n      id: id\n    }, showNotificationOnError);\n  }\n\n  getResourcesByVo(id: number, showNotificationOnError = true): Observable<RichResource[]> {\n    return this.apiService.get(`json/resourcesManager/getRichResources?vo=${id}`, new HttpParams(), showNotificationOnError);\n  }\n\n  getResourcesByGroup(id: number, showNotificationOnError = true): Observable<RichResource[]> {\n    return this.apiService.get(`json/resourcesManager/getAssignedRichResources?group=${id}`, new HttpParams(), showNotificationOnError);\n  }\n\n  getAssignedResources(group: number, showNotificationOnError = true): Observable<Resource[]> {\n    return this.apiService.post('json/resourcesManager/getAssignedResources', {\n      'group': group\n    }, showNotificationOnError);\n  }\n\n  getAssignedServices(resource: number, showNotificationOnError = true): Observable<Service[]> {\n    return this.apiService.post('json/resourcesManager/getAssignedServices', {\n      'resource': resource\n    }, showNotificationOnError);\n  }\n\n  getAllResources(facilityId: number, showNotificationOnError = true): Observable<RichResource[]> {\n    return this.apiService\n      .get(`json/facilitiesManager/getAssignedRichResources?facility=${facilityId}`, new HttpParams(), showNotificationOnError);\n  }\n\n  removeResource(resourceId: number, showNotificationOnError = true) {\n    return this.apiService.post('json/resourcesManager/deleteResource', {\n      resource : resourceId,\n      forceDelete : 1\n    }, showNotificationOnError);\n  }\n\n  getAllResourcesTagsForVo(voId: number, showNotificationOnError = true): Observable<ResourceTag[]> {\n    return this.apiService.post('json/resourcesManager/getAllResourcesTagsForVo', {\n      'vo': voId\n    }, showNotificationOnError);\n  }\n\n  updateResourceTag(resourceTag: ResourceTag, showNotificationOnError = true): Observable<ResourceTag> {\n    return this.apiService.post('json/resourcesManager/updateResourceTag', {\n      'resourceTag': resourceTag\n    }, showNotificationOnError);\n  }\n\n  createResourceTag(tagName: string, vo: number, showNotificationOnError = true): Observable<ResourceTag> {\n    return this.apiService.post('json/resourcesManager/createResourceTag', {\n      'tagName': tagName,\n      'vo': vo\n    }, showNotificationOnError);\n  }\n\n  deleteResourceTag(resourceTag: ResourceTag, showNotificationOnError = true) {\n    return this.apiService.post('json/resourcesManager/deleteResourceTag', {\n      'resourceTag': resourceTag\n    }, showNotificationOnError);\n  }\n\n  getAssignedGroups(resource: number, showNotificationOnError = true): Observable<Group[]> {\n    return this.apiService.post('json/resourcesManager/getAssignedGroups', {\n      'resource': resource\n    }, showNotificationOnError);\n  }\n\n  removeGroupsFromResource(groups: Group[], resource: number, showNotificationOnError = true) {\n    return this.apiService.post('json/resourcesManager/removeGroupsFromResource', {\n      'groups': groups,\n      'resource': resource\n    }, showNotificationOnError);\n  }\n\n  assignGroupsToResource(groups: number[], resource: number, showNotificationOnError = true) {\n    return this.apiService.post('json/resourcesManager/assignGroupsToResource', {\n      'groups': groups,\n      'resource': resource\n    }, showNotificationOnError);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from '@perun-web-apps/perun/services';\nimport { RTMessage } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RtMessagesService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) { }\n\n  sendMessageToRT(queue: string, subject: string, text: string, showNotification = true): Observable<RTMessage> {\n    return this.apiService.post('json/rtMessagesManager/sentMessageToRT', {\n      queue: queue,\n      subject: subject,\n      text: text\n    }, showNotification);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RichDestination } from '@perun-web-apps/perun/models';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) { }\n\n  getAllRichDestinations(facilityId: number, showNotificationOnError = true): Observable<RichDestination[]> {\n    return this.apiService.post('json/servicesManager/getAllRichDestinations', {\n      'facility': facilityId\n    }, showNotificationOnError);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport { RichUser, RichUserExtSource, User, UserExtSource, Vo, Group } from '@perun-web-apps/perun/models';\nimport { parseUrnsToUrlParam } from '@perun-web-apps/perun/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) { }\n\n  getUserExtSources(userId: number, showNotificationOnError = true): Observable<UserExtSource[]> {\n    return this.apiService.post('json/usersManager/getUserExtSources', {\n      user: userId\n    }, showNotificationOnError);\n  }\n\n  getRichUserExtSources(userId: number, attrsNames: string[], showNotificationOnError = true):\n    Observable<RichUserExtSource[]>\n  {\n    return this.apiService.post('json/usersManager/getRichUserExtSources', {\n      user: userId,\n      attrsNames: attrsNames\n    }, showNotificationOnError);\n  }\n\n  getRichUserExtSourcesWithAllAttributes(userId: number, showNotificationOnError = true):\n    Observable<RichUserExtSource[]>\n  {\n    return this.apiService.post('json/usersManager/getRichUserExtSources', {\n      user: userId\n    }, showNotificationOnError);\n  }\n  findRichUsersWithAttributes(searchString: string, attributes: string[], showNotificationOnError = true): Observable<RichUser[]> {\n    const attrParam = parseUrnsToUrlParam('attrsNames', attributes);\n    return this.apiService.get(`json/usersManager/findRichUsersWithAttributes?searchString=${searchString}${attrParam}`,\n      new HttpParams(), showNotificationOnError);\n  }\n\n  getUserById(userId: number, showNotificationOnError = true): Observable<User> {\n    return this.apiService.get(`json/usersManager/getUserById?id=${userId}`, new HttpParams(), showNotificationOnError);\n  }\n\n  findUsers(searchstring: string, showNotificationOnError = true): Observable<User[]> {\n    return this.apiService.post('json/usersManager/findUsers', {\n      'searchString': searchstring\n    }, showNotificationOnError);\n  }\n\n  findRichUsers(searchString: string, showNotificationOnError = true): Observable<RichUser[]> {\n    return this.apiService.post('json/usersManager/findRichUsers', {\n      searchString: searchString\n    }, showNotificationOnError);\n  }\n\n  getRichUser(userId: number, showNotificationOnError = true): Observable<RichUser> {\n    return this.apiService.get(`json/usersManager/getRichUser?id=${userId}`, new HttpParams(), showNotificationOnError);\n  }\n\n  getVosWhereUserIsMember(userId: number, showNotificationOnError = true):Observable<Vo[]>{\n    return this.apiService.post('json/usersManager/getVosWhereUserIsMember',{\n      user: userId\n    }, showNotificationOnError);\n  }\n\n  getVosWhereUserIsAdmin(userId: number, showNotificationOnError = true):Observable<Vo[]>{\n    return this.apiService.post('json/usersManager/getVosWhereUserIsAdmin',{\n      user: userId\n    }, showNotificationOnError);\n  }\n\n  getGroupsWhereUserIsAdmin(userId: number, showNotificationOnError = true): Observable<Group[]> {\n    return this.apiService.post('json/usersManager/getGroupsWhereUserIsAdmin', {\n      'user': userId\n    }, showNotificationOnError);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpParams} from '@angular/common/http';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport { MemberCandidate, Vo } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VoService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) { }\n\n  getAllVos(showNotificationOnError = true): Observable<Vo[]> {\n    return this.apiService.get('json/vosManager/getAllVos', new HttpParams(), showNotificationOnError);\n  }\n\n  getVos(showNotificationOnError = true): Observable<Vo[]> {\n    return this.apiService.get('json/vosManager/getVos', new HttpParams(), showNotificationOnError);\n  }\n\n  getVoById(id: number, showNotificationOnError = true): Observable<Vo> {\n    return this.apiService.get(`json/vosManager/getVoById?id=${id}`, new HttpParams(), showNotificationOnError);\n  }\n\n  getCompleteCandidates(id: number, entity : 'group' | 'vo', attrNames: string[], searchString: string,\n                        showNotificationOnError = true): Observable<MemberCandidate[]> {\n    const payload = {\n      attrNames: attrNames,\n      searchString: searchString\n    };\n    payload[entity] = id;\n\n    return this.apiService.post('json/vosManager/getCompleteCandidates', payload, showNotificationOnError);\n  }\n\n  removeVo(voId:number, force:boolean, showNotificationOnError = true): Observable<Vo> {\n    return this.apiService.post('json/vosManager/deleteVo', {\n      vo: voId,\n      force: force\n    }, showNotificationOnError);\n  }\n\n  createVo(fullName: string, shortName:string, showNotificationOnError = true): Observable<Vo> {\n    return this.apiService.post('json/vosManager/createVo', {\n      name: fullName,\n      shortName: shortName\n    }, showNotificationOnError);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const PERUN_API_SERVICE = new InjectionToken('perun-api-service');\n","export * from './lib/perun-urns';\n","export class Urns {\n\n  // Member\n  public static MEMBER_DEF_EXPIRATION = 'urn:perun:member:attribute-def:def:membershipExpiration';\n  public static MEMBER_DEF_ORGANIZATION = 'urn:perun:member:attribute-def:def:organization';\n  public static MEMBER_DEF_MAIL = 'urn:perun:member:attribute-def:def:mail';\n\n  // Vo\n  public static VO_DEF_EXPIRATION_RULES = 'urn:perun:vo:attribute-def:def:membershipExpirationRules';\n  public static VO_DEF_MAIL_FOOTER = 'urn:perun:vo:attribute-def:def:mailFooter';\n\n  // User\n  public static USER_DEF_ORGANIZATION = 'urn:perun:user:attribute-def:def:organization';\n  public static USER_DEF_PREFERRED_MAIL = 'urn:perun:user:attribute-def:def:preferredMail';\n\n  // Group\n  public static GROUP_DEF_EXPIRATION_RULES = 'urn:perun:group:attribute-def:def:groupMembershipExpirationRules';\n  public static GROUP_DEF_MAIL_FOOTER = 'urn:perun:group:attribute-def:def:mailFooter';\n\n  // UserExtSource\n  public static UES_DEF_MAIL = 'urn:perun:ues:attribute-def:def:mail';\n  public static UES_DEF_ORGANIZATION = 'urn:perun:ues:attribute-def:def:o';\n}\n","export * from './lib/perun-utils';\n","/**\n * Return string representing Material icon for status of given member.\n *\n * @param richMember member\n */\nimport {\n  Attribute,\n  AttributeDefinition,\n  Group,\n  Owner,\n  RichMember,\n  RichUser,\n  User\n} from '@perun-web-apps/perun/models';\n\n\nexport function parseStatusIcon(richMember: RichMember): string {\n  switch (richMember.status) {\n    case 'VALID':\n      return 'verified_user';\n    case 'INVALID':\n      return 'report';\n    case 'SUSPENDED':\n      return 'lock';\n    case 'EXPIRED':\n      return 'schedule';\n    case 'DISABLED':\n      return 'delete';\n  }\n}\n\n/**\n * Return color which should be used for icon of given member's status.\n *\n * @param richMember member\n */\nexport function parseStatusColor(richMember: RichMember): string {\n  switch (richMember.status) {\n    case 'VALID':\n      return 'accent';\n    case 'INVALID':\n      return 'warn';\n    default:\n      return '';\n  }\n}\n\n/**\n * Gets email of given member. The vo-email has top priority, the preferred email\n * has lower priority. If there are no emails, an empty string is returned.\n *\n * @param richMember RichMember\n */\nexport function parseEmail(richMember: RichMember): string {\n  let email = '';\n  if (richMember) {\n    richMember.memberAttributes.forEach(attr => {\n      if (attr.friendlyName === 'mail' && attr.value !== null) {\n        email = attr.value;\n      }\n    });\n\n    if (email.length === 0) {\n      richMember.userAttributes.forEach(attr => {\n        if (attr.friendlyName === 'preferredMail') {\n          email = attr.value;\n        }\n      });\n    }\n  }\n  return email;\n}\n\n/**\n * Gets email of given user. If there are no emails, an empty string is returned.\n *\n * @param richUser RichUser\n */\nexport function parseUserEmail(richUser: RichUser): string {\n  let email = '';\n  if (richUser) {\n    richUser.userAttributes.forEach(attr => {\n      if (attr.friendlyName === 'preferredMail') {\n        email = attr.value;\n      }\n    });\n  }\n  return email;\n}\n\n/**\n * Get logins of given member.\n *\n * @param richMember member\n */\nexport function parseLogins(richMember: RichMember|RichUser): string {\n  let logins = '';\n\n  richMember.userAttributes.forEach(attr => {\n    if (attr.baseFriendlyName === 'login-namespace') {\n      logins += attr.friendlyNameParameter + ': ' + attr.value + ' ';\n    }\n  });\n\n  if (logins.endsWith(' ')) {\n    logins = logins.substring(0, logins.length - 1);\n  }\n  return logins;\n}\n\nexport function parseUrnsToUrlParam(paramName: string, urns: string[]): string {\n  let attributesParam = '';\n  urns.forEach(a => attributesParam = attributesParam.concat(`&${paramName}%5B%5D=`).concat(a));\n  return attributesParam;\n}\n\n/**\n * Creates full name for given user form his titles and names.\n *\n * @param user user\n */\nexport function parseFullName(user: User): string {\n  let fullName = '';\n\n  if (user.titleBefore !== null) {\n    fullName += user.titleBefore + ' ';\n  }\n  if (user.firstName !== null) {\n    fullName += user.firstName + ' ';\n  }\n  if (user.middleName !== null) {\n    fullName += user.middleName + ' ';\n  }\n  if (user.lastName !== null) {\n    fullName += user.lastName + ' ';\n  }\n  if (user.titleAfter !== null) {\n    fullName += user.titleAfter + ' ';\n  }\n  if (fullName.endsWith(' ')) {\n    fullName = fullName.substring(0, fullName.length - 1);\n  }\n\n  return fullName;\n}\n\n/**\n * Returns attribute with specific urn from given rich user.\n * If the given user doesn't have attribute with given urn, null is returned.\n *\n * @param user user with attributes\n * @param urn urn for required attribute\n */\nexport function getRichUserAttribute(user: RichUser, urn: string): Attribute {\n  for (const attribute of user.userAttributes) {\n    const attributeUrn = attribute.namespace + ':' + attribute.friendlyName;\n    if (attributeUrn === urn) {\n      return attribute;\n    }\n  }\n\n  return null;\n}\n\nexport function parseTechnicalOwnersNames(owners: Owner[]): string {\n  let names = '';\n  for (const owner of owners) {\n    if (owner.type === 'technical') {\n      names += owner.name + ', ';\n    }\n  }\n  if (names.endsWith(', ')) {\n    names = names.substring(0, names.length - 2);\n  }\n  return names;\n}\n\nexport async function doAfterDelay(delayMs: number, callback: () => void) {\n  await delay(delayMs);\n  callback();\n}\n\nexport function delay(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Returns array with recently used entities at the top of array.\n *\n * @param key of localStorage\n * @param array of all entities\n */\nexport function getRecentlyVisited(key: string, array: any[]): any[] {\n  const recentIds: number[] = JSON.parse(localStorage.getItem(key));\n  if (recentIds) {\n    const recentlyVisited: any[] = [];\n    for (let i = 0; i < recentIds.length; i ++) {\n      array.forEach((item, index) => {\n        if (item.id === recentIds[i]) {\n          recentlyVisited.push(item);\n          array.splice(index, 1);\n        }\n      });\n    }\n    for (let i = recentlyVisited.length - 1; i >= 0; i--) {\n      array.unshift(recentlyVisited[i]);\n    }\n  }\n  return array;\n}\n\n/**\n * Returns saved ids for given key.\n *\n * @param key of local storage\n */\nexport function getRecentlyVisitedIds(key: string): number[] {\n  const recentIds: number[] = JSON.parse(localStorage.getItem(key));\n  if (recentIds) {\n    return recentIds;\n  }\n  return [];\n}\n\n\n/**\n * Add entity that was just visited to localStorage.\n *\n * @param key of localStorage\n * @param item entity that was visited\n */\nexport function addRecentlyVisited(key: string, item: any) {\n  if (localStorage.getItem(key) === null) {\n    // if user not have any in local storage\n    const recent: number[] = [];\n    recent.unshift(item.id);\n    localStorage.setItem('vos', JSON.stringify(recent));\n  } else {\n    const recent: number[] = JSON.parse(localStorage.getItem(key));\n    const index = indexOfVo(recent, item.id);\n    if (index > 0) {\n      // if vo is in recent but not of first place, then we remove it to placed it first\n      recent.splice(index, 1);\n    }\n    if (index !== 0) {\n      // place the element as first\n      recent.unshift(item.id);\n    }\n    if (recent.length > 5) {\n      // pop last element if length exceed 5 vo\n      recent.pop();\n    }\n    localStorage.setItem(key, JSON.stringify(recent));\n  }\n}\n\nexport function indexOfVo(recent: number[], id: number) {\n  for (let i = 0; i < recent.length; i++) {\n    if (recent[i] === id) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Gets Vo of given user.\n *\n * @param richUser RichUser\n */\nexport function parseVo(richUser: RichUser): string {\n  let result = '';\n  if (richUser) {\n    richUser.userAttributes.forEach(attr => {\n      if (attr.friendlyName === 'organization') {\n        result = attr.value;\n      }\n    });\n  }\n  return result;\n}\n/**\n * From given attributes array removes all core attributes.\n *\n * @param attributes non core attributes\n */\nexport function filterCoreAttributes(attributes: Attribute[]): Attribute[] {\n  return attributes.filter(attribute => !attribute.namespace.includes('def:core'));\n}\n\n/**\n * Filter groups by given filter string.\n *\n * @param filterValue filter string\n * @param groups field of groups that its filtering\n * return field - on first position is groups filtered by name, on second groups are filtered by shortName and added their parents\n */\nexport function applyFilter(filterValue: string, groups: Group[]) {\n  const filteredTreeGroups = [];\n  const filteredGroups = groups.filter( option => option.name.toLowerCase().includes(filterValue.toLowerCase()));\n  const treegroup = groups.filter( option => option.shortName.toLowerCase().includes(filterValue.toLowerCase()));\n  for (const group of treegroup) {\n    filteredTreeGroups.push(group);\n    if (group.parentGroupId) {\n      filteredTreeGroups.concat(findParent(group.parentGroupId, groups));\n    }\n  }\n  return [filteredGroups, filteredTreeGroups];\n}\n\n/**\n * Find parents of given group in field of groups\n * @param group that you parent you want to found\n * @param groups field of groups where you want to find parent\n * return field of parents\n */\nexport function findParent(group: number, groups: Group[]): Group[] {\n  const parent = groups.find( x => x.id === group);\n  if (parent) {\n    if (parent.parentGroupId) {\n      return findParent(parent.parentGroupId, groups).concat(parent);\n    } else {\n      return [parent];\n    }\n  } else {\n    return [];\n  }\n}\n\nexport function filterCoreAttributesDefinitions(attributesDef: AttributeDefinition[]): AttributeDefinition[] {\n  return attributesDef.filter(attribute => !attribute.namespace.includes('def:core'));\n}\n\n/**\n * Finds attribute with given attrName from given attributes.\n *\n * @param attributes attributes\n * @param attrName attr name\n * @return attribute with given name or null if not found\n */\nexport function getAttribute(attributes: Attribute[], attrName: string) : Attribute {\n  for (const attribute of attributes) {\n    if ((attribute.namespace + \":\" + attribute.friendlyName) === attrName) {\n      return attribute;\n    }\n  }\n  return null;\n}\n","export * from './lib/ui-alerts.module';\n","export default \".perun-alert {\\n  position: relative;\\n  padding: 0.75rem 1.25rem;\\n  margin-top: 1rem;\\n  margin-bottom: 1rem;\\n  border-left: 4px solid;\\n}\\n\\n.perun-alert.info-alert {\\n  color: #000000;\\n  background-color: rgba(25,118,210,.05);\\n  border-color: #1976d2;\\n}\\n\\n.perun-alert.warn-alert {\\n  color: #000000;\\n  background-color: #fff2cd;\\n  border-color: #ffd657;\\n}\\n\\n.perun-alert.error-alert {\\n  color: #000000;\\n  background-color: #fae2e2;\\n  border-color: #d32f2f;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnMvdWkvYWxlcnRzL3NyYy9saWIvYWxlcnQvYWxlcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQix3QkFBd0I7RUFDeEIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2Qsc0NBQXNDO0VBQ3RDLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGNBQWM7RUFDZCx5QkFBeUI7RUFDekIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsY0FBYztFQUNkLHlCQUF5QjtFQUN6QixxQkFBcUI7QUFDdkIiLCJmaWxlIjoibGlicy91aS9hbGVydHMvc3JjL2xpYi9hbGVydC9hbGVydC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBlcnVuLWFsZXJ0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiAwLjc1cmVtIDEuMjVyZW07XG4gIG1hcmdpbi10b3A6IDFyZW07XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG4gIGJvcmRlci1sZWZ0OiA0cHggc29saWQ7XG59XG5cbi5wZXJ1bi1hbGVydC5pbmZvLWFsZXJ0IHtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjUsMTE4LDIxMCwuMDUpO1xuICBib3JkZXItY29sb3I6ICMxOTc2ZDI7XG59XG5cbi5wZXJ1bi1hbGVydC53YXJuLWFsZXJ0IHtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmYyY2Q7XG4gIGJvcmRlci1jb2xvcjogI2ZmZDY1Nztcbn1cblxuLnBlcnVuLWFsZXJ0LmVycm9yLWFsZXJ0IHtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWUyZTI7XG4gIGJvcmRlci1jb2xvcjogI2QzMmYyZjtcbn1cbiJdfQ== */\"","import { Component, Input, OnInit } from '@angular/core';\n\nexport type Color = 'error' | 'warn' | \"info\";\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit {\n\n  constructor() { }\n\n  @Input()\n  color: Color;\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AlertComponent } from './alert/alert.component';\n\n@NgModule({\n  exports: [\n    AlertComponent\n  ],\n  declarations: [\n    AlertComponent\n  ]\n})\nexport class UiAlertsModule {\n}\n","export default \"<div\\n  class=\\\"perun-alert\\\"\\n  [class.warn-alert]=\\\"color === 'warn'\\\"\\n  [class.error-alert]=\\\"color === 'error'\\\"\\n  [class.info-alert]=\\\"color === 'info'\\\">\\n  <ng-content></ng-content>\\n</div>\\n\"","export default \"<div (keyup)=\\\"onKeyInput($event)\\\">\\n  <h1 class=\\\"page-subtitle\\\">{{'ADMIN.USERS.TITLE' | translate}}</h1>\\n  <mat-form-field class=\\\"mr-2 search-field no-border-mat-input\\\">\\n    <label>\\n      <input matInput autocomplete=\\\"false\\\" placeholder=\\\"{{'ADMIN.USERS.SEARCH_PLACEHOLDER' | translate}}\\\" [(ngModel)]=\\\"searchString\\\">\\n    </label>\\n  </mat-form-field>\\n  <button mat-flat-button color=\\\"primary\\\" class=\\\"mr-2\\\" [disabled]=\\\"searchString.length === 0\\\" (click)=\\\"onSearchByString()\\\">\\n    <mat-icon>search</mat-icon>\\n  </button>\\n  <mat-spinner *ngIf=\\\"loading\\\" class=\\\"ml-auto mr-auto\\\">\\n  </mat-spinner>\\n  <div *ngIf=\\\"!loading\\\">\\n    <app-users-list\\n      *ngIf=\\\"users !== undefined && users.length > 0\\\"\\n      [users]=\\\"users\\\">\\n    </app-users-list>\\n    <app-alert *ngIf=\\\"!firstSearchDone\\\" [color]=\\\"'info'\\\">\\n      {{'ADMIN.USERS.SEARCH_INFO' | translate}}\\n    </app-alert>\\n    <app-alert *ngIf=\\\"firstSearchDone && users.length === 0\\\" [color]=\\\"'warn'\\\">\\n      {{'ADMIN.USERS.NO_USERS_FOUND' | translate}}\\n    </app-alert>\\n  </div>\\n</div>\\n\"","export default \"<div *ngIf=\\\"isProduction\\\" class=\\\"beta-warning\\\">\\n  <mat-icon>alert</mat-icon> This is a beta of new Perun admin GUI! It is not complete, it might contain bugs! Use it only for testing!\\n</div>\\n<app-perun-nav-menu\\n  id=\\\"nav-menu\\\"\\n  [ngStyle]=\\\"{'top': getNavMenuTop()}\\\"\\n  class=\\\"mat-elevation-z3\\\"\\n  [sideNav]=\\\"sidenav\\\"\\n  [principal]=\\\"principal\\\">\\n</app-perun-nav-menu>\\n<app-notificator></app-notificator>\\n<mat-sidenav-container\\n  id=\\\"content\\\"\\n  [ngStyle]=\\\"{'margin-top': getSideNavMarginTop(),'min-height': getSideNavMinHeight()}\\\"\\n>\\n  <mat-sidenav #sidenav\\n               [mode]=\\\"sidebarMode\\\"\\n               [opened]=\\\"true\\\"\\n               [fixedInViewport]=\\\"true\\\"\\n               [fixedTopGap]=\\\"getTopGap()\\\">\\n\\n    <app-side-menu [sideNav]=\\\"sidenav\\\"></app-side-menu>\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content id=\\\"content-inner\\\"\\n    [ngStyle]=\\\"{\\n       'min-height' : getContentInnerMinHeight()\\n    }\\\">\\n    <div id=\\\"content-wrap\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n    <div id=\\\"footer\\\">\\n      <app-perun-footer></app-perun-footer>\\n    </div>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","export default \"\"","export default \"<div>\\n  <h1 class=\\\"page-subtitle\\\">{{'MENU_ITEMS.FACILITY.ALLOWED_GROUPS' | translate}}</h1>\\n  <app-refresh-button (refresh)=\\\"refreshTable()\\\"></app-refresh-button>\\n  <mat-form-field>\\n    <mat-label>{{'FACILITY_DETAIL.ALLOWED_GROUPS.SHOW_VOS_GROUPS' | translate}}</mat-label>\\n    <mat-select  [(value)]=\\\"selected\\\" (selectionChange)=\\\"showGroup()\\\">\\n      <mat-option value=\\\"all\\\">{{'FACILITY_DETAIL.ALLOWED_GROUPS.ALL' | translate}}</mat-option>\\n      <mat-option *ngFor=\\\"let vo of vos\\\" [value]=\\\"vo.id\\\">\\n        {{vo.name}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-spinner class=\\\"ml-auto mr-auto\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n  <app-groups-list\\n    *ngIf=\\\"!loading && groupsToShow.length !== 0\\\"\\n    [hideColumns]=\\\"['menu', 'vo']\\\"\\n    [groups] = \\\"groupsToShow\\\"\\n    [disableMembers]=\\\"false\\\">\\n  </app-groups-list>\\n\\n  <app-alert *ngIf=\\\"groupsToShow.length === 0 && !loading\\\" color=\\\"warn\\\">\\n    {{'FACILITY_DETAIL.ALLOWED_GROUPS.NO_GROUPS_ALERT' | translate}}\\n  </app-alert>\\n\\n</div>\\n\\n\"","export default \"<div>\\n  <h1 class=\\\"page-subtitle\\\">{{'FACILITY_DETAIL.RESOURCES.TITLE' | translate}}</h1>\\n  <app-refresh-button (refresh)=\\\"refreshTable()\\\"></app-refresh-button>\\n  <button mat-flat-button color=\\\"warn\\\" [disabled]=\\\"selected.selected.length === 0\\\"  (click)=\\\"removeResource()\\\">\\n    {{'FACILITY_DETAIL.RESOURCES.DELETE' | translate}}\\n  </button>\\n  <app-immediate-filter\\n    [placeholder]=\\\"'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_SEARCH'\\\"\\n    (filter)=\\\"applyFilter($event)\\\"></app-immediate-filter>\\n  <mat-spinner class=\\\"ml-auto mr-auto\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n  <app-resources-list\\n    *ngIf=\\\"!loading\\\"\\n    [filterValue]=\\\"filterValue\\\"\\n    [resources]=\\\"resources\\\"\\n    [selection]=\\\"selected\\\">\\n  </app-resources-list>\\n</div>\\n\"","export default \"<div class=\\\"buttons-container pl-2 pr-2 pl-xl-5 pr-xl-5\\\">\\n  <a class=\\\"main-menu-button user-btn\\\" [routerLink]=\\\"['profile']\\\">\\n    <img src=\\\"assets/img/PerunWebImages/user-white.svg\\\">\\n    <h1>{{'MAIN_MENU.PROFILE' | translate}}</h1>\\n    <p>{{'MAIN_MENU.PROFILE_DESC' | translate}}</p>\\n  </a>\\n  <a *ngIf=\\\"authResolver.isVoAdmin() || authResolver.isVoObserver()\\\" class=\\\"main-menu-button vo-btn\\\" [routerLink]=\\\"['organizations']\\\">\\n    <img src=\\\"assets/img/PerunWebImages/vo-white.svg\\\">\\n    <h1>{{'MAIN_MENU.ACCESS' | translate}}</h1>\\n    <p>{{'MAIN_MENU.ACCESS_DESC' | translate}}</p>\\n  </a>\\n  <a class=\\\"main-menu-button facility-btn\\\" [routerLink]=\\\"['facilities']\\\" *ngIf=\\\"authResolver.canManageFacilities()\\\">\\n    <img src=\\\"assets/img/PerunWebImages/manage_facility_white.svg\\\">\\n    <h1>{{'MAIN_MENU.FACILITIES' | translate}}</h1>\\n    <p>{{'MAIN_MENU.FACILITIES_DESC' | translate}}</p>\\n  </a>\\n  <a *ngIf=\\\"authResolver.isPerunAdmin()\\\" class=\\\"main-menu-button admin-btn\\\" [routerLink]=\\\"['admin']\\\">\\n    <img src=\\\"assets/img/PerunWebImages/perun_admin-white.svg\\\">\\n    <h1>{{'MAIN_MENU.ADMIN' | translate}}</h1>\\n    <p>{{'MAIN_MENU.ADMIN_DESC' | translate}}</p>\\n  </a>\\n</div>\\n\"","export default \"<!--<div [@routeAnimations]=\\\"prepareRoute(outlet)\\\">-->\\n<div>\\n  <router-outlet #outlet=\\\"outlet\\\"></router-outlet>\\n</div>\\n\"","export default \"<div>\\n  <mat-checkbox [(ngModel)]=\\\"attribute.value\\\" (change)=\\\"_sendEventToParent()\\\"></mat-checkbox>\\n</div>\\n\"","export default \"<div>\\n  <mat-chip-list #chipList>\\n    <mat-chip class=\\\"chip-word-break\\\" *ngFor=\\\"let chip of attribute.value\\\" [selectable]=\\\"selectable\\\"\\n              [removable]=\\\"removable\\\" (removed)=\\\"remove(chip); _sendEventToParent()\\\">\\n      {{chip}}\\n      <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n    </mat-chip>\\n    <label>\\n      <input placeholder=\\\"New value\\\"\\n             [matChipInputFor]=\\\"chipList\\\"\\n             [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n             [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n             (matChipInputTokenEnd)=\\\"add($event)\\\"\\n             (change)=\\\"_sendEventToParent()\\\">\\n    </label>\\n  </mat-chip-list>\\n</div>\\n\"","export default \"<div class=\\\"form-group row\\\">\\n  <div class=\\\"col-sm-12 d-flex\\\">\\n    <form class=\\\"d-flex w-100\\\">\\n      <div class=\\\"w-100\\\">\\n        <div class=\\\"mr-5\\\">\\n          <div *ngFor=\\\"let value of values; let i = index; trackBy: customTrackBy\\\" class=\\\"d-flex mb-1\\\">\\n            <mat-form-field class=\\\"w-100 ml-3 mr-2\\\">\\n              <label for=\\\"{{attribute.id}}-key-{{i}}\\\"></label>\\n              <input\\n                matInput\\n                required\\n                type=\\\"text\\\"\\n                id=\\\"{{attribute.id}}-key-{{i}}\\\"\\n                [(ngModel)]=\\\"keys[i]\\\"\\n                name=\\\"key-{{i}}\\\">\\n            </mat-form-field>\\n            <mat-form-field class=\\\"w-100 mr-2 ml-2\\\">\\n              <label for=\\\"{{attribute.id}}-value-{{i}}\\\"></label>\\n              <input\\n                matInput\\n                type=\\\"text\\\"\\n                name=\\\"value-{{i}}\\\"\\n                id=\\\"{{attribute.id}}-value-{{i}}\\\"\\n                [(ngModel)]=\\\"values[i]\\\">\\n            </mat-form-field>\\n            <button\\n              mat-icon-button\\n              color=\\\"warn\\\"\\n              (click)=\\\"removeValue(i)\\\">\\n              <mat-icon>\\n                indeterminate_check_box\\n              </mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n        <button\\n          mat-icon-button\\n          color=\\\"accent\\\"\\n          (click)=\\\"addValue()\\\">\\n          <mat-icon>\\n            add_box\\n          </mat-icon>\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<div>\\n  <label for=\\\"input\\\"></label>\\n  <input\\n    matInput\\n    [(ngModel)]=\\\"attribute.value\\\"\\n    name=\\\"inputField\\\"\\n    type=\\\"text\\\"\\n    id=\\\"input\\\"\\n    placeholder=\\\"New value\\\"\\n    (keydown)=\\\"_sendEventToParent()\\\"/>\\n</div>\\n\"","export default \"<div>\\n  <app-attribute-value-boolean\\n    [attribute]=\\\"attribute\\\"\\n    (sendEventToParent)=\\\"_sendEventToParent2()\\\"\\n    *ngIf=\\\"attribute.type === 'java.lang.Boolean'\\\">\\n  </app-attribute-value-boolean>\\n  <app-attribute-value-list\\n    [attribute]=\\\"attribute\\\"\\n    (sendEventToParent)=\\\"_sendEventToParent2()\\\"\\n    *ngIf=\\\"attribute.type === 'java.util.ArrayList'\\\">\\n  </app-attribute-value-list>\\n  <div (click)=\\\"_sendEventToParent2()\\\">\\n    <app-attribute-value-map\\n      #map\\n      [attribute]=\\\"attribute\\\"\\n      *ngIf=\\\"attribute.type === 'java.util.LinkedHashMap'\\\">\\n    </app-attribute-value-map>\\n  </div>\\n  <app-attribute-value-string\\n    [attribute]=\\\"attribute\\\"\\n    (sendEventToParent)=\\\"_sendEventToParent2()\\\"\\n    *ngIf=\\\"attribute.type === 'java.lang.String' || attribute.type === 'java.lang.LargeString' || attribute.type === 'java.lang.Integer'\\\">\\n  </app-attribute-value-string>\\n</div>\\n\"","export default \"<div class=\\\"card mt-3\\\" [class.hide-table]=\\\"exporting\\\" [hidden]=\\\"dataSource.filteredData.length === 0\\\">\\n  <div class=\\\"card-body\\\">\\n    <app-table-options [exporter]=\\\"exporter\\\" (start)=\\\"exporting = true\\\" (end)=\\\"exporting = false\\\"></app-table-options>\\n\\n    <table\\n      [hiddenColumns]=\\\"[0]\\\"\\n      mat-table\\n      matTableExporter\\n      [dataSource]=\\\"dataSource\\\"\\n      #exporter=\\\"matTableExporter\\\"\\n      matSort\\n      matSortActive=\\\"id\\\"\\n      matSortDirection=\\\"asc\\\"\\n      matSortDisableClear\\n      class=\\\"w-100\\\">\\n\\n      <ng-container matColumnDef=\\\"select\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox color=\\\"primary\\\"\\n                        (change)=\\\"$event ? masterToggle() : null\\\"\\n                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                        [aria-label]=\\\"checkboxLabel()\\\">\\n          </mat-checkbox>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let attribute\\\" class=\\\"static-column-size\\\">\\n          <mat-checkbox color=\\\"primary\\\"\\n                        (click)=\\\"$event.stopPropagation()\\\"\\n                        (change)=\\\"$event ? selection.toggle(attribute) : null\\\"\\n                        [checked]=\\\"selection.isSelected(attribute)\\\"\\n                        [aria-label]=\\\"checkboxLabel(attribute)\\\">\\n          </mat-checkbox>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef\\n            mat-sort-header>{{'SHARED.COMPONENTS.ATTRIBUTES_LIST.ID' | translate}}</th>\\n        <td mat-cell class=\\\"static-column-size\\\" *matCellDef=\\\"let attribute\\\">{{attribute.id}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef>{{'SHARED.COMPONENTS.ATTRIBUTES_LIST.NAME' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let attribute\\\">{{attribute.displayName}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"value\\\">\\n        <th mat-header-cell *matHeaderCellDef\\n            mat-sort-header>{{'SHARED.COMPONENTS.ATTRIBUTES_LIST.VALUE' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let attribute\\\">\\n          <app-attribute-value\\n            [attribute]=\\\"attribute\\\"\\n            (sendEventToParent2)=\\\"onValueChange(attribute)\\\"\\n          >\\n          </app-attribute-value>\\n        </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"description\\\">\\n        <th mat-header-cell *matHeaderCellDef\\n            mat-sort-header>{{'SHARED.COMPONENTS.ATTRIBUTES_LIST.DESCRIPTION' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let attribute\\\">{{attribute.description}}</td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr\\n        mat-row\\n        *matRowDef=\\\"let attribute; columns: displayedColumns;\\\"\\n        class=\\\"dark-hover-list-item\\\">\\n      </tr>\\n    </table>\\n    <mat-paginator [length]=\\\"this.attributes.length\\\" [pageSize]=\\\"5\\\" [pageSizeOptions]=\\\"[5,10,25]\\\"></mat-paginator>\\n  </div>\\n</div>\\n\\n<mat-spinner *ngIf=\\\"exporting\\\" class=\\\"ml-auto mr-auto\\\"></mat-spinner>\\n\\n<app-alert *ngIf=\\\"dataSource.filteredData.length === 0\\\" color=\\\"warn\\\">\\n  {{'SHARED.COMPONENTS.NO_FILTER_RESULTS_ALERT' | translate}}\\n</app-alert>\\n\\n\"","export default \"<button mat-stroked-button class=\\\"pl-1 mb-3 mt-3\\\" (click)=\\\"goBack()\\\">\\n  <mat-icon>keyboard_arrow_left</mat-icon>\\n  {{'Back' | translate}}\\n</button>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.BUG_REPORT.TITLE' | translate}}</h1>\\n<div mat-dialog-content class=\\\"dialog-container\\\">\\n  <mat-form-field>\\n    <mat-label>{{'DIALOGS.BUG_REPORT.SUBJECT' | translate}}</mat-label>\\n    <input matInput required [(ngModel)]=\\\"subject\\\" #subjectModel=ngModel>\\n    <mat-error *ngIf=\\\"subjectModel.invalid\\\">{{'DIALOGS.BUG_REPORT.SUBJECT_ERROR' | translate}}</mat-error>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-label>{{'DIALOGS.BUG_REPORT.MESSAGE' | translate}}</mat-label>\\n    <textarea\\n      #messageModel=ngModel\\n      appAutoFocus\\n      matInput\\n      required\\n      minlength=\\\"60\\\"\\n      placeholder=\\\"{{'DIALOGS.BUG_REPORT.MESSAGE_PLACEHOLDER' | translate}}\\\"\\n      [(ngModel)]=\\\"message\\\">\\n    </textarea>\\n    <mat-error *ngIf=\\\"messageModel.invalid\\\">{{'DIALOGS.BUG_REPORT.MESSAGE_ERROR' | translate}}</mat-error>\\n  </mat-form-field>\\n</div>\\n\\n<div mat-dialog-actions>\\n  <div class=\\\"ml-auto\\\">\\n    <button mat-button (click)=\\\"dialogRef.close()\\\">\\n      {{'DIALOGS.BUG_REPORT.CANCEL' | translate}}\\n    </button>\\n    <button\\n      (click)=\\\"sendBugReport()\\\"\\n      [disabled]=\\\"messageModel.invalid || subjectModel.invalid\\\"\\n      class=\\\"ml-2\\\"\\n      mat-flat-button\\n      color=\\\"accent\\\">\\n      {{'DIALOGS.BUG_REPORT.SEND' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<mat-form-field class=\\\"filter-field ml-2\\\">\\n  <input matInput\\n         #groupFilterInput\\n         placeholder=\\\"{{placeholder | translate}}\\\">\\n</mat-form-field>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.APPLICATION_FORM_ADD_ITEM.TITLE' | translate}}</h1>\\n<div mat-dialog-content class=\\\"dialog-container\\\">\\n  {{'DIALOGS.APPLICATION_FORM_ADD_ITEM.SHORT_NAME' | translate}}:\\n  <mat-form-field>\\n    <input\\n      matInput\\n      [(ngModel)]=\\\"shortName\\\">\\n  </mat-form-field>\\n  {{'DIALOGS.APPLICATION_FORM_ADD_ITEM.INPUT_WIDGET' | translate}}:\\n  <mat-form-field class=\\\"mb-4\\\">\\n    <mat-select [(ngModel)]=\\\"selectedWidget\\\" disableOptionCentering>\\n      <mat-option *ngFor=\\\"let widget of widgets\\\" [value]=\\\"widget\\\">\\n        {{widget | applicationFormItemType}}\\n      </mat-option>\\n    </mat-select>\\n    <mat-hint>{{selectedWidget | applicationFormWidgetDescription}}\\n    </mat-hint>\\n  </mat-form-field>\\n  {{'DIALOGS.APPLICATION_FORM_ADD_ITEM.INSERT_AFTER' | translate}}:\\n  <mat-form-field>\\n    <mat-select [(ngModel)]=\\\"selectedItem\\\" disableOptionCentering>\\n      <mat-option *ngFor=\\\"let item of items\\\" [value]=\\\"item\\\">\\n        {{item}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n</div>\\n\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"cancel()\\\">\\n    {{'DIALOGS.APPLICATION_FORM_ADD_ITEM.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"accent\\\"\\n    (click)=\\\"submit()\\\">\\n    {{'DIALOGS.APPLICATION_FORM_ADD_ITEM.CREATE' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<div class=\\\"h-100 d-flex flex-column\\\">\\n  <div *ngIf=\\\"data.createMailNotification; else edit\\\">\\n    <h1 mat-dialog-title>{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.TITLE_CREATE' | translate}}</h1>\\n  </div>\\n  <ng-template #edit>\\n    <h1 mat-dialog-title>{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.TITLE_EDIT' | translate}}</h1>\\n  </ng-template>\\n\\n  <div mat-dialog-content class=\\\"dialog-container\\\">\\n    <div [@openClose]=\\\"invalidNotification ? 'open' : 'closed'\\\">\\n      <app-alert color=\\\"error\\\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.INVALID_NOTIFICATION' | translate}}</app-alert>\\n    </div>\\n    <mat-tab-group color=primary>\\n      <mat-tab label=\\\"{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.BASIC_SETTINGS' | translate}}\\\">\\n\\n        <div class=\\\"d-flex\\\">\\n          <span class=\\\"w-25 m-auto font-weight-bold\\\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.EMAIL_TYPE' | translate}}:</span>\\n          <div class=\\\"w-75\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-select\\n                [(ngModel)]=\\\"applicationMail.mailType\\\"\\n                [disabled]=\\\"!data.createMailNotification\\\"\\n                (selectionChange)=\\\"notificationExist()\\\"\\n                disableOptionCentering>\\n                <mat-option value=\\\"APP_CREATED_USER\\\">\\n                  {{'VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_APP_CREATED_USER' | translate}}\\n                </mat-option>\\n                <mat-option value=\\\"APP_CREATED_VO_ADMIN\\\">\\n                  {{'VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_APP_CREATED_VO_ADMIN' | translate}}\\n                </mat-option>\\n                <mat-option value=\\\"MAIL_VALIDATION\\\">\\n                  {{'VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_MAIL_VALIDATION' | translate}}\\n                </mat-option>\\n                <mat-option value=\\\"APP_APPROVED_USER\\\">\\n                  {{'VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_APP_APPROVED_USER' | translate}}\\n                </mat-option>\\n                <mat-option value=\\\"APP_REJECTED_USER\\\">\\n                  {{'VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_APP_REJECTED_USER' | translate}}\\n                </mat-option>\\n                <mat-option value=\\\"APP_ERROR_VO_ADMIN\\\">\\n                  {{'VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_APP_ERROR_VO_ADMIN' | translate}}\\n                </mat-option>\\n                <mat-option value=\\\"USER_INVITE\\\">\\n                  {{'VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_USER_INVITE' | translate}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex mb-3\\\">\\n          <span class=\\\"w-25\\\"></span>\\n          <div *ngIf=\\\"!data.createMailNotification\\\" class=\\\"w-75 font-italic text-muted\\\">\\n            {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.EMAIL_TYPE_DESCRIPTION_EDIT' | translate}}\\n          </div>\\n          <div *ngIf=\\\"data.createMailNotification\\\" class=\\\"w-75 font-italic text-muted\\\">\\n            {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.EMAIL_TYPE_DESCRIPTION_CREATE' | translate}}\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex\\\">\\n          <span class=\\\"w-25 font-weight-bold\\\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_TYPE' | translate}}:</span>\\n          <div class=\\\"w-75\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-select\\n                [(ngModel)]=\\\"applicationMail.appType\\\"\\n                [disabled]=\\\"!data.createMailNotification\\\"\\n                (selectionChange)=\\\"notificationExist()\\\"\\n                disableOptionCentering>\\n                <mat-option value=\\\"INITIAL\\\">\\n                  {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.INITIAL' | translate}}\\n                </mat-option>\\n                <mat-option *ngIf=\\\"applicationMail.mailType !== 'USER_INVITE'\\\" value=\\\"EXTENSION\\\">\\n                  {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.EXTENSION' | translate}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex mb-3\\\">\\n          <span class=\\\"w-25\\\"></span>\\n          <div *ngIf=\\\"!data.createMailNotification\\\" class=\\\"w-75 font-italic text-muted\\\">\\n            {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_TYPE_DESCRIPTION_EDIT' | translate}}\\n          </div>\\n          <div *ngIf=\\\"data.createMailNotification\\\" class=\\\"w-75 font-italic text-muted\\\">\\n            {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_TYPE_DESCRIPTION_CREATE' | translate}}\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex\\\">\\n          <span class=\\\"w-25 font-weight-bold\\\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.SENDING_ENABLED' | translate}}:</span>\\n          <div class=\\\"w-75\\\">\\n            <mat-checkbox [(ngModel)]=\\\"applicationMail.send\\\"></mat-checkbox>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex mb-3\\\">\\n          <span class=\\\"w-25\\\"></span>\\n          <div class=\\\"w-75 font-italic text-muted\\\">\\n            {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.SENDING_ENABLED_DESCRIPTION' | translate}}\\n          </div>\\n        </div>\\n      </mat-tab>\\n      <mat-tab label=\\\"{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.LANG_EN' | translate}}\\\">\\n        <ng-template matTabContent>\\n          <div class=\\\"d-flex w-100\\\">\\n            <div class=\\\"pr-2 w-100\\\">\\n              <div class=\\\"pt-2\\\">\\n                <span class=\\\"font-weight-bold pr-2\\\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.SUBJECT' | translate}}:</span>\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <input\\n                    matInput\\n                    #enInput\\n                    (focus)=\\\"isTextFocused = false\\\"\\n                    [(ngModel)]=\\\"this.applicationMail.message['en'].subject\\\">\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"font-weight-bold\\\">\\n                {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.TEXT' | translate}}:\\n              </div>\\n              <button mat-stroked-button (click)=\\\"this.showTags = !this.showTags;\\\">\\n                {{showTags ? ('DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.HIDE_TAGS' | translate) :\\n                                  ('DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.SHOW_TAGS' | translate)}}\\n              </button>\\n              <mat-form-field class=\\\"w-100\\\">\\n                <textarea matInput\\n                          #enTextarea\\n                          rows=\\\"17\\\"\\n                          (focus)=\\\"isTextFocused = true\\\"\\n                          [(ngModel)]=\\\"this.applicationMail.message['en'].text\\\">\\n                </textarea>\\n              </mat-form-field>\\n            </div>\\n\\n            <div [@tagsOpenClose]=\\\"showTags ? 'open' : 'closed'\\\">\\n              <app-tag-bar\\n                (addedTag)=\\\"addTag(enInput, enTextarea, 'en', $event)\\\">\\n              </app-tag-bar>\\n            </div>\\n          </div>\\n        </ng-template>\\n      </mat-tab>\\n      <mat-tab label=\\\"{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.LANG_CS' | translate}}\\\">\\n        <ng-template matTabContent>\\n          <div class=\\\"d-flex w-100\\\">\\n            <div class=\\\"pr-2 w-100\\\">\\n              <div class=\\\"pt-2\\\">\\n                <span class=\\\"font-weight-bold pr-2\\\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.SUBJECT' | translate}}:</span>\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <input\\n                    matInput\\n                    #csInput\\n                    (focus)=\\\"isTextFocused = false\\\"\\n                    [(ngModel)]=\\\"this.applicationMail.message['cs'].subject\\\">\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"font-weight-bold\\\">\\n                {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.TEXT' | translate}}:\\n              </div>\\n              <button mat-stroked-button (click)=\\\"this.showTags = !this.showTags;\\\">\\n                {{showTags ? ('DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.HIDE_TAGS' | translate) :\\n                ('DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.SHOW_TAGS' | translate)}}\\n              </button>\\n              <mat-form-field class=\\\"w-100\\\">\\n                <textarea matInput\\n                          #csTextarea\\n                          rows=\\\"17\\\"\\n                          (focus)=\\\"isTextFocused = true\\\"\\n                          [(ngModel)]=\\\"this.applicationMail.message['cs'].text\\\">\\n                </textarea>\\n              </mat-form-field>\\n            </div>\\n\\n            <div [@tagsOpenClose]=\\\"showTags ? 'open' : 'closed'\\\">\\n              <app-tag-bar\\n                (addedTag)=\\\"addTag(csInput, csTextarea, 'cs',$event)\\\">\\n              </app-tag-bar>\\n            </div>\\n          </div>\\n        </ng-template>\\n      </mat-tab>\\n    </mat-tab-group>\\n  </div>\\n\\n  <div mat-dialog-actions class=\\\"d-flex mt-auto\\\">\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-auto\\\"\\n      (click)=\\\"cancel()\\\">\\n      {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.CANCEL_BUTTON' | translate}}\\n    </button>\\n    <button\\n      mat-flat-button\\n      *ngIf=\\\"data.createMailNotification\\\"\\n      class=\\\"ml-2\\\"\\n      color=\\\"accent\\\"\\n      [disabled]=\\\"invalidNotification\\\"\\n      (click)=\\\"create()\\\">\\n      {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.CREATE_BUTTON' | translate}}\\n    </button>\\n    <button\\n      mat-flat-button\\n      *ngIf=\\\"!data.createMailNotification\\\"\\n      class=\\\"ml-2\\\"\\n      color=\\\"accent\\\"\\n      (click)=\\\"save()\\\">\\n      {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.SAVE_BUTTON' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<app-alert color=\\\"info\\\">\\n  {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.TAGS_DESCRIPTION' | translate}}\\n</app-alert>\\n<div cdkScrollable class=\\\"scrollable\\\">\\n  <div class=\\\"font-weight-bold\\\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_RELATED_SECTION' | translate}}:</div>\\n  <app-tag-section\\n    [tags]=\\\"applicationRelatedTags\\\"\\n    (addedTag)=\\\"addTag($event)\\\">\\n  </app-tag-section>\\n\\n  <div class=\\\"font-weight-bold pt-2\\\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.USER_RELATED_SECTION' | translate}}:</div>\\n\\n  <app-tag-section\\n    [tags]=\\\"userRelatedTags\\\"\\n    (addedTag)=\\\"addTag($event)\\\">\\n  </app-tag-section>\\n\\n  <div class=\\\"font-weight-bold pt-2\\\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.VALIDATION_LINKS_USERS_SECTION' | translate}}:</div>\\n\\n  <div class=\\\"font-italic text-muted\\\">\\n    {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.VALIDATION_LINKS_DESCRIPTION' | translate}}\\n  </div>\\n\\n  <app-tag-section\\n    [tags]=\\\"validationLinksUsersTags\\\"\\n    (addedTag)=\\\"addTag($event)\\\">\\n  </app-tag-section>\\n\\n  <div class=\\\"font-weight-bold pt-2\\\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_LINKS_USERS_SECTION' | translate}}:</div>\\n\\n  <div class=\\\"font-italic text-muted\\\">\\n    {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_LINKS_DESCRIPTION' | translate}}\\n  </div>\\n\\n  <app-tag-section\\n    [tags]=\\\"applicationLinksUsersTags\\\"\\n    (addedTag)=\\\"addTag($event)\\\">\\n  </app-tag-section>\\n\\n  <div class=\\\"font-weight-bold pt-2\\\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_LINKS_ADMINISTRATOR_SECTION' | translate}}:</div>\\n\\n  <div class=\\\"font-italic text-muted\\\">\\n    {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_LINKS_ADMINISTRATOR_DESCRIPTION' | translate}}\\n  </div>\\n\\n  <app-tag-section\\n    [tags]=\\\"applicationLinksAdministratorsTags\\\"\\n    (addedTag)=\\\"addTag($event)\\\">\\n  </app-tag-section>\\n\\n  <div class=\\\"font-weight-bold pt-2\\\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.PERUN_LINKS_ADMINISTRATOR_SECTION' | translate}}:</div>\\n\\n  <div class=\\\"font-italic text-muted\\\">\\n    {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.PERUN_LINKS_ADMINISTRATOR_DESCRIPTION' | translate}}\\n  </div>\\n\\n  <app-tag-section\\n    [tags]=\\\"perunLinksAdministratorsTags\\\"\\n    (addedTag)=\\\"addTag($event)\\\">\\n  </app-tag-section>\\n\\n  <div class=\\\"font-weight-bold pt-2\\\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.USER_INVITATIONS_SECTION' | translate}}:</div>\\n\\n  <div class=\\\"font-italic text-muted\\\">\\n    {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.USER_INVITATIONS_DESCRIPTION' | translate}}\\n  </div>\\n\\n  <app-tag-section\\n    [tags]=\\\"userInvitationsTags\\\"\\n    (addedTag)=\\\"addTag($event)\\\">\\n  </app-tag-section>\\n</div>\\n\"","export default \"<div *ngFor=\\\"let tag of tags\\\">\\n  <button mat-stroked-button\\n          (click)=\\\"addTag('{' + tag[0] + '}')\\\">{{tag[0]}}\\n  </button> - {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.' + tag[1] | translate}}\\n</div>\\n\"","export default \"<div class=\\\"{{theme}}\\\">\\n  <h1 mat-dialog-title>{{'DIALOGS.ADD_GROUPS.TITLE' | translate}}</h1>\\n\\n  <div mat-dialog-content>\\n    <div class=\\\"inline-dialog-items\\\">\\n      <mat-form-field class=\\\"mr-2\\\">\\n        <mat-label>{{'SHARED.COMPONENTS.MANAGERS_PAGE.SELECT_ROLE' | translate}}</mat-label>\\n        <mat-select [(value)]=\\\"selectedRole\\\">\\n          <mat-option *ngFor=\\\"let role of availableRoles\\\" [value]=\\\"role\\\">{{role | displayedRole}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"mr-2 w-75\\\">\\n        <mat-label>{{'DIALOGS.ADD_GROUPS.SELECT_VO' | translate}}</mat-label>\\n        <input type=\\\"text\\\" placeholder=\\\"{{'DIALOGS.ADD_GROUPS.SELECT_VO' | translate}}\\\" aria-label=\\\"Assignee\\\" matInput\\n               [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\">\\n        <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\" (optionSelected)=\\\"showVoGroups()\\\">\\n          <mat-option *ngFor=\\\"let vo of filteredOptions | async\\\" [value]=\\\"vo\\\">\\n            {{vo.name}}\\n          </mat-option>\\n        </mat-autocomplete>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"overflow-hidden\\\">\\n      <mat-spinner *ngIf=\\\"loading\\\" class=\\\"mr-auto ml-auto\\\"></mat-spinner>\\n    </div>\\n    <div class=\\\"mt-3\\\" *ngIf=\\\"groups !== null && !loading\\\">\\n      <app-groups-list\\n        [inDialog]=\\\"true\\\"\\n        [hideColumns]=\\\"['menu', 'vo']\\\"\\n        [selection]=\\\"selection\\\"\\n        [groups]=\\\"groups\\\"\\n        [disableMembers]=\\\"false\\\">\\n      </app-groups-list>\\n    </div>\\n\\n  </div>\\n\\n  <div mat-dialog-actions>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-auto\\\"\\n      color=\\\"warn\\\"\\n      (click)=\\\"onCancel()\\\">\\n      {{'DIALOGS.ADD_MANAGERS.CANCEL' | translate}}\\n    </button>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-2\\\"\\n      color=\\\"accent\\\"\\n      (click)=\\\"onSubmit()\\\"\\n      [disabled]=\\\"selection.selected.length === 0\\\">\\n      {{'DIALOGS.ADD_MANAGERS.CREATE' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"{{theme}}\\\">\\n  <h1 mat-dialog-title>{{'DIALOGS.ADD_MANAGERS.TITLE' | translate}}</h1>\\n\\n  <div mat-dialog-content>\\n    <div class=\\\"inline-dialog-items\\\">\\n      <mat-form-field class=\\\"mr-2\\\">\\n        <mat-label>{{'SHARED.COMPONENTS.MANAGERS_PAGE.SELECT_ROLE' | translate}}</mat-label>\\n        <mat-select [(value)]=\\\"selectedRole\\\">\\n          <mat-option *ngFor=\\\"let role of availableRoles\\\" [value]=\\\"role\\\">{{role | displayedRole}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"mr-2 w-100\\\">\\n        <label>\\n          <input matInput autocomplete=\\\"false\\\" placeholder=\\\"{{'DIALOGS.ADD_MANAGERS.DESCRIPTION' | translate}}\\\"\\n                 [(ngModel)]=\\\"searchString\\\">\\n        </label>\\n      </mat-form-field>\\n    </div>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-auto\\\"\\n      color=\\\"accent\\\"\\n      [disabled]=\\\"searchString.length === 0\\\"\\n      (click)=\\\"onSearchByString()\\\">\\n      {{'DIALOGS.ADD_MANAGERS.SEARCH' | translate}}\\n    </button>\\n\\n\\n    <div class=\\\"overflow-hidden\\\">\\n      <mat-spinner *ngIf=\\\"loading\\\" class=\\\"mr-auto ml-auto\\\"></mat-spinner>\\n    </div>\\n    <div class=\\\"mt-3\\\" *ngIf=\\\"users !== null && !loading\\\">\\n      <app-alert *ngIf=\\\"users.length === 0 && firstSearchDone\\\" color=\\\"warn\\\">\\n        {{'DIALOGS.ADD_MANAGERS.NO_USERS_FOUND' | translate}}\\n      </app-alert>\\n      <app-users-list\\n        [inDialog]=\\\"true\\\"\\n        [selection]=\\\"selection\\\"\\n        [users]=\\\"users\\\"\\n        *ngIf=\\\"users.length !== 0\\\">\\n      </app-users-list>\\n    </div>\\n\\n  </div>\\n\\n  <div mat-dialog-actions>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-auto\\\"\\n      color=\\\"warn\\\"\\n      (click)=\\\"onCancel()\\\">\\n      {{'DIALOGS.ADD_MANAGERS.CANCEL' | translate}}\\n    </button>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-2\\\"\\n      color=\\\"accent\\\"\\n      (click)=\\\"onSubmit()\\\"\\n      [disabled]=\\\"selection.selected.length === 0 || selectedRole === undefined\\\">\\n      {{'DIALOGS.ADD_MANAGERS.CREATE' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"{{theme}}\\\">\\n  <h1 mat-dialog-title>{{'DIALOGS.ADD_MEMBERS.TITLE' | translate}}</h1>\\n\\n  <div mat-dialog-content *ngIf=\\\"!processing\\\">\\n\\n      <mat-form-field class=\\\"mr-2 search-field adjust-width\\\">\\n        <label>\\n          <input matInput autocomplete=\\\"false\\\" placeholder=\\\"{{'DIALOGS.ADD_MEMBERS.DESCRIPTION' | translate}}\\\"\\n                 [(ngModel)]=\\\"searchString\\\">\\n        </label>\\n      </mat-form-field>\\n\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-auto\\\"\\n      color=\\\"accent\\\"\\n      [disabled]=\\\"searchString.length === 0\\\"\\n      (click)=\\\"onSearchByString()\\\">\\n      {{'DIALOGS.ADD_MEMBERS.SEARCH' | translate}}\\n    </button>\\n\\n    <div class=\\\"no-bounce-scrollbar\\\">\\n      <mat-spinner *ngIf=\\\"loading\\\" class=\\\"mr-auto ml-auto\\\"></mat-spinner>\\n    </div>\\n    <div class=\\\"mt-3\\\" *ngIf=\\\"!!members && !loading\\\">\\n      <app-alert *ngIf=\\\"members.length === 0 && firstSearchDone\\\" color=\\\"warn\\\">\\n        {{'DIALOGS.ADD_MEMBERS.NO_USERS_FOUND' | translate}}\\n      </app-alert>\\n      <app-members-candidates-list\\n        [selection]=\\\"selection\\\"\\n        [members]=\\\"members\\\"\\n        *ngIf=\\\"members.length !== 0\\\">\\n      </app-members-candidates-list>\\n    </div>\\n\\n  </div>\\n  <mat-spinner class=\\\"mr-auto ml-auto\\\" *ngIf=\\\"processing\\\"></mat-spinner>\\n  <div mat-dialog-actions *ngIf=\\\"!processing\\\">\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-auto\\\"\\n      color=\\\"warn\\\"\\n      (click)=\\\"onCancel()\\\">\\n      {{'DIALOGS.ADD_MEMBERS.CANCEL' | translate}}\\n    </button>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-2\\\"\\n      color=\\\"accent\\\"\\n      (click)=\\\"onAdd()\\\"\\n      [disabled]=\\\"selection.selected.length === 0\\\">\\n      {{'DIALOGS.ADD_MEMBERS.CREATE' | translate}}\\n    </button>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-2\\\"\\n      color=\\\"accent\\\"\\n      (click)=\\\"onInvite()\\\"\\n      [disabled]=\\\"selection.selected.length === 0\\\">\\n      {{'DIALOGS.ADD_MEMBERS.INVITE' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.TITLE' | translate}}</h1>\\n<div mat-dialog-content class=\\\"dialog-container\\\">\\n\\n  <div class=\\\"mb-2 font-italic\\\">{{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.DESCRIPTION' | translate}}</div>\\n  {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.SOURCE_VO' | translate}}:\\n\\n  <mat-form-field>\\n    <input matInput type=\\\"text\\\"\\n           [formControl]=\\\"voControl\\\"\\n           [matAutocomplete]=\\\"auto\\\">\\n    <mat-error *ngIf=\\\"voControl.hasError('invalidVo')\\\">\\n      {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.ERROR_INVALID_VO' | translate}}\\n    </mat-error>\\n    <mat-error *ngIf=\\\"voControl.hasError('required')\\\">\\n      {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.ERROR_NO_VO' | translate}}\\n    </mat-error>\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\n      <mat-option *ngFor=\\\"let vo of filteredVos | async\\\" [value]=\\\"vo\\\">\\n        {{vo.name}}\\n      </mat-option>\\n    </mat-autocomplete>\\n  </mat-form-field>\\n\\n  {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.SOURCE_GROUP' | translate}}:\\n\\n  <mat-form-field>\\n    <input matInput\\n           type=\\\"text\\\"\\n           [formControl]=\\\"groupControl\\\"\\n           [matAutocomplete]=\\\"group\\\"\\n           (focus)=\\\"getGroups()\\\">\\n    <mat-error *ngIf=\\\"groupControl.hasError('required')\\\">\\n      {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.ERROR_NO_GROUP' | translate}}\\n    </mat-error>\\n    <mat-error *ngIf=\\\"groupControl.hasError('invalidGroup')\\\">\\n      {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.ERROR_INVALID_GROUP' | translate}}\\n    </mat-error>\\n    <mat-autocomplete #group=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\n      <mat-option *ngFor=\\\"let group of filteredGroups | async\\\" [value]=\\\"group\\\">\\n        {{group.name}}\\n      </mat-option>\\n    </mat-autocomplete>\\n  </mat-form-field>\\n\\n</div>\\n\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"cancel()\\\">\\n    {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.CANCEL_BUTTON' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"accent\\\"\\n    [disabled]=\\\"voControl.invalid || groupControl.invalid\\\"\\n    (click)=\\\"submit()\\\">\\n    {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.SUBMIT_BUTTON' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.RE_SEND_NOTIFICATION.TITLE' | translate}}</h1>\\n\\n<div mat-dialog-content>\\n  {{'DIALOGS.RE_SEND_NOTIFICATION.SELECT' | translate}}:\\n  <mat-form-field class=\\\"w-100\\\">\\n    <mat-select [(value)]=\\\"mailType\\\" disableOptionCentering>\\n      <mat-option value=\\\"APP_CREATED_USER\\\">{{'DIALOGS.RE_SEND_NOTIFICATION.NOTIFICATION_TYPE.APP_CREATED_USER' | translate}}</mat-option>\\n      <mat-option value=\\\"APP_CREATED_VO_ADMIN\\\">{{'DIALOGS.RE_SEND_NOTIFICATION.NOTIFICATION_TYPE.APP_CREATED_VO_ADMIN' | translate}}</mat-option>\\n      <mat-option value=\\\"MAIL_VALIDATION\\\">{{'DIALOGS.RE_SEND_NOTIFICATION.NOTIFICATION_TYPE.MAIL_VALIDATION' | translate}}</mat-option>\\n      <mat-option value=\\\"APP_APPROVED_USER\\\">{{'DIALOGS.RE_SEND_NOTIFICATION.NOTIFICATION_TYPE.APP_APPROVED_USER' | translate}}</mat-option>\\n      <mat-option value=\\\"APP_REJECTED_USER\\\">{{'DIALOGS.RE_SEND_NOTIFICATION.NOTIFICATION_TYPE.APP_REJECTED_USER' | translate}}</mat-option>\\n      <mat-option value=\\\"APP_ERROR_VO_ADMIN\\\">{{'DIALOGS.RE_SEND_NOTIFICATION.NOTIFICATION_TYPE.APP_ERROR_VO_ADMIN' | translate}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n\\n  <div *ngIf=\\\"mailType === 'APP_REJECTED_USER'\\\">\\n    {{'DIALOGS.RE_SEND_NOTIFICATION.REASON' | translate}}:\\n    <mat-form-field class=\\\"w-100\\\">\\n      <textarea matInput [(ngModel)]=\\\"reason\\\"></textarea>\\n    </mat-form-field>\\n  </div>\\n</div>\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.RE_SEND_NOTIFICATION.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"accent\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    {{'DIALOGS.RE_SEND_NOTIFICATION.SEND' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.REJECT_APPLICATION.TITLE' | translate}}</h1>\\n\\n<div mat-dialog-content>\\n  {{'DIALOGS.REJECT_APPLICATION.TEXT' | translate}}\\n  <mat-form-field class=\\\"w-100\\\">\\n    <textarea matInput [(ngModel)]=\\\"reason\\\"></textarea>\\n  </mat-form-field>\\n</div>\\n\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.REJECT_APPLICATION.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"warn\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    {{'DIALOGS.REJECT_APPLICATION.SUBMIT' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<div class=\\\"{{theme}}\\\">\\n  <h1 mat-dialog-title>{{'DIALOGS.ASSIGN_GROUP_TO_RESOURCE.TITLE' | translate}}</h1>\\n  <app-debounce-filter\\n    placeholder=\\\"{{'DIALOGS.ASSIGN_GROUP_TO_RESOURCE.FILTER_DESCRIPTION' | translate}}\\\"\\n    (filter)=\\\"applyFilter($event)\\\">\\n  </app-debounce-filter>\\n  <mat-checkbox\\n    color=\\\"primary\\\"\\n    [(ngModel)]=\\\"checkGroups\\\">\\n    {{'DIALOGS.ASSIGN_GROUP_TO_RESOURCE.CONFIGURE_GROUPS' | translate}}\\n  </mat-checkbox>\\n  <mat-spinner *ngIf=\\\"loading\\\" class=\\\"mr-auto ml-auto\\\"></mat-spinner>\\n  <app-groups-list\\n    *ngIf=\\\"!loading\\\"\\n    [groups]=\\\"filteredGroups\\\"\\n    [selection]=\\\"selection\\\"\\n    [hideColumns]=\\\"['vo', 'menu']\\\"\\n    [inDialog]=\\\"true\\\"\\n    [disableMembers]=\\\"false\\\">\\n  </app-groups-list>\\n  <div mat-dialog-actions>\\n    <button\\n      mat-stroked-button\\n      class=\\\"ml-auto\\\"\\n      (click)=\\\"onCancel()\\\">\\n      {{'DIALOGS.ASSIGN_GROUP_TO_RESOURCE.CANCEL_BUTTON' | translate}}\\n    </button>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-2\\\"\\n      color=\\\"accent\\\"\\n      (click)=\\\"onAdd()\\\"\\n      [disabled]=\\\"selection.selected.length === 0\\\">\\n      {{'DIALOGS.ASSIGN_GROUP_TO_RESOURCE.ADD_BUTTON' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.CHANGE_STATUS.TITLE' | translate}}</h1>\\n<div class=\\\"{{theme}}\\\">\\n  <mat-spinner *ngIf=\\\"loading\\\" class=\\\"ml-auto mr-auto\\\">\\n  </mat-spinner>\\n</div>\\n<div *ngIf=\\\"!loading\\\">\\n  <div mat-dialog-content class=\\\"dialog-container\\\">\\n    <div class=\\\"font-weight-bold pb-1\\\">{{'DIALOGS.CHANGE_STATUS.CURRENT_STATUS' | translate}}: {{data.member.status}}</div>\\n    <div class=\\\"text-muted pb-3\\\">{{'DIALOGS.CHANGE_STATUS.INVALID_DESCRIPTION' | translate}}</div>\\n\\n    <div class=\\\"font-weight-bold pb-1\\\">{{'DIALOGS.CHANGE_STATUS.NEW_STATUS' | translate}}: VALID</div>\\n    <div class=\\\"text-muted\\\">{{'DIALOGS.CHANGE_STATUS.CHANGE_VALID' | translate}}</div>\\n  </div>\\n  <div mat-dialog-actions>\\n    <button\\n      mat-flat-button\\n      required\\n      class=\\\"ml-auto\\\"\\n      (click)=\\\"cancel()\\\">\\n      {{'DIALOGS.CHANGE_STATUS.CANCEL' | translate}}\\n    </button>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-2\\\"\\n      color=\\\"accent\\\"\\n      (click)=\\\"submit()\\\">\\n      {{'DIALOGS.CHANGE_STATUS.TITLE' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.TITLE' | translate}}</h1>\\n<div mat-dialog-content>\\n  <mat-form-field class=\\\"form-field-width\\\">\\n    <label>\\n      <input class=\\\"form-field-width\\\" matInput [(ngModel)]=\\\"attDef.friendlyName\\\"\\n             placeholder=\\\"{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.FRIENDLY_NAME' | translate}}\\\" required>\\n    </label>\\n    <mat-error\\n      *ngIf=\\\"attDef.friendlyName === ''\\\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.ERROR_FIELD_EMPTY' | translate}}</mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"form-field-width\\\">\\n    <label>\\n      <input class=\\\"form-field-width\\\" matInput [(ngModel)]=\\\"attDef.displayName\\\"\\n             placeholder=\\\"{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.DISPLAY_NAME' | translate}}\\\" required>\\n    </label>\\n    <mat-error\\n      *ngIf=\\\"attDef.displayName === ''\\\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.ERROR_FIELD_EMPTY' | translate}}</mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"form-field-width\\\">\\n    <label>\\n      <input class=\\\"form-field-width\\\" matInput [(ngModel)]=\\\"attDef.description\\\"\\n             placeholder=\\\"{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.DESCRIPTION' | translate}}\\\" required>\\n    </label>\\n    <mat-error\\n      *ngIf=\\\"attDef.description === ''\\\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.ERROR_FIELD_EMPTY' | translate}}</mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"form-field-width\\\">\\n    <mat-placeholder>{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.ENTITY' | translate}}</mat-placeholder>\\n    <mat-select [(ngModel)]=\\\"attDef.entity\\\" required>\\n      <mat-option *ngFor=\\\"let entity of entities\\\" [value]=\\\"entity\\\">{{entity}}</mat-option>\\n    </mat-select>\\n    <mat-error\\n      *ngIf=\\\"attDef.entity === ''\\\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.ERROR_SELECT_SOMETHING' | translate}}</mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"form-field-width\\\">\\n    <mat-placeholder>{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.DEFINITION' | translate}}</mat-placeholder>\\n    <mat-select [(ngModel)]=\\\"definitionType\\\" required>\\n      <mat-option *ngFor=\\\"let defType of definitionTypes\\\" [value]=\\\"defType\\\">{{defType}}</mat-option>\\n    </mat-select>\\n    <mat-error\\n      *ngIf=\\\"definitionType === ''\\\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.ERROR_SELECT_SOMETHING' | translate}}</mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"form-field-width\\\">\\n    <mat-placeholder>{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.VALUE_TYPE' | translate}}</mat-placeholder>\\n    <mat-select [(ngModel)]=\\\"valueType\\\" required>\\n      <mat-option *ngFor=\\\"let valueType of valueTypes\\\" [value]=\\\"valueType\\\">{{valueType}}</mat-option>\\n    </mat-select>\\n    <mat-error\\n      *ngIf=\\\"valueType === ''\\\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.ERROR_SELECT_SOMETHING' | translate}}</mat-error>\\n  </mat-form-field>\\n  <br>\\n  <div class=\\\"d-flex flex-row mt-3\\\">\\n    <p>{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.UNIQUE' | translate}}</p>\\n    <p class=\\\"pointer ml-4\\\" (click)=\\\"attDef.unique = false\\\">OFF</p>\\n    <mat-slide-toggle class=\\\"ml-2\\\" color=\\\"accent\\\"\\n                      matTooltip=\\\"{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.TOOLTIP_UNIQUE'| translate}}\\\"\\n                      matTooltipPosition=\\\"above\\\"\\n                      [matTooltipDisabled]=\\\"!disableUniqueToggle()\\\"\\n                      [disabled]=\\\"disableUniqueToggle()\\\"\\n                      [(ngModel)]=\\\"attDef.unique\\\">\\n      ON\\n    </mat-slide-toggle>\\n  </div>\\n\\n  <div class=\\\"d-flex flex-row justify-content-between mt-2\\\">\\n    <p class=\\\"ml-5 pl-4\\\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.SELF' | translate}}</p>\\n    <p class=\\\"\\\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.SELF_PUBLIC' | translate}}</p>\\n    <p class=\\\"\\\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.SELF_VO' | translate}}</p>\\n    <p class=\\\"\\\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.VO' | translate}}</p>\\n    <p class=\\\"\\\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.GROUP' | translate}}</p>\\n    <p class=\\\"\\\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.FACILITY' | translate}}</p>\\n  </div>\\n\\n  <div class=\\\"d-flex flex-row justify-content-between\\\">\\n    <p>{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.READ' | translate}}</p>\\n    <mat-checkbox [(ngModel)]=\\\"readSelf\\\">\\n    </mat-checkbox>\\n    <mat-checkbox [(ngModel)]=\\\"readSelfPublic\\\">\\n    </mat-checkbox>\\n    <mat-checkbox [(ngModel)]=\\\"readSelfVo\\\">\\n    </mat-checkbox>\\n    <mat-checkbox [(ngModel)]=\\\"readVo\\\">\\n    </mat-checkbox>\\n    <mat-checkbox [(ngModel)]=\\\"readGroup\\\">\\n    </mat-checkbox>\\n    <mat-checkbox [(ngModel)]=\\\"readFacility\\\">\\n    </mat-checkbox>\\n  </div>\\n\\n  <div class=\\\"d-flex flex-row justify-content-between\\\">\\n    <p>{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.WRITE' | translate}}</p>\\n    <mat-checkbox [(ngModel)]=\\\"writeSelf\\\">\\n    </mat-checkbox>\\n    <mat-checkbox [(ngModel)]=\\\"writeSelfPublic\\\">\\n    </mat-checkbox>\\n    <mat-checkbox [(ngModel)]=\\\"writeSelfVo\\\">\\n    </mat-checkbox>\\n    <mat-checkbox [(ngModel)]=\\\"writeVo\\\">\\n    </mat-checkbox>\\n    <mat-checkbox [(ngModel)]=\\\"writeGroup\\\">\\n    </mat-checkbox>\\n    <mat-checkbox [(ngModel)]=\\\"writeFacility\\\">\\n    </mat-checkbox>\\n  </div>\\n\\n</div>\\n<div mat-dialog-actions class=\\\"mt-3\\\">\\n  <button\\n    mat-stroked-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"accent\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"disableConfirmButton()\\\"\\n    matTooltip=\\\"{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.TOOLTIP_CONFIRM' | translate}}\\\"\\n    matTooltipPosition=\\\"above\\\"\\n    [matTooltipDisabled]=\\\"!disableConfirmButton()\\\">\\n    {{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.CONFIRM' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<div class=\\\"{{data.style}}\\\">\\n  <div mat-dialog-title>\\n    <h1 class=\\\"page-subtitle\\\">{{'DIALOGS.CREATE_ATTRIBUTE.SET_NEW' | translate}}</h1>\\n    <app-immediate-filter class=\\\"font-size-1rem\\\" [placeholder]=\\\"'SHARED.COMPONENTS.ATTRIBUTES_LIST.FILTER'\\\"\\n                          (filter)=\\\"applyFilter($event)\\\"></app-immediate-filter>\\n    <app-alert class=\\\"ml-3 font-size-1rem\\\" *ngIf=\\\"showError\\\" color=\\\"error\\\">\\n      {{'DIALOGS.CREATE_ATTRIBUTE.ERROR_EMPTY_VALUE' | translate}}\\n    </app-alert>\\n  </div>\\n  <div mat-dialog-content>\\n    <app-attributes-list\\n      *ngIf=\\\"attributes !== undefined\\\"\\n      #list\\n      [filterValue]=\\\"filterValue\\\"\\n      [attributes]=\\\"attributes\\\"\\n      [selection]=\\\"selected\\\"\\n      [inDialog]=\\\"true\\\">\\n    </app-attributes-list>\\n  </div>\\n  <div mat-dialog-actions>\\n    <button\\n      mat-stroked-button\\n      class=\\\"ml-auto\\\"\\n      (click)=\\\"onCancel()\\\">\\n      {{'DIALOGS.CREATE_ATTRIBUTE.CANCEL' | translate}}\\n    </button>\\n\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-2\\\"\\n      color=\\\"accent\\\"\\n      (click)=\\\"onSave()\\\"\\n      [disabled]=\\\"selected.selected.length === 0\\\">\\n      {{'DIALOGS.CREATE_ATTRIBUTE.SAVE' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{title}}</h1>\\n<div mat-dialog-content class=\\\"dialog-container\\\">\\n\\n  <mat-form-field>\\n    <input\\n      matInput\\n      required\\n      placeholder=\\\"{{'DIALOGS.CREATE_GROUP.NAME' | translate}}\\\"\\n      [(ngModel)]=\\\"name\\\">\\n    <mat-error>\\n      {{'DIALOGS.CREATE_GROUP.FILL_VALUE' | translate}}\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <textarea\\n      matInput\\n      required\\n      placeholder=\\\"{{'DIALOGS.CREATE_GROUP.DESCRIPTION' | translate}}\\\"\\n      [(ngModel)]=\\\"description\\\"></textarea>\\n    <mat-error>\\n      {{'DIALOGS.CREATE_GROUP.FILL_VALUE' | translate}}\\n    </mat-error>\\n  </mat-form-field>\\n\\n</div>\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    required\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.CREATE_GROUP.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"accent\\\"\\n    [disabled]=\\\"name == '' || description == ''\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    {{'DIALOGS.CREATE_GROUP.CREATE' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.CREATE_RESOURCE_TAG.TITLE' | translate}}</h1>\\n<div mat-dialog-content class=\\\"dialog-container\\\">\\n\\n  <mat-form-field>\\n    <input\\n      matInput\\n      placeholder=\\\"{{'DIALOGS.CREATE_RESOURCE_TAG.NAME' | translate}}\\\"\\n      [(ngModel)]=\\\"name\\\"\\n      required>\\n    <mat-error>{{'DIALOGS.CREATE_RESOURCE_TAG.EMPTY_NAME' | translate}}</mat-error>\\n  </mat-form-field>\\n\\n</div>\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.CREATE_RESOURCE_TAG.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"accent\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    {{'DIALOGS.CREATE_RESOURCE_TAG.CREATE' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{\\\"DIALOGS.CREATE_VO.TITLE\\\" | translate}}</h1>\\n<div class=\\\"{{theme}}\\\">\\n  <mat-spinner class=\\\"ml-auto mr-auto\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n</div>\\n<div class=\\\"{{theme}}\\\" *ngIf=\\\"!loading\\\">\\n  <div mat-dialog-content class=\\\"dialog-container\\\">\\n\\n    <mat-form-field>\\n      <input\\n        matInput\\n        required\\n        placeholder=\\\"{{'DIALOGS.CREATE_VO.FULL_NAME' | translate}}\\\"\\n        [(ngModel)]=\\\"fullName\\\">\\n      <mat-error>\\n        {{'DIALOGS.CREATE_VO.FILL_VALUE' | translate}}\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input\\n        matInput\\n        required\\n        placeholder=\\\"{{'DIALOGS.CREATE_VO.SHORT_NAME' | translate}}\\\"\\n        [(ngModel)]=\\\"shortName\\\">\\n      <mat-error>\\n        {{'DIALOGS.CREATE_VO.FILL_VALUE' | translate}}\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-error *ngIf=\\\"!isValidFullName() && fullName !== ''\\\">\\n      {{'DIALOGS.CREATE_VO.FILL_FULL_NAME' | translate}}\\n    </mat-error>\\n\\n    <mat-error *ngIf=\\\"!isValidShortName() && shortName !== ''\\\">\\n      {{'DIALOGS.CREATE_VO.FILL_SHORT_NAME' | translate}}\\n    </mat-error>\\n  </div>\\n  <div mat-dialog-actions>\\n    <button\\n      mat-stroked-button\\n      class=\\\"ml-auto\\\"\\n      (click)=\\\"onCancel()\\\">\\n      {{'DIALOGS.CREATE_VO.CANCEL' | translate}}\\n    </button>\\n    <div matTooltip=\\\"{{'DIALOGS.CREATE_VO.TOOLTIP' | translate}}\\\" matTooltipPosition=\\\"above\\\" [matTooltipDisabled]=\\\"isValidFullName() && isValidShortName()\\\">\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-2\\\"\\n      color=\\\"accent\\\"\\n      [disabled]=\\\"!isValidShortName() || !isValidFullName()\\\"\\n      (click)=\\\"onSubmit()\\\">\\n      {{'DIALOGS.CREATE_VO.CREATE' | translate}}\\n    </button>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.DELETE_APPLICATION_FORM_ITEM.TITLE' | translate}}</h1>\\n<div mat-dialog-content class=\\\"dialog-container\\\">\\n\\n  <div class=\\\"pb-2 font-weight-bold\\\">{{'DIALOGS.DELETE_APPLICATION_FORM_ITEM.INFO_1' | translate}}</div>\\n  <div>{{'DIALOGS.DELETE_APPLICATION_FORM_ITEM.INFO_2' | translate}}</div>\\n  <div class=\\\"pb-4 pt-2\\\">{{'DIALOGS.DELETE_APPLICATION_FORM_ITEM.INFO_3' | translate}}</div>\\n\\n</div>\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.DELETE_APPLICATION_FORM_ITEM.CANCEL_BUTTON' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"warn\\\"\\n    (click)=\\\"submit()\\\">\\n    {{'DIALOGS.DELETE_APPLICATION_FORM_ITEM.SUBMIT_BUTTON' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.DELETE_ATTRIBUTE_DEFINITION.TITLE' | translate}}</h1>\\n<div mat-dialog-content>\\n  <div>\\n    {{'DIALOGS.DELETE_ATTRIBUTE_DEFINITION.TEXT_LINE1' | translate}}\\n  </div>\\n\\n  <div class=\\\"font-weight-bold\\\">\\n    {{'DIALOGS.DELETE_ATTRIBUTE_DEFINITION.TEXT_LINE2' | translate}}\\n  </div>\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"w-100\\\">\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let attribute\\\"> {{attribute.displayName}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"font-weight-bolder\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let group; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <app-alert class=\\\"mt-3\\\" color=\\\"error\\\">\\n    {{'DIALOGS.DELETE_ATTRIBUTE_DEFINITION.WARNING' | translate}}\\n  </app-alert>\\n\\n</div>\\n<div mat-dialog-actions class=\\\"mt-3\\\">\\n  <button\\n    mat-stroked-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.DELETE_ATTRIBUTE_DEFINITION.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"warn\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    {{'DIALOGS.DELETE_ATTRIBUTE_DEFINITION.CONFIRM' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.DELETE_ATTRIBUTES.TITLE' | translate}}</h1>\\n<div mat-dialog-content>\\n  <div>\\n    {{'DIALOGS.DELETE_ATTRIBUTES.DESCRIPTION' | translate}}\\n  </div>\\n\\n  <div class=\\\"font-weight-bold\\\">\\n    {{'DIALOGS.DELETE_ATTRIBUTES.ASK' | translate}}\\n  </div>\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"w-100\\\">\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let attribute\\\"> {{attribute.displayName}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"font-weight-bolder\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let group; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n</div>\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.DELETE_ATTRIBUTES.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"warn\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    {{'DIALOGS.DELETE_ATTRIBUTES.DELETE' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.DELETE_GROUP.TITLE' | translate}}</h1>\\n<div mat-dialog-content>\\n  <p>\\n    {{'DIALOGS.DELETE_GROUP.DESCRIPTION' | translate}}\\n  </p>\\n\\n  <div class=\\\"font-weight-bold\\\">\\n    {{'DIALOGS.DELETE_GROUP.ASK' | translate}}\\n  </div>\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"w-100\\\">\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let group\\\"> {{group.name}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"font-weight-bolder\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let group; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n</div>\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.DELETE_GROUP.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"warn\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    {{'DIALOGS.DELETE_GROUP.DELETE' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.APPLICATION_FORM_DELETE_MAIL.TITLE' | translate}}</h1>\\n<div mat-dialog-content>\\n  <p>\\n    {{'DIALOGS.APPLICATION_FORM_DELETE_MAIL.DESCRIPTION' | translate}}\\n  </p>\\n\\n  <div class=\\\"font-weight-bold\\\">\\n    {{'DIALOGS.APPLICATION_FORM_DELETE_MAIL.CONFIRMATION' | translate}}\\n  </div>\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"w-100\\\">\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let mail\\\"> {{getMailType(mail)}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"font-weight-bolder\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let mail; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n</div>\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.APPLICATION_FORM_DELETE_MAIL.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"warn\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    {{'DIALOGS.APPLICATION_FORM_DELETE_MAIL.SUBMIT' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.DELETE_RESOURCE_TAG.TITLE' | translate}}</h1>\\n<div mat-dialog-content>\\n  <p>\\n    {{'DIALOGS.DELETE_RESOURCE_TAG.DESCRIPTION' | translate}}\\n  </p>\\n\\n  <div class=\\\"font-weight-bold\\\">\\n    {{'DIALOGS.DELETE_RESOURCE_TAG.ASK' | translate}}\\n  </div>\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"w-100\\\">\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let tag\\\"> {{tag.tagName}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"font-weight-bolder\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let tag; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n</div>\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.DELETE_RESOURCE_TAG.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"warn\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    {{'DIALOGS.DELETE_RESOURCE_TAG.SUBMIT' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<div class=\\\"h-100 d-flex flex-column\\\">\\n  <h1 mat-dialog-title>{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.TITLE' | translate}}: {{this.applicationFormItem.shortname}}</h1>\\n  <div mat-dialog-content class=\\\"dialog-container\\\">\\n    <mat-tab-group color=primary>\\n      <mat-tab label=\\\"{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.BASIC_SETTINGS' | translate}}\\\">\\n        <div class=\\\"d-flex\\\">\\n          <span class=\\\"w-25 m-auto font-weight-bold\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SHORT_NAME' | translate}}:</span>\\n          <div class=\\\"w-75\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput [(ngModel)]=\\\"applicationFormItem.shortname\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex mb-3\\\">\\n          <span class=\\\"w-25\\\"></span>\\n          <div class=\\\"w-75 font-italic text-muted\\\">\\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SHORT_NAME_DESCRIPTION' | translate}}\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex\\\">\\n          <span class=\\\"w-25 font-weight-bold\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.INPUT_WIDGET' | translate}}:</span>\\n          <div class=\\\"w-75\\\">\\n            {{applicationFormItem.type | applicationFormItemType}}\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex mb-3\\\">\\n          <span class=\\\"w-25\\\"></span>\\n          <div class=\\\"w-75 font-italic text-muted\\\">\\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.INPUT_WIDGET_DESCRIPTION' | translate}}\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex\\\">\\n          <span class=\\\"w-25 font-weight-bold\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.DISPLAY_ON_APPLICATION' | translate}}:</span>\\n          <div class=\\\"w-75\\\">\\n            <section>\\n              <mat-checkbox [ngModel]=\\\"this.applicationFormItem.applicationTypes.includes('INITIAL')\\\"\\n                            (change)=\\\"onChangingType('INITIAL')\\\"\\n                            class=\\\"mr-2\\\">\\n                {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.INITIAL' | translate}}\\n              </mat-checkbox>\\n              <mat-checkbox [ngModel]=\\\"this.applicationFormItem.applicationTypes.includes('EXTENSION')\\\"\\n                            (change)=\\\"onChangingType('EXTENSION')\\\">\\n                {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.EXTENSION' | translate}}\\n              </mat-checkbox>\\n            </section>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex mb-3\\\">\\n          <span class=\\\"w-25\\\"></span>\\n          <div class=\\\"w-75 font-italic text-muted\\\">\\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.DISPLAY_ON_APPLICATION_DESCRIPTION' | translate}}\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"applicationFormItem.type === 'TEXTFIELD' ||\\n                        applicationFormItem.type === 'FROM_FEDERATION_HIDDEN' ||\\n                        applicationFormItem.type === 'FROM_FEDERATION_SHOW' ||\\n                        applicationFormItem.type === 'USERNAME' ||\\n                        applicationFormItem.type === 'VALIDATED_EMAIL' ||\\n                        applicationFormItem.type === 'PASSWORD' ||\\n                        applicationFormItem.type === 'TEXTAREA' ||\\n                        applicationFormItem.type === 'TIMEZONE' ||\\n                        applicationFormItem.type === 'CHECKBOX' ||\\n                        applicationFormItem.type === 'RADIO' ||\\n                        applicationFormItem.type === 'COMBOBOX' ||\\n                        applicationFormItem.type === 'SELECTIONBOX'\\\">\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 font-weight-bold\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.REQUIRED' | translate}}:</span>\\n            <div class=\\\"w-75\\\">\\n              <section>\\n                <mat-checkbox [(ngModel)]=\\\"this.applicationFormItem.required\\\">\\n                </mat-checkbox>\\n              </section>\\n            </div>\\n          </div>\\n          <div class=\\\"d-flex mb-3\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <div class=\\\"w-75 font-italic text-muted\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.REQUIRED_DESCRIPTION' | translate}}\\n            </div>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 m-auto font-weight-bold\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SOURCE_ATTRIBUTE' | translate}}:</span>\\n            <div class=\\\"w-75\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <mat-select [(value)]=\\\"applicationFormItem.perunSourceAttribute\\\" disableOptionCentering>\\n                  <mat-option *ngFor=\\\"let attribute of sourceAttributes\\\" [value]=\\\"attribute.value\\\">\\n                    {{attribute.displayName}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"d-flex mb-3\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <div class=\\\"w-75 font-italic text-muted\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SOURCE_ATTRIBUTE_DESCRIPTION' | translate}}\\n            </div>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 font-weight-bold\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.DESTINATION_ATTRIBUTE' | translate}}:</span>\\n            <div class=\\\"w-75\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <mat-select [(value)]=\\\"applicationFormItem.perunDestinationAttribute\\\" disableOptionCentering>\\n                  <mat-option *ngFor=\\\"let attribute of destinationAttributes\\\" [value]=\\\"attribute.value\\\">\\n                    {{attribute.displayName}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"d-flex mb-3\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <div class=\\\"w-75 font-italic text-muted\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.DESTINATION_ATTRIBUTE_DESCRIPTION' | translate}}\\n            </div>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 font-weight-bold\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.FEDERATION_ATTRIBUTE' | translate}}:</span>\\n            <div class=\\\"w-75\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <mat-select (selectionChange)=\\\"federationAttributeschanged()\\\" [(value)]=\\\"federationAttribute\\\" disableOptionCentering>\\n                  <mat-option *ngFor=\\\"let attribute of federationAttributes\\\" [value]=\\\"attribute.value\\\">\\n                    {{attribute.displayName}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <div *ngIf=\\\"federationAttribute === 'custom'\\\" class=\\\"w-100\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <input matInput [(ngModel)]=\\\"applicationFormItem.federationAttribute\\\">\\n                </mat-form-field>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"d-flex mb-3\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <div class=\\\"w-75 font-italic text-muted\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.FEDERATION_ATTRIBUTE_DESCRIPTION' | translate}}\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"applicationFormItem.type === 'TEXTFIELD' ||\\n                    applicationFormItem.type === 'FROM_FEDERATION_HIDDEN' ||\\n                    applicationFormItem.type === 'FROM_FEDERATION_SHOW' ||\\n                    applicationFormItem.type === 'USERNAME' ||\\n                    applicationFormItem.type === 'PASSWORD' ||\\n                    applicationFormItem.type === 'TEXTAREA' ||\\n                    applicationFormItem.type === 'CHECKBOX' ||\\n                    applicationFormItem.type === 'RADIO' ||\\n                    applicationFormItem.type === 'COMBOBOX' ||\\n                    applicationFormItem.type === 'SELECTIONBOX'\\\">\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 font-weight-bold\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.REGEX' | translate}}:</span>\\n            <div class=\\\"w-75\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <input matInput [(ngModel)]=\\\"applicationFormItem.regex\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"d-flex mb-3\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <div class=\\\"w-75 font-italic text-muted\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.REGEX_DESCRIPTION' | translate}}\\n            </div>\\n          </div>\\n        </div>\\n      </mat-tab>\\n\\n      <mat-tab label=\\\"{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LANGUAGE_EN' | translate}}\\\">\\n        <div *ngIf=\\\"applicationFormItem.type ==='HEADING' ||\\n                        applicationFormItem.type === 'HTML_COMMENT'\\\">\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 font-weight-bold m-auto\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.CONTENT' | translate}}:</span>\\n            <mat-form-field class=\\\"w-75\\\">\\n              <textarea matInput [cdkTextareaAutosize]=\\\"true\\\" [(ngModel)]=\\\"applicationFormItem.i18n['en'].label\\\"></textarea>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <span class=\\\"w-75 text-muted font-italic\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.CONTENT_DESCRIPTION' | translate}}\\n            </span>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"applicationFormItem.type === 'TEXTFIELD' ||\\n                        applicationFormItem.type === 'FROM_FEDERATION_HIDDEN' ||\\n                        applicationFormItem.type === 'FROM_FEDERATION_SHOW' ||\\n                        applicationFormItem.type === 'VALIDATED_EMAIL' ||\\n                        applicationFormItem.type === 'USERNAME' ||\\n                        applicationFormItem.type === 'PASSWORD' ||\\n                        applicationFormItem.type === 'RADIO' ||\\n                        applicationFormItem.type === 'TEXTAREA' ||\\n                        applicationFormItem.type === 'COMBOBOX' ||\\n                        applicationFormItem.type === 'CHECKBOX' ||\\n                        applicationFormItem.type === 'TIMEZONE' ||\\n                        applicationFormItem.type === 'SELECTIONBOX'\\\">\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 font-weight-bold m-auto\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL' | translate}}:</span>\\n            <mat-form-field class=\\\"w-75\\\">\\n              <textarea matInput [(ngModel)]=\\\"applicationFormItem.i18n['en'].label\\\"></textarea>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <span class=\\\"w-75 text-muted font-italic\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL_DESCRIPTION' | translate}}\\n            </span>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 font-weight-bold m-auto\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.HELP' | translate}}:</span>\\n            <mat-form-field class=\\\"w-75\\\">\\n              <textarea matInput [(ngModel)]=\\\"applicationFormItem.i18n['en'].help\\\"></textarea>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <span class=\\\"w-75 text-muted font-italic\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.HELP_DESCRIPTION' | translate}}\\n            </span>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 font-weight-bold m-auto\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.ERROR' | translate}}:</span>\\n            <mat-form-field class=\\\"w-75\\\">\\n              <textarea matInput [(ngModel)]=\\\"applicationFormItem.i18n['en'].errorMessage\\\"></textarea>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <span class=\\\"w-75 text-muted font-italic\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.ERROR_DESCRIPTION' | translate}}\\n            </span>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"applicationFormItem.type === 'SUBMIT_BUTTON' ||\\n                        applicationFormItem.type === 'AUTO_SUBMIT_BUTTON'\\\">\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 font-weight-bold m-auto\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL' | translate}}:</span>\\n            <mat-form-field class=\\\"w-75\\\">\\n              <textarea matInput [(ngModel)]=\\\"applicationFormItem.i18n['en'].label\\\"></textarea>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <span class=\\\"w-75 text-muted font-italic\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL_BUTTON_DESCRIPTION' | translate}}\\n            </span>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"applicationFormItem.type === 'RADIO' ||\\n                    applicationFormItem.type === 'COMBOBOX' ||\\n                    applicationFormItem.type === 'CHECKBOX' ||\\n                    applicationFormItem.type === 'SELECTIONBOX'\\\">\\n          <div class=\\\"font-weight-bold\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.OPTIONS' | translate}}:</div>\\n          <div class=\\\"text-muted font-italic\\\">\\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.OPTIONS_DESCRIPTION' | translate}}\\n          </div>\\n\\n          <div class=\\\"d-flex mt-2 mb-2\\\">\\n            <button\\n              mat-stroked-button\\n              class=\\\"ml-auto mr-2\\\"\\n              (click)=\\\"sortEnOptionsAZ()\\\">\\n              <i class=\\\"material-icons\\\">arrow_downward</i>\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SORT_BY_LABEL_AZ' | translate}}\\n            </button>\\n\\n            <button\\n              mat-stroked-button\\n              class=\\\"mr-auto\\\"\\n              (click)=\\\"sortEnOptionsZA()\\\">\\n              <i class=\\\"material-icons\\\">arrow_upward</i>\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SORT_BY_LABEL_ZA' | translate}}\\n            </button>\\n          </div>\\n\\n          <div *ngFor=\\\"let option of optionsEn\\\">\\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.VALUE' | translate}}:\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"option[0]\\\">\\n            </mat-form-field>\\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL' | translate}}:\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"option[1]\\\">\\n            </mat-form-field>\\n          </div>\\n\\n\\n          <button\\n            mat-flat-button\\n            color=\\\"accent\\\"\\n            class=\\\"mr-2\\\"\\n            (click)=\\\"addEnOption()\\\">\\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.ADD_OPTION' | translate}}\\n          </button>\\n        </div>\\n\\n      </mat-tab>\\n\\n      <mat-tab label=\\\"{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LANGUAGE_CS' | translate}}\\\">\\n        <div *ngIf=\\\"applicationFormItem.type ==='HEADING' ||\\n                        applicationFormItem.type === 'HTML_COMMENT'\\\">\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 font-weight-bold m-auto\\\" >{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.CONTENT' | translate}}:</span>\\n            <mat-form-field class=\\\"w-75\\\">\\n              <textarea [cdkTextareaAutosize]=\\\"true\\\" matInput [(ngModel)]=\\\"applicationFormItem.i18n['cs'].label\\\"></textarea>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <span class=\\\"w-75 text-muted font-italic\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.CONTENT_DESCRIPTION' | translate}}\\n            </span>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"applicationFormItem.type === 'TEXTFIELD' ||\\n                        applicationFormItem.type === 'FROM_FEDERATION_HIDDEN' ||\\n                        applicationFormItem.type === 'FROM_FEDERATION_SHOW' ||\\n                        applicationFormItem.type === 'VALIDATED_EMAIL' ||\\n                        applicationFormItem.type === 'USERNAME' ||\\n                        applicationFormItem.type === 'PASSWORD' ||\\n                        applicationFormItem.type === 'RADIO' ||\\n                        applicationFormItem.type === 'TEXTAREA' ||\\n                        applicationFormItem.type === 'COMBOBOX' ||\\n                        applicationFormItem.type === 'CHECKBOX' ||\\n                        applicationFormItem.type === 'TIMEZONE' ||\\n                        applicationFormItem.type === 'SELECTIONBOX'\\\">\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 font-weight-bold m-auto\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL' | translate}}:</span>\\n            <mat-form-field class=\\\"w-75\\\">\\n              <textarea matInput [(ngModel)]=\\\"applicationFormItem.i18n['cs'].label\\\"></textarea>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <span class=\\\"w-75 text-muted font-italic\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL_DESCRIPTION' | translate}}\\n            </span>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 font-weight-bold m-auto\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.HELP' | translate}}:</span>\\n            <mat-form-field class=\\\"w-75\\\">\\n              <textarea matInput [(ngModel)]=\\\"applicationFormItem.i18n['cs'].help\\\"></textarea>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <span class=\\\"w-75 text-muted font-italic\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.HELP_DESCRIPTION' | translate}}\\n            </span>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 font-weight-bold m-auto\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.ERROR' | translate}}:</span>\\n            <mat-form-field class=\\\"w-75\\\">\\n              <textarea matInput [(ngModel)]=\\\"applicationFormItem.i18n['cs'].errorMessage\\\"></textarea>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <span class=\\\"w-75 text-muted font-italic\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.ERROR_DESCRIPTION' | translate}}\\n            </span>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"applicationFormItem.type === 'SUBMIT_BUTTON' ||\\n                        applicationFormItem.type === 'AUTO_SUBMIT_BUTTON'\\\">\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25 font-weight-bold m-auto\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL' | translate}}:</span>\\n            <mat-form-field class=\\\"w-75\\\">\\n              <textarea matInput [(ngModel)]=\\\"applicationFormItem.i18n['cs'].label\\\"></textarea>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"d-flex\\\">\\n            <span class=\\\"w-25\\\"></span>\\n            <span class=\\\"w-75 text-muted font-italic\\\">\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL_BUTTON_DESCRIPTION' | translate}}\\n            </span>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"applicationFormItem.type === 'RADIO' ||\\n                    applicationFormItem.type === 'COMBOBOX' ||\\n                    applicationFormItem.type === 'CHECKBOX' ||\\n                    applicationFormItem.type === 'SELECTIONBOX'\\\">\\n          <div class=\\\"font-weight-bold\\\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.OPTIONS' | translate}}:</div>\\n          <div class=\\\"text-muted font-italic\\\">\\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.OPTIONS_DESCRIPTION' | translate}}\\n          </div>\\n\\n          <div class=\\\"d-flex mt-2 mb-2\\\">\\n            <button\\n              mat-stroked-button\\n              class=\\\"ml-auto mr-2\\\"\\n              (click)=\\\"sortCsOptionsAZ()\\\">\\n              <i class=\\\"material-icons\\\">arrow_downward</i>\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SORT_BY_LABEL_AZ' | translate}}\\n            </button>\\n\\n            <button\\n              mat-stroked-button\\n              class=\\\"mr-auto\\\"\\n              (click)=\\\"sortCsOptionsZA()\\\">\\n              <i class=\\\"material-icons\\\">arrow_upward</i>\\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SORT_BY_LABEL_ZA' | translate}}\\n            </button>\\n          </div>\\n\\n          <div *ngFor=\\\"let option of optionsCs\\\">\\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.VALUE' | translate}}:\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"option[0]\\\">\\n            </mat-form-field>\\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL' | translate}}:\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"option[1]\\\">\\n            </mat-form-field>\\n          </div>\\n\\n\\n          <button\\n            mat-flat-button\\n            color=\\\"accent\\\"\\n            class=\\\"mr-2\\\"\\n            (click)=\\\"addCsOption()\\\">\\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.ADD_OPTION' | translate}}\\n          </button>\\n        </div>\\n\\n      </mat-tab>\\n    </mat-tab-group>\\n\\n\\n  </div>\\n  <div class=\\\"flex-grow-1\\\"></div>\\n  <div class=\\\"d-flex mt-auto\\\" mat-dialog-actions>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-auto mt-auto\\\"\\n      (click)=\\\"cancel()\\\">\\n      {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.CANCEL_BUTTON' | translate}}\\n    </button>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-2 mt-auto\\\"\\n      color=\\\"accent\\\"\\n      (click)=\\\"submit()\\\">\\n      {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SUBMIT_BUTTON' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.NOTIFICATIONS_EDIT_FOOTER.TITLE' | translate}}</h1>\\n<div mat-dialog-content class=\\\"dialog-container\\\">\\n  <div>\\n    {{'DIALOGS.NOTIFICATIONS_EDIT_FOOTER.LABEL' | translate}}:\\n  </div>\\n\\n  <mat-form-field>\\n    <textarea matInput [cdkTextareaAutosize]=\\\"true\\\" [(ngModel)]=\\\"mailFooter\\\"></textarea>\\n  </mat-form-field>\\n\\n  <div class=\\\"mt-2 font-italic text-muted\\\">{{'DIALOGS.NOTIFICATIONS_EDIT_FOOTER.DESCRIPTION' | translate}}</div>\\n</div>\\n\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"cancel()\\\">\\n    {{'DIALOGS.NOTIFICATIONS_EDIT_FOOTER.CANCEL_BUTTON' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"accent\\\"\\n    (click)=\\\"submit()\\\">\\n    {{'DIALOGS.NOTIFICATIONS_EDIT_FOOTER.SUBMIT_BUTTON' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.INVITE_MEMBER.TITLE' | translate}}</h1>\\n<div mat-dialog-content>\\n  <div class=\\\"font-italic\\\">\\n    {{'DIALOGS.INVITE_MEMBER.DESCRIPTION' | translate}}\\n  </div>\\n\\n  <mat-form-field class=\\\"w-100\\\">\\n    <input\\n      matInput\\n      placeholder=\\\"{{'DIALOGS.INVITE_MEMBER.NAME' | translate}}\\\"\\n      [(ngModel)]=\\\"name\\\" required>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"w-100\\\">\\n    <textarea\\n      matInput\\n      placeholder=\\\"{{'DIALOGS.INVITE_MEMBER.EMAIL' | translate}}\\\"\\n      [formControl]=\\\"emailForm\\\" required ></textarea>\\n    <mat-error *ngIf=\\\"emailForm.invalid\\\">{{'DIALOGS.INVITE_MEMBER.EMAIL_ERROR' | translate}}</mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"w-100\\\">\\n    <mat-label>{{'DIALOGS.INVITE_MEMBER.LANGUAGE' | translate}}</mat-label>\\n    <mat-select [(value)]=\\\"language\\\">\\n      <mat-option value=\\\"en\\\">{{'DIALOGS.INVITE_MEMBER.LANGUAGE_ENGLISH' | translate}}</mat-option>\\n      <mat-option value=\\\"cz\\\">{{'DIALOGS.INVITE_MEMBER.LANGUAGE_CZECH' | translate}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n</div>\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.INVITE_MEMBER.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"accent\\\"\\n    [disabled]=\\\"emailForm.invalid || name.length == 0\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    {{'DIALOGS.INVITE_MEMBER.INVITE' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<div class=\\\"{{data.theme}}\\\">\\n  <h1 mat-dialog-title>{{'DIALOGS.MOVE_GROUP.TITLE' | translate}}{{this.data.group.name}}</h1>\\n  <div mat-dialog-content>\\n    <p>\\n      {{'DIALOGS.MOVE_GROUP.INFO' | translate}}\\n    </p>\\n    <mat-radio-group [(ngModel)]=\\\"moveOption\\\">\\n      <mat-radio-button\\n        color=\\\"primary\\\"\\n        value=\\\"toRoot\\\"\\n        class=\\\"move-options\\\"\\n        [disabled]=\\\"toRootOptionDisabled\\\">\\n        {{'DIALOGS.MOVE_GROUP.NO_GROUP' | translate}}\\n      </mat-radio-button>\\n      <mat-radio-button\\n        value=\\\"toGroup\\\"\\n        color=\\\"primary\\\"\\n        [disabled]=\\\"toGroupOptionDisabled\\\">\\n        {{'DIALOGS.MOVE_GROUP.TO_GROUP' | translate}}\\n      </mat-radio-button>\\n    </mat-radio-group>\\n    <mat-form-field [@openClose]=\\\"moveOption === 'toGroup' ? 'open' : 'closed'\\\" class=\\\"w-100 mt-2\\\">\\n      <input\\n        matInput\\n        placeholder=\\\"{{'DIALOGS.MOVE_GROUP.GROUP_SELECT' | translate}}\\\"\\n        [matAutocomplete]=\\\"groupSelectAutocomplete\\\"\\n        [formControl]=\\\"otherGroupsCtrl\\\">\\n      <!--suppress AngularInvalidExpressionResultType -->\\n      <mat-autocomplete\\n        #groupSelectAutocomplete=\\\"matAutocomplete\\\"\\n        [displayWith]=\\\"displayFn\\\">\\n        <mat-option *ngFor=\\\"let group of filteredGroups | async\\\" [value]=\\\"group\\\">\\n          <span>{{group.name}}</span>\\n        </mat-option>\\n      </mat-autocomplete>\\n    </mat-form-field>\\n  </div>\\n  <mat-spinner *ngIf=\\\"loading\\\" class=\\\"ml-auto mr-auto\\\">\\n  </mat-spinner>\\n  <div mat-dialog-actions>\\n    <button\\n      mat-flat-button\\n      (click)=\\\"close()\\\"\\n      class=\\\"ml-auto\\\">\\n      {{'DIALOGS.MOVE_GROUP.CANCEL' | translate}}\\n    </button>\\n    <button\\n      [disabled]=\\\"!this.otherGroupsCtrl.value && moveOption !== 'toRoot' && !loading\\\"\\n      mat-flat-button\\n      class=\\\"ml-2\\\"\\n      (click)=\\\"confirm()\\\"\\n      color=\\\"accent\\\">\\n      {{'DIALOGS.MOVE_GROUP.CONFIRM' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.NOTIFICATIONS_COPY_MAILS.TITLE' | translate}}</h1>\\n<div mat-dialog-content class=\\\"dialog-container\\\">\\n\\n  <div class=\\\"mb-2 font-italic\\\">{{'DIALOGS.NOTIFICATIONS_COPY_MAILS.DESCRIPTION' | translate}}</div>\\n  {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.SOURCE_VO' | translate}}:\\n\\n  <mat-form-field>\\n    <input matInput\\n           type=\\\"text\\\"\\n           [formControl]=\\\"voControl\\\"\\n           [matAutocomplete]=\\\"auto\\\">\\n    <mat-error *ngIf=\\\"voControl.hasError('invalidVo')\\\">\\n      {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.ERROR_INVALID_VO' | translate}}\\n    </mat-error>\\n    <mat-error *ngIf=\\\"voControl.hasError('required')\\\">\\n      {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.ERROR_NO_VO' | translate}}\\n    </mat-error>\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\n      <mat-option *ngFor=\\\"let vo of filteredVos | async\\\" [value]=\\\"vo\\\">\\n        {{vo.name}}\\n      </mat-option>\\n    </mat-autocomplete>\\n  </mat-form-field>\\n\\n  {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.SOURCE_GROUP' | translate}}:\\n\\n  <mat-form-field>\\n    <input matInput\\n           type=\\\"text\\\"\\n           [formControl]=\\\"groupControl\\\"\\n           [matAutocomplete]=\\\"group\\\"\\n           (focus)=\\\"getGroups()\\\">\\n    <mat-error *ngIf=\\\"groupControl.hasError('invalidGroup')\\\">\\n      {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.ERROR_INVALID_GROUP' | translate}}\\n    </mat-error>\\n    <mat-error *ngIf=\\\"groupControl.hasError('required')\\\">\\n      {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.ERROR_NO_GROUP' | translate}}\\n    </mat-error>\\n    <mat-autocomplete #group=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\n      <mat-option *ngFor=\\\"let group of filteredGroups | async\\\" [value]=\\\"group\\\">\\n        {{group.name}}\\n      </mat-option>\\n    </mat-autocomplete>\\n  </mat-form-field>\\n\\n</div>\\n\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"cancel()\\\">\\n    {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.CANCEL_BUTTON' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"accent\\\"\\n    [disabled]=\\\"voControl.invalid || groupControl.invalid\\\"\\n    (click)=\\\"submit()\\\">\\n    {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.SUBMIT_BUTTON' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.REMOVE_GROUP_FROM_RESOURCE.TITLE' | translate}}</h1>\\n<div mat-dialog-content>\\n  <p>\\n    {{'DIALOGS.REMOVE_GROUP_FROM_RESOURCE.DESCRIPTION' | translate}}\\n  </p>\\n\\n  <div class=\\\"font-weight-bold\\\">\\n    {{'DIALOGS.REMOVE_GROUP_FROM_RESOURCE.ASK' | translate}}\\n  </div>\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"w-100\\\">\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let group\\\"> {{group.name}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"font-weight-bolder\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let group; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n</div>\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.REMOVE_GROUP_FROM_RESOURCE.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"warn\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    {{'DIALOGS.REMOVE_GROUP_FROM_RESOURCE.DELETE' | translate}}\\n  </button>\\n</div>\\n\\n\"","export default \"<div class=\\\"{{theme}}\\\">\\n\\n  <h1 mat-dialog-title>{{'DIALOGS.REMOVE_GROUPS.TITLE' | translate}}</h1>\\n  <div mat-dialog-content>\\n    <p>\\n      {{'DIALOGS.REMOVE_GROUPS.DESCRIPTION' | translate}}\\n    </p>\\n\\n    <div class=\\\"font-weight-bold\\\">\\n      {{'DIALOGS.REMOVE_GROUPS.ASK' | translate}}\\n    </div>\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"w-100\\\">\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef></th>\\n        <td mat-cell *matCellDef=\\\"let group\\\"> {{group.name}}</td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"font-weight-bolder\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let group; columns: displayedColumns;\\\"></tr>\\n    </table>\\n\\n  </div>\\n  <div mat-dialog-actions>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-auto\\\"\\n      (click)=\\\"onCancel()\\\">\\n      {{'DIALOGS.REMOVE_GROUPS.CANCEL' | translate}}\\n    </button>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-2\\\"\\n      color=\\\"warn\\\"\\n      (click)=\\\"onSubmit()\\\">\\n      {{'DIALOGS.REMOVE_GROUPS.DELETE' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"{{theme}}\\\">\\n\\n  <h1 mat-dialog-title>{{'DIALOGS.REMOVE_MANAGERS.TITLE' | translate}}</h1>\\n  <div mat-dialog-content *ngIf=\\\"!loading\\\">\\n    <p>\\n      {{'DIALOGS.REMOVE_MANAGERS.DESCRIPTION' | translate}}\\n    </p>\\n\\n    <div class=\\\"font-weight-bold\\\">\\n      {{'DIALOGS.REMOVE_MANAGERS.ASK' | translate}}\\n    </div>\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"w-100\\\">\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef></th>\\n        <td mat-cell *matCellDef=\\\"let manager\\\"> {{manager.firstName}} {{manager.lastName}}</td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"font-weight-bolder\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let manager; columns: displayedColumns;\\\"></tr>\\n    </table>\\n\\n  </div>\\n  <mat-spinner *ngIf=\\\"loading\\\" class=\\\"mr-auto ml-auto\\\"></mat-spinner>\\n  <div mat-dialog-actions>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-auto\\\"\\n      (click)=\\\"onCancel()\\\">\\n      {{'DIALOGS.REMOVE_MANAGERS.CANCEL' | translate}}\\n    </button>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-2\\\"\\n      color=\\\"warn\\\"\\n      (click)=\\\"onSubmit()\\\">\\n      {{'DIALOGS.REMOVE_MANAGERS.DELETE' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.REMOVE_MEMBERS.TITLE' | translate}}</h1>\\n<div mat-dialog-content *ngIf=\\\"!loading\\\">\\n  <p>\\n    {{(!!data.groupId ? 'DIALOGS.REMOVE_MEMBERS.DESCRIPTION_GROUP' : 'DIALOGS.REMOVE_MEMBERS.DESCRIPTION') | translate}}\\n  </p>\\n\\n  <div class=\\\"font-weight-bold\\\">\\n    {{'DIALOGS.REMOVE_MEMBERS.ASK' | translate}}\\n  </div>\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"w-100\\\">\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let member\\\"> {{member.id}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let member\\\"> {{member.user | userFullName}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"font-weight-bolder\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let member; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n</div>\\n<mat-spinner class=\\\"mr-auto ml-auto\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n<div mat-dialog-actions *ngIf=\\\"!loading\\\">\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.DELETE_GROUP.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"warn\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    {{(!!data.groupId ? 'DIALOGS.REMOVE_MEMBERS.REMOVE_GROUP' : 'DIALOGS.REMOVE_MEMBERS.REMOVE') | translate}}\\n  </button>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.REMOVE_RESOURCES.TITLE' | translate}}</h1>\\n<mat-spinner *ngIf=\\\"loading\\\" class=\\\"ml-auto mr-auto\\\">\\n</mat-spinner>\\n<div mat-dialog-content *ngIf=\\\"!loading\\\">\\n  <p>\\n    {{'DIALOGS.REMOVE_RESOURCES.DESCRIPTION' | translate}}\\n  </p>\\n\\n  <div class=\\\"font-weight-bold\\\">\\n    {{'DIALOGS.REMOVE_RESOURCES.ASK' | translate}}\\n  </div>\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"w-100\\\">\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let resource\\\"> {{resource.name}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"font-weight-bolder\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let resource; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n</div>\\n<div mat-dialog-actions *ngIf=\\\"!loading\\\">\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.REMOVE_RESOURCES.CANCEL' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"warn\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    {{'DIALOGS.REMOVE_RESOURCES.DELETE' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.REMOVE_VO.TITLE' | translate}}</h1>\\n<div class=\\\"{{theme}}\\\">\\n  <mat-spinner *ngIf=\\\"loading\\\" class=\\\"ml-auto mr-auto\\\"></mat-spinner>\\n</div>\\n<div *ngIf=\\\"!loading\\\">\\n  <div mat-dialog-content class=\\\"{{theme}}\\\">\\n    <p>\\n      {{'DIALOGS.REMOVE_VO.DESCRIPTION' | translate}}\\n    </p>\\n    <div class=\\\"font-weight-bold\\\">\\n      {{'DIALOGS.REMOVE_VO.ASK' | translate}}\\n    </div>\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"w-100\\\">\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef></th>\\n        <td mat-cell *matCellDef=\\\"let vo\\\"> {{vo.name}} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"font-weight-bolder\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let vo; columns: displayedColumns;\\\"></tr>\\n    </table>\\n  </div>\\n  <div class=\\\"mt-2\\\">\\n    <mat-checkbox class=\\\"align-content-center\\\" (change)=\\\"force = !force\\\">\\n      {{'DIALOGS.REMOVE_VO.FORCE' | translate}}\\n    </mat-checkbox>\\n    <app-alert *ngIf=\\\"force\\\" color=\\\"warn\\\">{{'DIALOGS.REMOVE_VO.FORCE_WARNING' | translate}}</app-alert>\\n  </div>\\n  <div mat-dialog-actions>\\n\\n    <button\\n      mat-stroked-button\\n      class=\\\"ml-auto\\\"\\n      (click)=\\\"onCancel()\\\">\\n      {{'DIALOGS.DELETE_GROUP.CANCEL' | translate}}\\n    </button>\\n    <button\\n      mat-flat-button\\n      class=\\\"ml-2\\\"\\n      color=\\\"warn\\\"\\n      (click)=\\\"onSubmit()\\\">\\n      {{'DIALOGS.DELETE_GROUP.DELETE' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"  <h1 mat-dialog-title>{{'DIALOGS.NOTIFICATION_LIST.TITLE' | translate}}</h1>\\n  <div *ngIf=\\\"notifications.length !== 0\\\" class=\\\"hide-horizontal-scrollbar\\\">\\n    <cdk-virtual-scroll-viewport itemSize=\\\"50\\\" class=\\\"viewport\\\">\\n      <div *cdkVirtualFor=\\\"let data of notifications\\\" class=\\\"mb-1\\\">\\n        <app-notification [data]=\\\"data\\\" [hideShadow]=\\\"true\\\">\\n        </app-notification>\\n      </div>\\n    </cdk-virtual-scroll-viewport>\\n  </div>\\n  <app-alert color=\\\"warn\\\"\\n             *ngIf=\\\"notifications.length === 0\\\">{{'DIALOGS.NOTIFICATION_LIST.NO_NOTIFICATIONS_ALERT'|translate}}</app-alert>\\n\\n  <div mat-dialog-actions>\\n    <button\\n      mat-stroked-button\\n      class=\\\"ml-auto\\\"\\n      (click)=\\\"onCancel()\\\">\\n      {{'DIALOGS.NOTIFICATION_LIST.CANCEL' | translate}}\\n    </button>\\n  </div>\\n\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.UPDATE_APPLICATION_FORM.TITLE' | translate}}</h1>\\n<div mat-dialog-content class=\\\"dialog-container\\\">\\n\\n  <div>{{'DIALOGS.UPDATE_APPLICATION_FORM.MODULE_NAME' | translate}}</div>\\n  <mat-form-field>\\n    <input\\n      matInput\\n      [(ngModel)]=\\\"moduleName\\\">\\n  </mat-form-field>\\n\\n  <div>\\n    {{'DIALOGS.UPDATE_APPLICATION_FORM.INITIAL' | translate}}:\\n  </div>\\n  <mat-form-field class=\\\"w-100\\\">\\n    <mat-select [(value)]=\\\"initialState\\\" disableOptionCentering>\\n      <mat-option value=auto>{{'DIALOGS.UPDATE_APPLICATION_FORM.AUTOMATIC' | translate}}</mat-option>\\n      <mat-option value=manual>{{'DIALOGS.UPDATE_APPLICATION_FORM.MANUAL' | translate}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n\\n  <div>\\n    {{'DIALOGS.UPDATE_APPLICATION_FORM.EXTENSION' | translate}}:\\n  </div>\\n  <mat-form-field class=\\\"w-100\\\">\\n    <mat-select [(value)]=\\\"extensionState\\\" disableOptionCentering>\\n      <mat-option value=auto>{{'DIALOGS.UPDATE_APPLICATION_FORM.AUTOMATIC' | translate}}</mat-option>\\n      <mat-option value=manual>{{'DIALOGS.UPDATE_APPLICATION_FORM.MANUAL' | translate}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n</div>\\n<div mat-dialog-actions>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-auto\\\"\\n    (click)=\\\"onCancel()\\\">\\n    {{'DIALOGS.UPDATE_APPLICATION_FORM.CANCEL_BUTTON' | translate}}\\n  </button>\\n  <button\\n    mat-flat-button\\n    class=\\\"ml-2\\\"\\n    color=\\\"accent\\\"\\n    (click)=\\\"submit()\\\">\\n    {{'DIALOGS.UPDATE_APPLICATION_FORM.SUBMIT_BUTTON' | translate}}\\n  </button>\\n</div>\\n\"","export default \"<button mat-icon-button [mat-menu-trigger-for]=\\\"groupMenu\\\" [disabled]=\\\"disabled\\\">\\n  <mat-icon>more_vert</mat-icon>\\n</button>\\n<mat-menu #groupMenu=\\\"matMenu\\\">\\n  <button mat-menu-item (click)=\\\"onMoveGroup()\\\">\\n    <mat-icon>arrow_right_alt</mat-icon>\\n    <span>{{'VO_DETAIL.GROUPS.MENU_MOVE' | translate}}</span>\\n  </button>\\n  <button mat-menu-item>\\n    <mat-icon>text_format</mat-icon>\\n    <span>{{'VO_DETAIL.GROUPS.MENU_RENAME' | translate}}</span>\\n  </button>\\n</mat-menu>\\n\"","export default \"<div class=\\\"card mt-2\\\" [class.hide-table]=\\\"exporting\\\" [hidden]=\\\"groups.length === 0 || dataSource.filteredData.length === 0\\\">\\n  <div class=\\\"card-body\\\">\\n    <app-table-options [exporter]=\\\"exporter\\\" (start)=\\\"exporting = true\\\" (end)=\\\"exporting = false\\\"></app-table-options>\\n\\n    <table mat-table matTableExporter [dataSource]=\\\"dataSource\\\" #exporter=\\\"matTableExporter\\\" matSort matSortActive=\\\"id\\\" matSortDirection=\\\"asc\\\" matSortDisableClear\\n           class=\\\"w-100\\\">\\n      <ng-container matColumnDef=\\\"select\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox color=\\\"primary\\\"\\n                        (change)=\\\"$event ? masterToggle() : null\\\"\\n                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                        [aria-label]=\\\"checkboxLabel()\\\">\\n          </mat-checkbox>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"static-column-size\\\">\\n          <mat-checkbox color=\\\"primary\\\"\\n                        [disabled]=\\\"row.name === 'members' && disableMembers\\\"\\n                        (click)=\\\"$event.stopPropagation()\\\"\\n                        (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                        [checked]=\\\"selection.isSelected(row)\\\"\\n                        [aria-label]=\\\"checkboxLabel(row)\\\">\\n          </mat-checkbox>\\n        </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef\\n            mat-sort-header>{{'SHARED.COMPONENTS.GROUPS_LIST.TABLE_GROUP_ID' | translate}}</th>\\n        <td mat-cell class=\\\"static-column-size\\\" *matCellDef=\\\"let group\\\">{{group.id}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"vo\\\">\\n        <th mat-header-cell *matHeaderCellDef\\n            mat-sort-header>{{'SHARED.COMPONENTS.GROUPS_LIST.TABLE_VO_NAME' | translate}}</th>\\n        <td mat-cell class=\\\"static-column-size\\\" *matCellDef=\\\"let group\\\">{{group.voId}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef\\n            mat-sort-header>{{'SHARED.COMPONENTS.GROUPS_LIST.TABLE_GROUP_NAME' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let group\\\"\\n            [routerLink]=\\\"inDialog ? null : ['/organizations', group.voId, 'groups', group.id]\\\">{{group.name}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"description\\\">\\n        <th mat-header-cell *matHeaderCellDef\\n            mat-sort-header>{{'SHARED.COMPONENTS.GROUPS_LIST.TABLE_GROUP_DESCRIPTION' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let group\\\"\\n            [routerLink]=\\\"inDialog ? null : ['/organizations', group.voId, 'groups', group.id]\\\">{{group.description}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"menu\\\">\\n        <th mat-header-cell *matHeaderCellDef></th>\\n        <td mat-cell *matCellDef=\\\"let group\\\">\\n          <app-group-menu\\n            [disabled]=\\\"group.name === 'members'\\\"\\n            (moveGroup)=\\\"onMoveGroup(group)\\\"\\n            [group]=\\\"group\\\">\\n          </app-group-menu>\\n        </td>\\n      </ng-container>\\n\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr\\n        mat-row\\n        *matRowDef=\\\"let group; columns: displayedColumns;\\\"\\n        class=\\\"dark-hover-list-item\\\">\\n      </tr>\\n    </table>\\n    <mat-paginator [length]=\\\"this.groups.length\\\" [pageSize]=\\\"this.pageSize\\\" [pageSizeOptions]=\\\"[5,10,25]\\\"></mat-paginator>\\n  </div>\\n</div>\\n\\n<mat-spinner *ngIf=\\\"exporting\\\" class=\\\"ml-auto mr-auto\\\"></mat-spinner>\\n\\n<app-alert *ngIf=\\\"groups.length === 0\\\" color=\\\"warn\\\">\\n  {{'VO_DETAIL.GROUPS.NO_GROUPS' | translate}}\\n</app-alert>\\n\\n<app-alert *ngIf=\\\"dataSource.filteredData.length === 0 && groups.length !== 0\\\" color=\\\"warn\\\">\\n  {{'SHARED.COMPONENTS.NO_FILTER_RESULTS_ALERT' | translate}}\\n</app-alert>\\n\"","export default \"<mat-form-field class=\\\"filter-field ml-3\\\">\\n  <label>\\n    <input matInput [formControl]=\\\"formControl\\\"\\n           placeholder=\\\"{{placeholder | translate}}\\\">\\n  </label>\\n</mat-form-field>\\n\"","export default \"<div>\\n  <h1 class=\\\"page-subtitle\\\">\\n    {{'SHARED.COMPONENTS.MANAGERS_PAGE.TITLE' | translate}}\\n  </h1>\\n  <app-refresh-button (refresh)=\\\"changeUser()\\\"></app-refresh-button>\\n  <button mat-flat-button color=\\\"accent\\\" class=\\\"mr-2\\\" (click)=\\\"selected === 'user' ? addManager() : addGroup()\\\">\\n    {{'SHARED.COMPONENTS.MANAGERS_PAGE.ADD' | translate}}\\n  </button>\\n  <button mat-flat-button color=\\\"warn\\\" (click)=\\\"selected === 'user' ? removeManager() : removeGroup()\\\"\\n          [disabled]=\\\"selectionUsers.selected.length === 0 && selectionGroups.selected.length === 0\\\">\\n    {{'SHARED.COMPONENTS.MANAGERS_PAGE.REMOVE' | translate}}\\n  </button>\\n\\n  <mat-form-field class=\\\"ml-2\\\">\\n    <mat-label>{{'SHARED.COMPONENTS.MANAGERS_PAGE.SELECT_MODE' | translate}}</mat-label>\\n    <mat-select [(value)]=\\\"selected\\\" (selectionChange)=\\\"changeUser()\\\">\\n      <mat-option value=\\\"user\\\">{{'SHARED.COMPONENTS.MANAGERS_PAGE.USER' | translate}}</mat-option>\\n      <mat-option value=\\\"group\\\">{{'SHARED.COMPONENTS.MANAGERS_PAGE.GROUP' | translate}} </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"ml-2\\\">\\n    <mat-label>{{'SHARED.COMPONENTS.MANAGERS_PAGE.SELECT_ROLE' | translate}}</mat-label>\\n    <mat-select [(value)]=\\\"selectedRole\\\" (selectionChange)=\\\"changeUser()\\\">\\n      <mat-option *ngFor=\\\"let role of availableRoles\\\" [value]=\\\"role\\\">{{role | displayedRole}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-spinner *ngIf=\\\"loading\\\" class=\\\"ml-auto mr-auto\\\"></mat-spinner>\\n  <div *ngIf=\\\"!loading\\\">\\n\\n    <app-alert *ngIf=\\\"managers && managers.length == 0 && selected === 'user'\\\" color=\\\"warn\\\">\\n      {{'SHARED.COMPONENTS.MANAGERS_PAGE.NO_MANAGERS' | translate}}\\n    </app-alert>\\n    <app-users-list\\n      *ngIf=\\\"managers && managers.length > 0 && selected === 'user'\\\"\\n      [users]=\\\"managers\\\"\\n      [selection]=\\\"selectionUsers\\\">\\n    </app-users-list>\\n\\n    <mat-spinner class=\\\"ml-auto mr-auto\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n    <app-groups-list\\n      *ngIf=\\\"groups && selected === 'group' && !loading\\\"\\n      [hideColumns]=\\\"['menu', 'vo']\\\"\\n      [groups]=\\\"groups\\\"\\n      [selection]=\\\"selectionGroups\\\"\\n      [disableMembers]=\\\"false\\\">\\n    </app-groups-list>\\n  </div>\\n\\n</div>\\n\"","export default \"<div class=\\\"card mt-2\\\" [class.hide-table]=\\\"exporting\\\">\\n  <div class=\\\"card-body table-theme\\\" *ngIf=\\\"members !== null && members !== undefined\\\">\\n    <app-table-options [exporter]=\\\"exporter\\\" (start)=\\\"exporting = true\\\" (end)=\\\"exporting = false\\\"></app-table-options>\\n    <table\\n      class=\\\"w-100\\\"\\n      mat-table\\n      matTableExporter\\n      [dataSource]=\\\"dataSource\\\"\\n      #exporter=\\\"matTableExporter\\\"\\n      matSort\\n      matSortActive=\\\"fullName\\\"\\n      matSortDirection=\\\"asc\\\"\\n      matSortDisableClear>\\n      <ng-container matColumnDef=\\\"checkbox\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox color=\\\"primary\\\"\\n                        (change)=\\\"$event ? masterToggle() : null\\\"\\n                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                        [aria-label]=\\\"checkboxLabel()\\\">\\n          </mat-checkbox>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let memberCandidate\\\" class=\\\"static-column-size\\\">\\n          <mat-checkbox color=\\\"primary\\\"\\n                        (click)=\\\"$event.stopPropagation()\\\"\\n                        (change)=\\\"$event ? selection.toggle(memberCandidate) : null\\\"\\n                        [checked]=\\\"selection.isSelected(memberCandidate)\\\"\\n                        [aria-label]=\\\"checkboxLabel(memberCandidate)\\\">\\n          </mat-checkbox>\\n        </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"fullName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBERS_CANDIDATES_LIST.NAME' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let memberCandidate\\\">{{memberCandidate.richUser | userFullName}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"voExtSource\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBERS_CANDIDATES_LIST.ORGANIZATION' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let memberCandidate\\\">{{memberCandidate.richUser | userVo}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"email\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBERS_CANDIDATES_LIST.EMAIL' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let memberCandidate\\\">{{memberCandidate | memberCandidateEmail}}</td>\\n      </ng-container>\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr\\n        mat-row\\n        *matRowDef=\\\"let memberCandidate; columns: displayedColumns;\\\">\\n      </tr>\\n    </table>\\n    <mat-paginator [length]=\\\"this.members.length\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5,10,25]\\\"></mat-paginator>\\n  </div>\\n</div>\\n\\n<mat-spinner *ngIf=\\\"exporting\\\" class=\\\"ml-auto mr-auto\\\"></mat-spinner>\\n\"","export default \"<div *ngIf=\\\"size === 'small'\\\" class=\\\"items-container\\\">\\n  <a *ngFor=\\\"let item of items\\\" class=\\\"item-itself {{item.style}}\\\" [routerLink]=\\\"item.url\\\">\\n    <img src=\\\"assets/img/PerunWebImages/{{item.icon}}\\\" alt=\\\"{{item.label}}\\\">\\n    {{item.label | translate}}\\n  </a>\\n</div>\\n\"","export default \"<h1 mat-dialog-title>{{data.title}}</h1>\\n<div mat-dialog-content>\\n{{data.description}}\\n</div>\\n<div mat-dialog-actions>\\n  <div class=\\\"ml-auto\\\">\\n    <button\\n      [hidden]=\\\"data.type !== 'error'\\\"\\n      mat-button\\n      (click)=\\\"onBugReportClick()\\\">\\n      {{'NOTIFICATOR.NOTIFICATION.DIALOG_BUG_REPORT' | translate}}\\n    </button>\\n    <button\\n      class=\\\"ml-2\\\"\\n      autofocus\\n      mat-button\\n      (click)=\\\"onCloseClick()\\\">\\n      {{'NOTIFICATOR.NOTIFICATION.DIALOG_CLOSE' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"notification {{hideShadow ? '' : 'mat-elevation-z7'}}\\\"\\n     [class.error]=\\\"data.type === 'error'\\\"\\n     [class.success]=\\\"data.type === 'success'\\\">\\n  <div class=\\\"notification-container\\\">\\n    <div *ngIf=\\\"data.icon !== null\\\" class=\\\"notification-icon\\\">\\n      <mat-icon>{{data.icon}}</mat-icon>\\n    </div>\\n    <div class=\\\"notification-text\\\">\\n      {{data.title}}\\n    </div>\\n    <div class=\\\"notification-action\\\" (click)=\\\"doAction()\\\" [hidden]=\\\"alreadyPressed\\\">\\n      {{data.actionText}}\\n    </div>\\n  </div>\\n<!--  <button mat-icon-button>-->\\n<!--    <mat-icon class=\\\"notification-icon\\\">close</mat-icon>-->\\n<!--  </button>-->\\n</div>\\n\"","export default \"<div id=\\\"notificator\\\"\\n  [ngStyle]=\\\"{'top': getNotificatorTop()}\\\">\\n  <div *ngFor=\\\"let data of notifications\\\" @flyInOut>\\n    <app-notification  [data]=\\\"data\\\" [newNotification]=\\\"true\\\">\\n    </app-notification>\\n  </div>\\n</div>\\n\"","export default \"<button mat-stroked-button class=\\\"mr-2\\\" matTooltip=\\\"{{'SHARED.COMPONENTS.REFRESH_BUTTON.TOOLTIP' | translate}}\\\" [disabled]=\\\"disabled\\\" (click)=\\\"onClickbutton($event)\\\">\\n  <mat-icon svgIcon=\\\"{{!disabled ? 'refreshEnabled': 'refreshDisabled'}}\\\" class=\\\"center-icon\\\"></mat-icon>\\n</button>\\n\"","export default \"<h1 mat-dialog-title>{{'DIALOGS.REPORT_ISSUE.TITLE' | translate}}</h1>\\n<div mat-dialog-content class=\\\"dialog-container\\\">\\n  <mat-form-field>\\n    <mat-label>{{'DIALOGS.REPORT_ISSUE.SUBJECT' | translate}}</mat-label>\\n      <input\\n        matInput\\n        required\\n        type=\\\"text\\\"\\n        [(ngModel)]=\\\"subject\\\"\\n        #subjectModel=ngModel>\\n    <mat-error *ngIf=\\\"subjectModel.invalid\\\">{{'DIALOGS.REPORT_ISSUE.SUBJECT_ERROR' | translate}}</mat-error>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-label>{{'DIALOGS.REPORT_ISSUE.MESSAGE' | translate}}</mat-label>\\n    <textarea\\n      #messageModel=ngModel\\n      matInput\\n      required\\n      minlength=\\\"60\\\"\\n      placeholder=\\\"{{'DIALOGS.REPORT_ISSUE.MESSAGE_PLACEHOLDER' | translate}}\\\"\\n      [(ngModel)]=\\\"message\\\">\\n    </textarea>\\n    <mat-error *ngIf=\\\"messageModel.invalid\\\">{{'DIALOGS.REPORT_ISSUE.MESSAGE_ERROR' | translate}}</mat-error>\\n  </mat-form-field>\\n</div>\\n\\n<div mat-dialog-actions>\\n  <div class=\\\"ml-auto\\\">\\n    <button mat-button (click)=\\\"close()\\\">\\n      {{'DIALOGS.REPORT_ISSUE.CANCEL' | translate}}\\n    </button>\\n    <button\\n      (click)=\\\"sendBugReport()\\\"\\n      [disabled]=\\\"messageModel.invalid || subjectModel.invalid\\\"\\n      class=\\\"ml-2\\\"\\n      mat-flat-button\\n      color=\\\"accent\\\">\\n      {{'DIALOGS.REPORT_ISSUE.SEND' | translate}}\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card mt-3\\\" [class.hide-table]=\\\"exporting\\\" [hidden]=\\\"dataSource.filteredData.length === 0 || resources.length === 0\\\">\\n  <div class=\\\"card-body\\\">\\n    <app-table-options class=\\\"ml-auto\\\" [exporter]=\\\"exporter\\\" (start)=\\\"exporting = true\\\" (end)=\\\"exporting = false\\\"></app-table-options>\\n   <table mat-table matTableExporter [dataSource]=\\\"dataSource\\\" #exporter=\\\"matTableExporter\\\" matSort matSortActive=\\\"id\\\" matSortDirection=\\\"asc\\\" matSortDisableClear\\n           class=\\\"w-100\\\">\\n\\n      <ng-container matColumnDef=\\\"select\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox color=\\\"primary\\\"\\n                        (change)=\\\"$event ? masterToggle() : null\\\"\\n                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                        [aria-label]=\\\"checkboxLabel()\\\">\\n          </mat-checkbox>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let resource\\\" class=\\\"static-column-size\\\">\\n          <mat-checkbox color=\\\"primary\\\"\\n                        (click)=\\\"$event.stopPropagation()\\\"\\n                        (change)=\\\"$event ? selection.toggle(resource) : null\\\"\\n                        [checked]=\\\"selection.isSelected(resource)\\\"\\n                        [aria-label]=\\\"checkboxLabel(resource)\\\">\\n          </mat-checkbox>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef\\n            mat-sort-header>{{'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_RESOURCE_ID' | translate}}</th>\\n        <td mat-cell class=\\\"static-column-size\\\" *matCellDef=\\\"let resource\\\">{{resource.id}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef\\n            mat-sort-header>{{'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_RESOURCE_NAME' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let resource\\\">{{resource.name}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"facility\\\">\\n        <th mat-header-cell *matHeaderCellDef>{{'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_FACILITY_NAME' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let resource\\\">{{resource.facility.name}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"tags\\\">\\n        <th mat-header-cell *matHeaderCellDef>{{'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_RESOURCE_TAGS' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let resource\\\">{{resource.resourceTags | resourceTagsToString}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"description\\\">\\n        <th mat-header-cell *matHeaderCellDef\\n            mat-sort-header>{{'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_RESOURCE_DESCRIPTION' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let resource\\\">{{resource.description}}</td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr\\n        mat-row\\n        *matRowDef=\\\"let resource; columns: displayedColumns;\\\"\\n        [routerLink]=\\\"['/facilities', resource.facilityId, 'resources', resource.id]\\\"\\n        class=\\\"dark-hover-list-item\\\">\\n      </tr>\\n    </table>\\n    <mat-paginator [length]=\\\"this.resources.length\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5,10,25]\\\"></mat-paginator>\\n  </div>\\n</div>\\n\\n<mat-spinner *ngIf=\\\"exporting\\\" class=\\\"ml-auto mr-auto\\\"></mat-spinner>\\n\\n<app-alert *ngIf=\\\"dataSource.filteredData.length === 0 && resources.length !== 0\\\" color=\\\"warn\\\">\\n  {{'SHARED.COMPONENTS.NO_FILTER_RESULTS_ALERT' | translate}}\\n</app-alert>\\n\\n<app-alert *ngIf=\\\"resources.length === 0\\\" color=\\\"warn\\\">\\n  {{'SHARED.COMPONENTS.RESOURCES_LIST.NO_RESOURCES_WARNING' | translate}}\\n</app-alert>\\n\"","export default \"<div class=\\\"card mt-2\\\" [class.hide-table]=\\\"exporting\\\" [hidden]=\\\"resourceTags.length === 0 || dataSource.filteredData.length === 0\\\">\\n  <div class=\\\"card-body\\\">\\n    <app-table-options [exporter]=\\\"exporter\\\" (start)=\\\"exporting = true\\\" (end)=\\\"exporting = false\\\"></app-table-options>\\n    <table mat-table matTableExporter [dataSource]=\\\"dataSource\\\" #exporter=\\\"matTableExporter\\\" matSort matSortActive=\\\"id\\\" matSortDirection=\\\"asc\\\" matSortDisableClear\\n           class=\\\"w-100\\\">\\n      <ng-container matColumnDef=\\\"select\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox color=\\\"primary\\\"\\n                        (change)=\\\"$event ? masterToggle() : null\\\"\\n                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                        [aria-label]=\\\"checkboxLabel()\\\">\\n          </mat-checkbox>\\n        </th>\\n        <td mat-cell class=\\\"static-column-size\\\" *matCellDef=\\\"let row\\\">\\n          <mat-checkbox color=\\\"primary\\\"\\n                        (click)=\\\"$event.stopPropagation()\\\"\\n                        (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                        [checked]=\\\"selection.isSelected(row)\\\"\\n                        [aria-label]=\\\"checkboxLabel(row)\\\">\\n          </mat-checkbox>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>{{'VO_DETAIL.RESOURCES.TAGS.TAG_ID' | translate}}</th>\\n        <td mat-cell class=\\\"static-column-size\\\" *matCellDef=\\\"let tag\\\">{{tag.id}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef>{{'VO_DETAIL.RESOURCES.TAGS.TAG_NAME' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let tag\\\">\\n          <div *ngIf=\\\"!isChanging.isSelected(tag)\\\">\\n            {{tag.tagName}}\\n          </div>\\n          <div *ngIf=\\\"isChanging.isSelected(tag)\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                [(ngModel)]=\\\"tag.tagName\\\">\\n            </mat-form-field>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"edit\\\">\\n        <th mat-header-cell *matHeaderCellDef></th>\\n        <td mat-cell *matCellDef=\\\"let tag\\\">\\n          <div class=\\\"d-flex justify-content-end\\\">\\n            <button\\n              *ngIf=\\\"!isChanging.isSelected(tag)\\\"\\n              matTooltip=\\\"{{'VO_DETAIL.RESOURCES.TAGS.EDIT_BUTTON' | translate}}\\\"\\n              mat-icon-button\\n              (click)=\\\"edit(tag)\\\">\\n              <mat-icon>edit</mat-icon>\\n            </button>\\n            <button\\n              *ngIf=\\\"isChanging.isSelected(tag)\\\"\\n              matTooltip=\\\"{{'VO_DETAIL.RESOURCES.TAGS.SAVE_BUTTON' | translate}}\\\"\\n              mat-icon-button\\n              (click)=\\\"save(tag)\\\">\\n              <mat-icon>save</mat-icon>\\n            </button>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row\\n          *matRowDef=\\\"let group; columns: displayedColumns;\\\"\\n          class=\\\"dark-hover-list-item\\\">\\n      </tr>\\n    </table>\\n    <mat-paginator [length]=\\\"this.resourceTags.length\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5,10,25]\\\"></mat-paginator>\\n  </div>\\n</div>\\n\\n<mat-spinner *ngIf=\\\"exporting\\\" class=\\\"ml-auto mr-auto\\\"></mat-spinner>\\n\\n<app-alert *ngIf=\\\"resourceTags.length === 0\\\" color=\\\"warn\\\">\\n  {{'VO_DETAIL.RESOURCES.TAGS.NO_TAGS' | translate}}\\n</app-alert>\\n\\n<app-alert *ngIf=\\\"dataSource.filteredData.length === 0 && resourceTags.length !== 0\\\" color=\\\"warn\\\">\\n  {{'SHARED.COMPONENTS.NO_FILTER_RESULTS_ALERT' | translate}}\\n</app-alert>\\n\"","export default \"<div class=\\\"mt-3\\\">\\n  <div class=\\\"d-flex flex-row align-items-baseline justify-content-between\\\">\\n    <label\\n      class=\\\"setting-item clickable\\\"\\n      (click)=\\\"toggle.toggle() || valueChanged()\\\"\\n      [class.unselected-setting]=\\\"!toggle.checked\\\">\\n      {{title}}\\n    </label>\\n    <mat-slide-toggle class=\\\"ml-4\\\" color=\\\"primary\\\" #toggle [checked]=\\\"model\\\">\\n    </mat-slide-toggle>\\n  </div>\\n  <div class=\\\"ml-1\\\" [@openClose]=\\\"toggle.checked ? 'open' : 'closed'\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"position-right\\\">\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n    <mat-icon>more_vert</mat-icon>\\n  </button>\\n\\n  <mat-menu #menu=\\\"matMenu\\\">\\n    <button mat-menu-item [matMenuTriggerFor]=\\\"exportOptions\\\">Export</button>\\n  </mat-menu>\\n\\n  <mat-menu #exportOptions=\\\"matMenu\\\">\\n    <button mat-menu-item (click)=\\\"exporter.exportTable('xlsx', {fileName: 'export'})\\\">Excel</button>\\n    <button mat-menu-item (click)=\\\"exporter.exportTable('csv', {fileName: 'export'})\\\">Csv</button>\\n    <button mat-menu-item (click)=\\\"exporter.exportTable('json', {fileName: 'export'})\\\">Json</button>\\n  </mat-menu>\\n</div>\\n\"","export default \"<app-animated-router-outlet></app-animated-router-outlet>\\n\"","export default \"<p>admin-user-detail works!</p>\\n\"","export default \"<app-refresh-button (refresh)=\\\"refreshTable()\\\"></app-refresh-button>\\n\\n<h1 class=\\\"page-subtitle pt-2\\\">{{'SHARED.COMPONENTS.USER_DETAIL.GROUPS.MEMBER_GROUPS' | translate}}</h1>\\n\\n<mat-spinner class=\\\"ml-auto mr-auto\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n<div *ngIf=\\\"!loading\\\">\\n  <app-groups-list\\n    [groups]=\\\"membersGroups\\\"\\n    [hideColumns]=\\\"['select', 'menu']\\\"\\n    [inDialog]=\\\"false\\\"\\n    [disableMembers]=\\\"false\\\"\\n    [pageSize]=\\\"5\\\"\\n  ></app-groups-list>\\n</div>\\n\\n<div *ngIf=\\\"adminsGroups.length != 0\\\">\\n  <h1 class=\\\"page-subtitle pt-5\\\">{{'SHARED.COMPONENTS.USER_DETAIL.GROUPS.ADMINS_GROUPS' | translate}}</h1>\\n\\n  <mat-spinner class=\\\"ml-auto mr-auto\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n  <div *ngIf=\\\"!loading\\\">\\n    <app-groups-list\\n      [groups]=\\\"adminsGroups\\\"\\n      [hideColumns]=\\\"['select', 'menu']\\\"\\n      [inDialog]=\\\"false\\\"\\n      [disableMembers]=\\\"false\\\"\\n      [pageSize]=\\\"5\\\"\\n    ></app-groups-list>\\n  </div>\\n</div>\\n\"","export default \"<h1 class=\\\"page-subtitle\\\">{{'USER_DETAIL.ORGANIZATIONS.TITLE' | translate}}</h1>\\n<app-refresh-button (refresh)=\\\"refreshTable()\\\" *ngIf=\\\"!loading\\\"></app-refresh-button>\\n<app-immediate-filter [placeholder]=\\\"'USER_DETAIL.ORGANIZATIONS.FILTER'\\\" (filter)=\\\"applyFilter($event)\\\"\\n                      *ngIf=\\\"!loading\\\"></app-immediate-filter>\\n<mat-spinner *ngIf=\\\"loading\\\" class=\\\"mr-auto ml-auto\\\"></mat-spinner>\\n\\n<div *ngIf=\\\"!loading && vosWhereIsMember.length !== 0\\\">\\n  <h1 class=\\\"page-subtitle\\\">{{'USER_DETAIL.ORGANIZATIONS.IS_MEMBER' | translate}}</h1>\\n  <app-vo-select-table [filterValue]=\\\"filterValue\\\"\\n                       [vos]=\\\"vosWhereIsMember\\\"\\n                       [displayedColumns]=\\\"displayedColumns\\\">\\n  </app-vo-select-table>\\n</div>\\n\\n<div *ngIf=\\\"!loading && vosWhereIsAdmin.length !== 0\\\" class=\\\"mt-5\\\">\\n  <h1 class=\\\"page-subtitle\\\">{{'USER_DETAIL.ORGANIZATIONS.IS_ADMIN' | translate}}</h1>\\n  <app-vo-select-table [filterValue]=\\\"filterValue\\\"\\n                       [vos]=\\\"vosWhereIsAdmin\\\"\\n                       [displayedColumns]=\\\"displayedColumns\\\">\\n  </app-vo-select-table>\\n</div>\\n\"","export default \"<app-menu-buttons-field [items]=\\\"navItems\\\" [size]=\\\"'small'\\\"></app-menu-buttons-field>\\n\"","export default \"<div>\\n  <h1 class=\\\"page-subtitle\\\">{{'USER_DETAIL.SETTINGS.ATTRIBUTES.TITLE' | translate}}</h1>\\n  <app-refresh-button (refresh)=\\\"refreshTable()\\\"></app-refresh-button>\\n  <button mat-flat-button class=\\\"mr-2\\\" color=\\\"accent\\\" (click)=\\\"onCreate()\\\">\\n    {{'USER_DETAIL.SETTINGS.ATTRIBUTES.CREATE' | translate}}\\n  </button>\\n\\n  <button mat-flat-button class=\\\"mr-2\\\" color=\\\"accent\\\" (click)=\\\"onSave()\\\" [disabled]=\\\"selection.selected.length === 0\\\">\\n    {{'USER_DETAIL.SETTINGS.ATTRIBUTES.SAVE' | translate}}\\n  </button>\\n\\n  <button mat-flat-button color=\\\"warn\\\" (click)=\\\"onDelete()\\\" [disabled]=\\\"selection.selected.length === 0\\\">\\n    {{'USER_DETAIL.SETTINGS.ATTRIBUTES.DELETE' | translate}}\\n  </button>\\n  <app-immediate-filter [placeholder]=\\\"'SHARED.COMPONENTS.ATTRIBUTES_LIST.FILTER'\\\" (filter)=\\\"applyFilter($event)\\\"></app-immediate-filter>\\n\\n  <mat-spinner class=\\\"ml-auto mr-auto\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n\\n  <app-attributes-list\\n    #list\\n    *ngIf=\\\"!loading\\\"\\n    [filterValue]=\\\"filterValue\\\"\\n    [attributes]=\\\"attributes\\\"\\n    [selection]=\\\"selection\\\">\\n  </app-attributes-list>\\n</div>\\n\"","export default \"<app-menu-buttons-field [items]=\\\"navItems\\\" [size]=\\\"'small'\\\"></app-menu-buttons-field>\\n\"","export default \"<app-animated-router-outlet></app-animated-router-outlet>\\n\"","export default \"<div class=\\\"container-fluid pl-xl-5 pr-xl-5 user-theme\\\" *ngIf=\\\"user !== undefined\\\">\\n  <app-back-button>\\n  </app-back-button>\\n  <h1 class=\\\"page-title\\\">\\n    {{'MENU_ITEMS.USER.TITLE' | translate}}\\n    <a class=\\\"user-link\\\" [routerLink]=\\\"['/profile', user.id]\\\">\\n      {{user | userFullName}}\\n    </a>\\n    <span class=\\\"text-muted\\\">\\n      &nbsp;#{{user.id}}\\n    </span>\\n  </h1>\\n  <app-user-detail-page></app-user-detail-page>\\n</div>\\n\\n\"","export default \"<div class=\\\"card mt-2\\\" [class.hide-table]=\\\"exporting\\\">\\n  <div class=\\\"card-body table-theme\\\">\\n    <app-table-options [exporter]=\\\"exporter\\\" (start)=\\\"exporting = true\\\" (end)=\\\"exporting = false\\\"></app-table-options>\\n    <table\\n      class=\\\"w-100\\\"\\n      mat-table\\n      matTableExporter\\n      [dataSource]=\\\"dataSource\\\"\\n      #exporter=\\\"matTableExporter\\\"\\n      matSort\\n      matSortActive=\\\"id\\\"\\n      matSortDirection=\\\"asc\\\"\\n      matSortDisableClear>\\n      <ng-container matColumnDef=\\\"select\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox color=\\\"primary\\\"\\n                        (change)=\\\"$event ? masterToggle() : null\\\"\\n                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                        [aria-label]=\\\"checkboxLabel()\\\">\\n          </mat-checkbox>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"static-column-size\\\">\\n          <mat-checkbox color=\\\"primary\\\"\\n                        (click)=\\\"$event.stopPropagation()\\\"\\n                        (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                        [checked]=\\\"selection.isSelected(row)\\\"\\n                        [aria-label]=\\\"checkboxLabel(row)\\\">\\n          </mat-checkbox>\\n        </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MANAGERS_LIST.ID' | translate}}</th>\\n        <td mat-cell class=\\\"static-column-size\\\" *matCellDef=\\\"let user\\\">\\n          {{user.id}}\\n        </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MANAGERS_LIST.NAME' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let manager\\\">{{manager | userFullName}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"organization\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MANAGERS_LIST.ORGANIZATION' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let manager\\\">{{manager | userVo}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"email\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MANAGERS_LIST.EMAIL' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let manager\\\">{{manager | userEmail}}</td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr\\n        mat-row\\n        *matRowDef=\\\"let user; columns: displayedColumns;\\\"\\n        [routerLink]=\\\"inDialog ? null : ['/admin/users', user.id]\\\"\\n        class=\\\"dark-hover-list-item\\\">\\n      </tr>\\n    </table>\\n    <mat-paginator [length]=\\\"this.users.length\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5,10,25]\\\"></mat-paginator>\\n  </div>\\n</div>\\n\\n<mat-spinner *ngIf=\\\"exporting\\\" class=\\\"ml-auto mr-auto\\\"></mat-spinner>\\n\"","export default \"<div class=\\\"card mt-3\\\" [class.hide-table]=\\\"exporting\\\" [hidden]=\\\"dataSource.filteredData.length === 0\\\">\\n  <div class=\\\"card-body\\\">\\n    <app-table-options [exporter]=\\\"exporter\\\" (start)=\\\"exporting = true\\\" (end)=\\\"exporting = false\\\"></app-table-options>\\n    <table mat-table matTableExporter [dataSource]=\\\"dataSource\\\" #exporter=\\\"matTableExporter\\\" matSort matSortDirection=\\\"asc\\\" matSortDisableClear\\n           class=\\\"w-100\\\">\\n      <ng-container matColumnDef=\\\"checkbox\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let member\\\" class=\\\"static-column-size\\\">\\n          <mat-checkbox color=\\\"primary\\\"\\n                        (click)=\\\"$event.stopPropagation()\\\"\\n                        (change)=\\\"$event ? selection.toggle(member) : null\\\"\\n                        [checked]=\\\"selection.isSelected(member)\\\"\\n                        [aria-label]=\\\"checkboxLabel(member)\\\">\\n          </mat-checkbox>\\n        </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef\\n            mat-sort-header>{{'VO_MANAGEMENT.TABLE.ID' | translate}}</th>\\n        <td mat-cell class=\\\"static-column-size\\\" *matCellDef=\\\"let vo\\\">{{vo.id}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"recent\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let vo\\\">\\n          <mat-icon\\n            class=\\\"align-bottom\\\"\\n            *ngIf=\\\"recentIds.indexOf(vo.id) > -1\\\"\\n            matTooltip=\\\"{{'VO_MANAGEMENT.TABLE.RECENT' | translate}}\\\">\\n            visibility\\n          </mat-icon>\\n        </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef\\n            mat-sort-header>{{'VO_MANAGEMENT.TABLE.NAME' | translate}}</th>\\n        <td mat-cell *matCellDef=\\\"let vo\\\">{{vo.name}}</td>\\n      </ng-container>\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr\\n        mat-row\\n        *matRowDef=\\\"let vo; columns: displayedColumns;\\\"\\n        [routerLink]=\\\"['/organizations', vo.id]\\\"\\n        class=\\\"dark-hover-list-item\\\">\\n      </tr>\\n    </table>\\n    <mat-paginator [length]=\\\"this.vos.length\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5,10,25]\\\"></mat-paginator>\\n  </div>\\n</div>\\n\\n<mat-spinner *ngIf=\\\"exporting\\\" class=\\\"ml-auto mr-auto\\\"></mat-spinner>\\n\\n<app-alert *ngIf=\\\"dataSource.filteredData.length === 0\\\" color=\\\"warn\\\">\\n  {{'SHARED.COMPONENTS.NO_FILTER_RESULTS_ALERT' | translate}}\\n</app-alert>\\n\\n\"","export default \"<div *ngIf=\\\"principal !== undefined\\\" class=\\\"p-3\\\">\\n  <div *ngFor=\\\"let role of principal.roles | keyvalue\\\">\\n    <h1 class=\\\"page-subtitle pb-0 pt-3\\\">{{role.key}}</h1>\\n    <div *ngFor=\\\"let entity of role.value | keyvalue\\\">\\n      {{entity.key}}\\n      {{entity.value}}\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<!-- Footer -->\\n<footer class=\\\"font-small\\\">\\n\\n  <!-- Footer Links -->\\n  <div class=\\\"container-fluid text-center text-md-left pr-xl-5 pl-xl-5\\\">\\n\\n    <!-- Grid row -->\\n    <div class=\\\"row\\\">\\n\\n      <!-- Grid column -->\\n      <div class=\\\"col-md-4 mx-auto footer-col\\\">\\n\\n        <!-- Links -->\\n        <h6 class=\\\"text-uppercase font-weight-bold text-white\\\">\\n          {{'SHARED.FOOTER.ABOUT_PERUN' | translate}}\\n        </h6>\\n        <ul class=\\\"list-unstyled\\\">\\n          <li>\\n            <a target=\\\"_blank\\\" [href]=\\\"perunwebpage\\\">{{'SHARED.FOOTER.PERUN_WEB' | translate}}</a>\\n          </li>\\n          <li>\\n            <a target=\\\"_blank\\\" [href]=\\\"perunTeamWebpage\\\">{{'SHARED.FOOTER.PERUN_TEAM' | translate}}</a>\\n          </li>\\n          <li>\\n            <a target=\\\"_blank\\\" [href]=\\\"privacyPolicy\\\">{{'SHARED.FOOTER.PRIVACY_POLICY' | translate}}</a>\\n          </li>\\n        </ul>\\n\\n      </div>\\n\\n      <!-- Grid column -->\\n      <div class=\\\"col-md-4 mx-auto footer-col\\\">\\n\\n        <!-- Links -->\\n        <h6 class=\\\"text-uppercase font-weight-bold text-white\\\">{{'SHARED.FOOTER.HELP' | translate}}</h6>\\n        <ul class=\\\"list-unstyled\\\">\\n          <li>\\n            <a target=\\\"_blank\\\" [href]=\\\"userDocumentationWebpage\\\">{{'SHARED.FOOTER.USER_DOCUMENTATION' | translate}}</a>\\n          </li>\\n          <li>\\n            <a target=\\\"_blank\\\" [href]=\\\"administratorDocumentationWebpage\\\">{{'SHARED.FOOTER.ADMINISTRATOR_DOCUMENTATION' | translate}}</a>\\n          </li>\\n          <li>\\n            <span (click)=\\\"openBugReportDialog()\\\" id=\\\"clickable\\\">{{'SHARED.FOOTER.REPORT_ISSUE' | translate}}</span>\\n          </li>\\n        </ul>\\n\\n      </div>\\n      <!-- Grid column -->\\n      <div class=\\\"col-md-4 mx-auto footer-col\\\">\\n\\n        <!-- Links -->\\n        <h6 class=\\\"text-uppercase font-weight-bold text-white\\\">{{'SHARED.FOOTER.SUPPORT' | translate}}</h6>\\n        <ul class=\\\"list-unstyled\\\">\\n          <li>\\n            <i class=\\\"material-icons align-bottom\\\">\\n              mail\\n            </i>\\n            {{supportMail}}\\n          </li>\\n        </ul>\\n\\n      </div>\\n    </div>\\n    <!-- Grid row -->\\n\\n  </div>\\n  <!-- Footer Links -->\\n  <hr class=\\\"my-0\\\">\\n  <!-- Copyright -->\\n  <div class=\\\"footer-copyright text-center py-2\\\" id=\\\"copyright\\\">© {{this.currentYear}} Copyright:\\n    <span *ngFor=\\\"let item of this.copyright\\\">\\n      <a target=\\\"_blank\\\" [href]=\\\"item.webpage\\\"> {{item.name}}</a>,\\n    </span>\\n    Version {{version}}\\n  </div>\\n  <!-- Copyright -->\\n\\n</footer>\\n<!-- Footer -->\\n\"","export default \"<div id=\\\"nav-menu-icons\\\">\\n  <button mat-icon-button\\n          class=\\\"mr-2 text-white mt-auto mb-auto\\\"\\n          (click)=\\\"sideNav.toggle()\\\">\\n    <mat-icon>\\n      menu\\n    </mat-icon>\\n  </button>\\n  <a class=\\\"nav-menu-icon\\\" [routerLink]=\\\"['/']\\\">\\n    <img src=\\\"assets/img/PerunWebImages/perun_logo-white.svg\\\" alt=\\\"Home\\\">\\n  </a>\\n</div>\\n\\n<div id=\\\"nav-menu-user-info\\\">\\n  <button mat-icon-button (click)=\\\"showNotificationHistory()\\\" [matTooltip]=\\\"'NAV.NOTIFICATIONS_TOOLTIP'|translate\\\">\\n    <mat-icon matBadge=\\\"{{getNewNotificationsCount() > 5 ? '5+' : getNewNotificationsCount()}}\\\" matBadgeColor=\\\"warn\\\" [matBadgeHidden]=\\\"getNewNotificationsCount() === 0\\\">\\n      {{getNewNotificationsCount() ? 'notifications_active' : 'notifications'}}\\n    </mat-icon>\\n  </button>\\n\\n  <button mat-button [matMenuTriggerFor]=\\\"menu\\\">\\n    <mat-icon>\\n      person\\n    </mat-icon>\\n    <span class=\\\"d-none d-lg-inline\\\">\\n    {{principal.user.titleBefore}}\\n    {{principal.user.firstName}}\\n    {{principal.user.middleName}}\\n    {{principal.user.lastName}}\\n    {{principal.user.titleAfter}}\\n    </span>\\n  </button>\\n  <mat-menu #menu=\\\"matMenu\\\">\\n    <button mat-menu-item *ngIf=\\\"logoutEnabled\\\" (click)=\\\"onLogOut()\\\">{{'NAV.LOGOUT' | translate}}</button>\\n    <button mat-menu-item [routerLink]=\\\"['/profile']\\\">{{'NAV.PROFILE' | translate}}</button>\\n  </mat-menu>\\n</div>\\n\"","export default \"<div class=\\\"entity-menu-item\\\">\\n  <div class=\\\"entity-menu-item-header {{item.colorClass}}\\\" (click)=\\\"toggle()\\\">\\n    <div class=\\\"entity-menu-item-link {{item.labelClass}}\\\">\\n      <a class=\\\"entity-menu-item-label\\\">\\n        <div>\\n          <img\\n            src=\\\"assets/img/PerunWebImages/{{item.icon}}\\\"\\n            class=\\\"entity-menu-item-icon\\\"\\n            alt=\\\"{{item.label | translate}}\\\">\\n        </div>\\n        <div class=\\\"ml-3\\\">{{item.label | translate}}</div>\\n      </a>\\n    </div>\\n  </div>\\n\\n  <div [@openClose]=\\\"expanded ? 'open' : 'closed'\\\">\\n    <div class=\\\"side-entity-menu {{item.linksClass}}\\\">\\n      <div *ngFor=\\\"let link of item.links\\\">\\n        <a (click)=\\\"navigate(link.url)\\\"\\n           [class.activated]=\\\"isActive(currentUrl, link.activatedRegex) && item.activatedClass === undefined\\\"\\n           [ngClass]=\\\"isActive(currentUrl, link.activatedRegex) && item.activatedClass !== undefined ? item.activatedClass : ''\\\">\\n          {{link.label | translate}}\\n        </a>\\n        <div class=\\\"entity-menu-item-sub-menu\\\" @rollInOut *ngIf=\\\"isActive(currentUrl, link.showChildrenRegex)\\\">\\n          <a class=\\\"pl-5\\\" *ngFor=\\\"let child of link?.children\\\"\\n             (click)=\\\"navigate(child.url)\\\"\\n             [class.activated]=\\\"isActive(currentUrl, child.activatedRegex) && item.activatedClass === undefined\\\"\\n             [ngClass]=\\\"isActive(currentUrl, child.activatedRegex) && item.activatedClass !== undefined ? item.activatedClass : ''\\\">\\n            {{child.label | translate}}\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"entity-menu-item\\\">\\n  <div class=\\\"entity-menu-item-header {{getBgClass()}}\\\" (click)=\\\"toggle()\\\">\\n    <div class=\\\"entity-menu-item-link {{item.labelClass}}\\\">\\n      <a class=\\\"entity-menu-item-label\\\">\\n        <div>\\n          <img\\n            src=\\\"assets/img/PerunWebImages/{{item.icon}}\\\"\\n            class=\\\"entity-menu-item-icon\\\"\\n            alt=\\\"{{item.label}}\\\">\\n        </div>\\n        <div class=\\\"ml-3\\\">{{item.label | translate}}</div>\\n      </a>\\n      <a class=\\\"p-1\\\" *ngIf=\\\"item.links.length > 0 && (item.expandable === undefined || item.expandable)\\\">\\n        <mat-icon *ngIf=\\\"expanded\\\">expand_less</mat-icon>\\n        <mat-icon *ngIf=\\\"!expanded\\\">expand_more</mat-icon>\\n      </a>\\n    </div>\\n  </div>\\n\\n  <div [@openClose]=\\\"expanded ? 'open' : 'closed'\\\">\\n    <div class=\\\"side-entity-menu {{item.linksClass}}\\\">\\n      <div *ngFor=\\\"let link of item.links\\\">\\n        <a (click)=\\\"navigate(link.url)\\\"\\n           [class.activated]=\\\"isActive(currentUrl, link.activatedRegex) && item.activatedClass === undefined\\\"\\n           [ngClass]=\\\"isActive(currentUrl, link.activatedRegex) && item.activatedClass !== undefined ? item.activatedClass : ''\\\">\\n          {{link.label | translate}}\\n        </a>\\n        <div @rollInOut *ngIf=\\\"isActive(currentUrl, link.showChildrenRegex)\\\">\\n          <a (click)=\\\"navigate(child.url)\\\"\\n             class=\\\"pl-5\\\" *ngFor=\\\"let child of link?.children\\\"\\n             [class.activated]=\\\"isActive(currentUrl, child.activatedRegex) && item.activatedClass === undefined\\\"\\n             [ngClass]=\\\"isActive(currentUrl, child.activatedRegex) && item.activatedClass !== undefined ? item.activatedClass : ''\\\">\\n            {{child.label | translate}}\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"accordion entity-menu-accordion\\\" id=\\\"sideMenuAccordion\\\">\\n  <app-side-menu-root-item\\n    [sideNav]=\\\"sideNav\\\"\\n    [showOpen]=\\\"userItemOpened\\\"\\n    [item]=\\\"userItem\\\">\\n  </app-side-menu-root-item>\\n  <div\\n    *ngFor=\\\"let item of userItems; let i = index\\\"\\n    @rollInOut\\n    class=\\\"overflow-hidden\\\">\\n    <app-side-menu-item\\n      [sideNav]=\\\"sideNav\\\"\\n      [item]=\\\"item\\\"\\n      [index]=\\\"i\\\">\\n    </app-side-menu-item>\\n  </div>\\n  <app-side-menu-root-item\\n    [sideNav]=\\\"sideNav\\\"\\n    *ngIf=\\\"authResolver.isVoAdmin() || authResolver.isVoObserver()\\\"\\n    [item]=\\\"accessItem\\\">\\n  </app-side-menu-root-item>\\n  <div *ngIf=\\\"authResolver.isVoAdmin() || authResolver.isVoObserver()\\\">\\n    <div\\n      *ngFor=\\\"let item of accessItems; let i = index\\\"\\n      @rollInOut\\n      class=\\\"overflow-hidden\\\">\\n      <app-side-menu-item\\n        [sideNav]=\\\"sideNav\\\"\\n        [item]=\\\"item\\\"\\n        [index]=\\\"i\\\"\\n        [showOpen]=\\\"true\\\">\\n      </app-side-menu-item>\\n    </div>\\n  </div>\\n\\n  <app-side-menu-root-item\\n    [sideNav]=\\\"sideNav\\\"\\n    *ngIf=\\\"authResolver.canManageFacilities()\\\"\\n    [item]=\\\"facilityItem\\\">\\n  </app-side-menu-root-item>\\n  <div *ngIf=\\\"authResolver.canManageFacilities()\\\">\\n    <div\\n      *ngFor=\\\"let item of facilityItems; let i = index\\\"\\n      @rollInOut\\n      class=\\\"overflow-hidden\\\">\\n      <app-side-menu-item\\n        [sideNav]=\\\"sideNav\\\"\\n        [item]=\\\"item\\\"\\n        [index]=\\\"i\\\">\\n      </app-side-menu-item>\\n    </div>\\n\\n  </div>\\n  <app-side-menu-root-item\\n    [sideNav]=\\\"sideNav\\\"\\n    *ngIf=\\\"authResolver.isPerunAdmin()\\\"\\n    [showOpen]=\\\"adminItemOpened\\\"\\n    [item]=\\\"adminItem\\\">\\n  </app-side-menu-root-item>\\n  <div *ngIf=\\\"authResolver.isPerunAdmin()\\\">\\n    <div\\n      *ngFor=\\\"let item of adminItems; let i = index\\\"\\n      @rollInOut\\n      class=\\\"overflow-hidden\\\">\\n      <app-side-menu-item\\n        [sideNav]=\\\"sideNav\\\"\\n        [item]=\\\"item\\\"\\n        [index]=\\\"i\\\">\\n      </app-side-menu-item>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<h1 class=\\\"page-subtitle\\\">{{'VO_DETAIL.APPLICATION.TITLE' | translate}}</h1>\\n<div class=\\\"align-inline\\\">\\n<app-refresh-button (refresh)=\\\"select()\\\"></app-refresh-button>\\n<mat-form-field class=\\\"w-25 mr-2\\\">\\n  <mat-label>{{'VO_DETAIL.APPLICATION.TABLE_STATE' | translate}}</mat-label>\\n  <mat-select (selectionChange)=\\\"select()\\\" [(value)]=\\\"state\\\" disableOptionCentering>\\n    <mat-option value=\\\"all\\\">{{'VO_DETAIL.APPLICATION.SELECTION_ALL' | translate}}</mat-option>\\n    <mat-option value=\\\"wfmv\\\">{{'VO_DETAIL.APPLICATION.SELECTION_WFMV' | translate}}</mat-option>\\n    <mat-option value=\\\"submited\\\">{{'VO_DETAIL.APPLICATION.SELECTION_SUBMITTED' | translate}}</mat-option>\\n    <mat-option value=\\\"pending\\\">{{'VO_DETAIL.APPLICATION.SELECTION_PENDING' | translate}}</mat-option>\\n    <mat-option value=\\\"approved\\\">{{'VO_DETAIL.APPLICATION.SELECTION_APPROVED' | translate}}</mat-option>\\n    <mat-option value=\\\"rejected\\\">{{'VO_DETAIL.APPLICATION.SELECTION_REJECTED' | translate}}</mat-option>\\n  </mat-select>\\n</mat-form-field>\\n<app-immediate-filter [placeholder]=\\\"'VO_DETAIL.APPLICATION.FILTER'\\\" (filter)=\\\"applyFilter($event)\\\"></app-immediate-filter>\\n</div>\\n<mat-spinner class=\\\"ml-auto mr-auto\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n<app-applications-list\\n  *ngIf=\\\"!loading\\\"\\n  [filterValue]=\\\"filterValue\\\"\\n  [applications]=\\\"applications\\\"\\n  [displayedColumns]=\\\"displayedColumns\\\"\\n  [group]=\\\"group\\\">\\n</app-applications-list>\\n\"","export default \"<div (keyup)=\\\"onKeyInput($event)\\\">\\n  <h1 class=\\\"page-subtitle\\\">{{'GROUP_DETAIL.MEMBERS.TITLE' | translate}}</h1>\\n\\n  <button mat-flat-button color=\\\"accent\\\" class=\\\"mr-2\\\" (click)=\\\"onAddMember()\\\">\\n    {{'GROUP_DETAIL.MEMBERS.ADD_MEMBER' | translate}}\\n  </button>\\n  <button mat-flat-button color=\\\"warn\\\" class=\\\"mr-2\\\" [disabled]=\\\"selection.isEmpty()\\\" (click)=\\\"onRemoveMembers()\\\">\\n    {{'GROUP_DETAIL.MEMBERS.REMOVE_MEMBERS' | translate}}\\n  </button>\\n  <button mat-stroked-button class=\\\"mr-2 mb-2\\\" (click)=\\\"onListAll()\\\">\\n    {{'GROUP_DETAIL.MEMBERS.LIST_ALL' | translate}}\\n  </button>\\n\\n  <mat-form-field class=\\\"mr-2 search-field no-border-mat-input\\\">\\n    <label>\\n      <input matInput autocomplete=\\\"false\\\" placeholder=\\\"{{'GROUP_DETAIL.MEMBERS.SEARCH_DESCRIPTION' | translate}}\\\" [(ngModel)]=\\\"searchString\\\">\\n    </label>\\n  </mat-form-field>\\n  <button mat-flat-button color=\\\"primary\\\" class=\\\"mr-2\\\" [disabled]=\\\"searchString.length === 0\\\" (click)=\\\"onSearchByString()\\\">\\n    <mat-icon>search</mat-icon>\\n  </button>\\n  <mat-spinner *ngIf=\\\"loading\\\" class=\\\"ml-auto mr-auto\\\">\\n  </mat-spinner>\\n  <app-alert color=\\\"info\\\" *ngIf=\\\"!firstSearchDone\\\">\\n    {{'GROUP_DETAIL.MEMBERS.SEARCH_ALERT' | translate}}\\n  </app-alert>\\n  <div class=\\\"mt-3\\\" *ngIf=\\\"members !== null && !loading\\\">\\n    <app-members-list\\n      [selection]=\\\"selection\\\"\\n      [members]=\\\"members\\\"\\n      (updateTable)=\\\"refreshTable()\\\"\\n      *ngIf=\\\"members.length !== 0\\\">\\n    </app-members-list>\\n\\n    <app-alert *ngIf=\\\"members.length === 0\\\" color=\\\"warn\\\">\\n      {{'GROUP_DETAIL.MEMBERS.NO_MEMBERS_ALERT' | translate}}\\n    </app-alert>\\n  </div>\\n</div>\\n\"","export default \"<div>\\n  <h1 class=\\\"page-subtitle\\\">{{'GROUP_DETAIL.RESOURCES.TITLE' | translate}}</h1>\\n  <app-refresh-button (refresh)=\\\"refreshTable()\\\"></app-refresh-button>\\n  <button mat-flat-button color=\\\"warn\\\" [disabled]=\\\"selected.selected.length === 0\\\">\\n    {{'GROUP_DETAIL.RESOURCES.DELETE' | translate}}\\n  </button>\\n  <app-immediate-filter [placeholder]=\\\"'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_SEARCH'\\\" (filter)=\\\"applyFilter($event)\\\"></app-immediate-filter>\\n  <mat-spinner class=\\\"ml-auto mr-auto\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n  <app-resources-list *ngIf=\\\"resources && !loading\\\"\\n    [filterValue]=\\\"filterValue\\\"\\n    [resources]=\\\"resources\\\"\\n    [selection]=\\\"selected\\\">\\n  </app-resources-list>\\n</div>\\n\"","export default \"<div>\\n  <h1 class=\\\"page-subtitle\\\">{{'GROUP_DETAIL.SUBGROUPS.TITLE' | translate}}</h1>\\n  <app-refresh-button (refresh)=\\\"refreshTable()\\\"></app-refresh-button>\\n  <button mat-flat-button color=\\\"accent\\\" (click)=\\\"onCreateGroup()\\\">\\n    {{'GROUP_DETAIL.SUBGROUPS.CREATE_GROUP' | translate}}\\n  </button>\\n  <button mat-flat-button color=\\\"warn\\\" class=\\\"ml-2\\\" [disabled]=\\\"selected.selected.length === 0\\\" (click)=\\\"deleteGroup()\\\">\\n    {{'GROUP_DETAIL.SUBGROUPS.DELETE_GROUP' | translate}}\\n  </button>\\n  <app-debounce-filter\\n    [placeholder]=\\\"'GROUP_DETAIL.SUBGROUPS.FILTER'\\\"\\n    (filter)=\\\"applyFilter($event)\\\">\\n  </app-debounce-filter>\\n  <mat-checkbox color=\\\"primary\\\" class=\\\"ml-3\\\" [(ngModel)]=\\\"showGroupList\\\" #checkbox>\\n    {{'GROUP_DETAIL.SUBGROUPS.SHOW_LIST' | translate}}\\n  </mat-checkbox>\\n  <mat-spinner class=\\\"ml-auto mr-auto\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n  <div class=\\\"mt-3\\\" *ngIf=\\\"!loading\\\">\\n    <app-groups-tree\\n      *ngIf=\\\"!showGroupList\\\"\\n      [groups]=\\\"filteredTreeGroups\\\"\\n      [expandAll]=\\\"filtering\\\"\\n      [selection]=\\\"selected\\\">\\n    </app-groups-tree>\\n    <app-groups-list\\n      [groups]=\\\"filteredGroups\\\"\\n      [selection]=\\\"selected\\\"\\n      [disableMembers]=\\\"true\\\"\\n      [hideColumns]=\\\"['vo']\\\"\\n      *ngIf=\\\"showGroupList\\\">\\n    </app-groups-list>\\n  </div>\\n</div>\\n\"","export default \"<h1 class=\\\"page-subtitle\\\">{{'MEMBER_DETAIL.GROUPS.TITLE' | translate}}</h1>\\n<app-refresh-button (refresh)=\\\"refreshTable()\\\" *ngIf=\\\"!loading\\\"></app-refresh-button>\\n<app-immediate-filter [placeholder]=\\\"'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_SEARCH'\\\" (filter)=\\\"applyFilter($event)\\\" *ngIf=\\\"!loading\\\"></app-immediate-filter>\\n<mat-spinner *ngIf=\\\"loading\\\" class=\\\"mr-auto ml-auto\\\"></mat-spinner>\\n<!--this list is duplicated because it might contain\\nother data than the one displayed in vo detail(e.g. members status-->\\n<app-member-group-list [groups]=\\\"groups\\\" [filterValue]=\\\"filterValue\\\" *ngIf=\\\"!loading\\\">\\n</app-member-group-list>\\n\"","export default \"<h1 class=\\\"page-subtitle\\\">{{'VO_DETAIL.APPLICATION.TITLE' | translate}}</h1>\\n<div class=\\\"align-inline\\\">\\n<app-refresh-button (refresh)=\\\"select()\\\"></app-refresh-button>\\n<mat-form-field class=\\\"w-25 mr-2\\\">\\n  <mat-label>{{'VO_DETAIL.APPLICATION.TABLE_STATE' | translate}}</mat-label>\\n  <mat-select (selectionChange)=\\\"select()\\\" [(value)]=\\\"state\\\" disableOptionCentering>\\n    <mat-option value=\\\"all\\\">{{'VO_DETAIL.APPLICATION.SELECTION_ALL' | translate}}</mat-option>\\n    <mat-option value=\\\"wfmv\\\">{{'VO_DETAIL.APPLICATION.SELECTION_WFMV' | translate}}</mat-option>\\n    <mat-option value=\\\"submited\\\">{{'VO_DETAIL.APPLICATION.SELECTION_SUBMITTED' | translate}}</mat-option>\\n    <mat-option value=\\\"pending\\\">{{'VO_DETAIL.APPLICATION.SELECTION_PENDING' | translate}}</mat-option>\\n    <mat-option value=\\\"approved\\\">{{'VO_DETAIL.APPLICATION.SELECTION_APPROVED' | translate}}</mat-option>\\n    <mat-option value=\\\"rejected\\\">{{'VO_DETAIL.APPLICATION.SELECTION_REJECTED' | translate}}</mat-option>\\n  </mat-select>\\n</mat-form-field>\\n<app-immediate-filter  class=\\\"w-25\\\" [placeholder]=\\\"'VO_DETAIL.APPLICATION.FILTER'\\\" (filter)=\\\"applyFilter($event)\\\"></app-immediate-filter>\\n</div>\\n<mat-spinner *ngIf=\\\"loading\\\" class=\\\"ml-auto mr-auto\\\"></mat-spinner>\\n<app-applications-list\\n  *ngIf=\\\"!loading\\\"\\n  [filterValue]=\\\"filterValue\\\"\\n  [applications]=\\\"applications\\\"\\n  [displayedColumns]=\\\"displayedColumns\\\">\\n</app-applications-list>\\n\"","export default \"<div>\\n  <h1 class=\\\"page-subtitle\\\">{{'VO_DETAIL.GROUPS.TITLE' | translate}}</h1>\\n  <app-refresh-button (refresh)=\\\"loadAllGroups()\\\"></app-refresh-button>\\n  <button mat-flat-button color=\\\"accent\\\" (click)=\\\"onCreateGroup()\\\">\\n    {{'VO_DETAIL.GROUPS.CREATE_GROUP' | translate}}\\n  </button>\\n  <button mat-flat-button color=\\\"warn\\\" class=\\\"ml-2\\\" [disabled]=\\\"selected.selected.length === 0\\\" (click)=\\\"deleteGroup()\\\">\\n    {{'VO_DETAIL.GROUPS.DELETE_GROUP' | translate}}\\n  </button>\\n  <app-debounce-filter\\n    [placeholder]=\\\"'VO_DETAIL.GROUPS.FILTER'\\\"\\n    (filter)=\\\"applyFilter($event)\\\">\\n  </app-debounce-filter>\\n  <mat-checkbox color=\\\"primary\\\" class=\\\"ml-3\\\" [(ngModel)]=\\\"showGroupList\\\" (change)=\\\"removeAllGroups()\\\" #checkbox>\\n    {{'VO_DETAIL.GROUPS.LIST_VIEW' | translate}}\\n  </mat-checkbox>\\n  <mat-spinner class=\\\"ml-auto mr-auto\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n  <div class=\\\"mt-3\\\" *ngIf=\\\"!loading && groups.length !== 0\\\">\\n    <app-groups-tree\\n      (moveGroup)=\\\"onMoveGroup($event)\\\"\\n      *ngIf=\\\"!showGroupList\\\"\\n      [groups]=\\\"filteredTreeGroups\\\"\\n      [expandAll]=\\\"filtering\\\"\\n      [selection]=\\\"selected\\\">\\n    </app-groups-tree>\\n    <app-groups-list\\n      (moveGroup)=\\\"onMoveGroup($event)\\\"\\n      [groups]=\\\"filteredGroups\\\"\\n      [selection]=\\\"selected\\\"\\n      [disableMembers]=\\\"true\\\"\\n      [hideColumns]=\\\"['vo']\\\"\\n      *ngIf=\\\"showGroupList\\\">\\n    </app-groups-list>\\n  </div>\\n\\n  <app-alert *ngIf=\\\"groups.length === 0 && !loading\\\" color=\\\"warn\\\">\\n    {{'VO_DETAIL.GROUPS.NO_GROUPS' | translate}}\\n  </app-alert>\\n</div>\\n\"","export default \"<div (keyup)=\\\"onKeyInput($event)\\\" class=\\\"vo-theme\\\">\\n  <h1 class=\\\"page-subtitle\\\">{{'VO_DETAIL.MEMBERS.TITLE' | translate}}</h1>\\n  <div class=\\\"align-elements\\\">\\n    <button mat-flat-button color=\\\"accent\\\" class=\\\"mr-2\\\" (click)=\\\"onAddMember()\\\">\\n      {{'VO_DETAIL.MEMBERS.ADD_MEMBER' | translate}}\\n    </button>\\n    <button mat-flat-button color=\\\"warn\\\" class=\\\"mr-2\\\" [disabled]=\\\"selection.isEmpty()\\\" (click)=\\\"onRemoveMembers()\\\">\\n      {{'VO_DETAIL.MEMBERS.REMOVE_MEMBERS' | translate}}\\n    </button>\\n    <button mat-stroked-button class=\\\"mr-2\\\" (click)=\\\"onListAll()\\\">\\n      {{'VO_DETAIL.MEMBERS.LIST_MEMBERS' | translate}}\\n    </button>\\n\\n    <mat-form-field class=\\\"mr-2 fix-select\\\">\\n      <mat-label>{{'VO_DETAIL.MEMBERS.STATUS' | translate}}</mat-label>\\n      <mat-select [(value)]=\\\"selectedStatuses\\\" [formControl]=\\\"statuses\\\"\\n                  multiple>\\n        <mat-select-trigger>\\n          {{displaySelectedStatuses()}}\\n        </mat-select-trigger>\\n        <mat-option class=\\\"vo-theme\\\" *ngFor=\\\"let status of statusList\\\" [value]=\\\"status\\\">{{status}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"mr-2 search-field no-border-mat-input\\\">\\n      <label>\\n        <input matInput autocomplete=\\\"false\\\" placeholder=\\\"{{'VO_DETAIL.MEMBERS.SEARCH_DESCRIPTION' | translate}}\\\"\\n               [(ngModel)]=\\\"searchString\\\">\\n      </label>\\n    </mat-form-field>\\n    <button mat-flat-button color=\\\"primary\\\" class=\\\"mr-2\\\" [disabled]=\\\"searchString.length === 0 || selectedStatuses.length === 0\\\"\\n            (click)=\\\"onSearchByString()\\\">\\n      <mat-icon>search</mat-icon>\\n    </button>\\n  </div>\\n  <mat-spinner *ngIf=\\\"loading\\\" class=\\\"ml-auto mr-auto\\\">\\n  </mat-spinner>\\n  <app-alert [color]=\\\"'info'\\\" *ngIf=\\\"!firstSearchDone\\\">\\n    {{'VO_DETAIL.MEMBERS.SEARCH_ALERT' | translate}}\\n  </app-alert>\\n  <div class=\\\"mt-3\\\" *ngIf=\\\"members !== null && !loading\\\">\\n    <app-members-list\\n      [selection]=\\\"selection\\\"\\n      [members]=\\\"members\\\"\\n      [hideColumns]=\\\"['groupStatus']\\\"\\n      (updateTable)=\\\"refreshTable()\\\"\\n      *ngIf=\\\"members.length !== 0\\\">\\n    </app-members-list>\\n\\n    <app-alert *ngIf=\\\"members.length === 0\\\" [color]=\\\"'warn'\\\">\\n      {{'VO_DETAIL.MEMBERS.NO_MEMBERS_ALERT' | translate}}\\n    </app-alert>\\n  </div>\\n</div>\\n\"","export default \"<div>\\n  <h1 class=\\\"page-subtitle\\\">{{'VO_DETAIL.RESOURCES.LIST.TITLE' | translate}}</h1>\\n  <app-refresh-button (refresh)=\\\"refreshTable()\\\"></app-refresh-button>\\n  <button mat-flat-button color=\\\"warn\\\" [disabled]=\\\"selected.selected.length === 0\\\">\\n    {{'VO_DETAIL.RESOURCES.LIST.DELETE' | translate}}\\n  </button>\\n  <app-immediate-filter [placeholder]=\\\"'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_SEARCH'\\\" (filter)=\\\"applyFilter($event)\\\"></app-immediate-filter>\\n\\n  <mat-spinner class=\\\"ml-auto mr-auto\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n  <app-resources-list\\n    *ngIf=\\\"!loading\\\"\\n    [filterValue]=\\\"filterValue\\\"\\n    [resources]=\\\"resources\\\"\\n    [selection]=\\\"selected\\\">\\n  </app-resources-list>\\n</div>\\n\\n\"","export default \"<h1 class=\\\"page-subtitle\\\">{{'VO_DETAIL.RESOURCES.STATES.TITLE' | translate}}</h1>\\n\\n<mat-spinner *ngIf=\\\"loading\\\" class=\\\"ml-auto mr-auto\\\">\\n</mat-spinner>\\n\\n<div *ngIf=\\\"!loading\\\">\\n  <app-refresh-button (refresh)=\\\"refreshTable()\\\"></app-refresh-button>\\n  <mat-tab-group animationDuration=\\\"0ms\\\" [selectedIndex]=\\\"selectedIndex\\\" (selectedIndexChange)=\\\"selectedIndex = $event\\\">\\n    <mat-tab>\\n      <ng-template mat-tab-label>\\n        {{'VO_DETAIL.RESOURCES.STATES.ERROR_RESOURCES' | translate}}\\n        <span class=\\\"badge badge-danger ml-1\\\">{{errorPropagation.length}}</span>\\n      </ng-template>\\n      <ng-template matTabContent>\\n        <app-alert *ngIf=\\\"errorPropagation.length === 0\\\" [color]=\\\"'warn'\\\">\\n          {{'VO_DETAIL.RESOURCES.STATES.NO_RESOURCES_IN_ERROR' | translate}}\\n        </app-alert>\\n\\n        <app-state-tab\\n        [propagation]=\\\"errorPropagation\\\">\\n        </app-state-tab>\\n      </ng-template>\\n    </mat-tab>\\n    <mat-tab>\\n      <ng-template mat-tab-label>\\n        {{'VO_DETAIL.RESOURCES.STATES.OK_RESOURCES' | translate}}\\n        <span class=\\\"badge badge-success ml-1\\\">{{okPropagation.length}}</span>\\n      </ng-template>\\n\\n      <ng-template matTabContent>\\n\\n        <app-alert *ngIf=\\\"okPropagation.length === 0\\\" color=\\\"warn\\\">\\n          {{'VO_DETAIL.RESOURCES.STATES.NO_RESOURCES_IN_OK' | translate}}\\n        </app-alert>\\n\\n        <app-state-tab\\n        [propagation]=\\\"okPropagation\\\">\\n        </app-state-tab>\\n      </ng-template>\\n    </mat-tab>\\n  </mat-tab-group>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \".search-field {\\n  width: 300px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvYWRtaW4vcGFnZXMvYWRtaW4tcGFnZS9hZG1pbi11c2Vycy9hZG1pbi11c2Vycy5jb21wb25lbnQuc2NzcyIsImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvYWRtaW4vcGFnZXMvYWRtaW4tcGFnZS9hZG1pbi11c2Vycy9hZG1pbi11c2Vycy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUNDRiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL2FkbWluL3BhZ2VzL2FkbWluLXBhZ2UvYWRtaW4tdXNlcnMvYWRtaW4tdXNlcnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VhcmNoLWZpZWxkIHtcbiAgd2lkdGg6IDMwMHB4O1xufVxuIiwiLnNlYXJjaC1maWVsZCB7XG4gIHdpZHRoOiAzMDBweDtcbn0iXX0= */\"","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { UsersService } from '@perun-web-apps/perun/services';\nimport { RichUser } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-admin-users',\n  templateUrl: './admin-users.component.html',\n  styleUrls: ['./admin-users.component.scss']\n})\nexport class AdminUsersComponent implements OnInit {\n\n  static id = 'AdminUsersComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private usersService: UsersService\n  ) { }\n\n  users: RichUser[];\n\n  searchString = '';\n  loading = false;\n  firstSearchDone = false;\n\n  ngOnInit() {\n  }\n\n  onSearchByString() {\n    this.loading = true;\n    this.firstSearchDone = true;\n    this.usersService.findRichUsers(this.searchString).subscribe(users => {\n      this.users = users;\n      this.loading = false;\n    }, () => {\n      this.loading = false;\n    });\n  }\n\n  onKeyInput(event: KeyboardEvent) {\n    if (event.key === 'Enter' && this.searchString.length > 0) {\n      this.onSearchByString();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\nimport {MainMenuPageComponent} from './main-menu-page/main-menu-page.component';\nimport {AuthCallbackComponent} from './core/components/auth-callback/auth-callback.component';\nimport {UserProfileComponent} from './shared/components/user-profile/user-profile.component';\nimport {UserOverviewComponent} from './shared/components/user-detail-page/user-overview/user-overview.component';\nimport {UserDetailComponent} from './shared/components/user-detail-page/user-detail/user-detail.component';\nimport {UserOrganizationsComponent} from './shared/components/user-detail-page/user-organizations/user-organizations.component';\nimport {UserGroupsComponent} from './shared/components/user-detail-page/user-groups/user-groups.component';\nimport {UserSettingsComponent} from './shared/components/user-detail-page/user-settings/user-settings.component';\nimport {\n  UserSettingsOverviewComponent\n} from './shared/components/user-detail-page/user-settings/user-settings-overview/user-settings-overview.component';\nimport {UserSettingsAttributesComponent} from './shared/components/user-detail-page/user-settings/user-settings-attributes/user-settings-attributes.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainMenuPageComponent,\n  },\n  {\n    path: 'api-callback',\n    component: AuthCallbackComponent,\n  },\n  {\n    path: 'organizations',\n    loadChildren: () => import('./vos/vos.module').then(m => m.VosModule),\n  },\n  {\n    path: 'admin',\n    loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),\n  },\n  {\n    path: 'facilities',\n    loadChildren: () => import('./facilities/facilities.module').then(m => m.FacilitiesModule),\n  },\n  {\n    path: 'profile',\n    component: UserProfileComponent,\n    children: [\n      {\n        path: '',\n        component: UserOverviewComponent,\n        data: {animation: 'UserOverviewPage'}\n      },\n      {\n        path: 'detail',\n        component: UserDetailComponent,\n        data: {animation: 'UserDetailPage'}\n      },\n      {\n        path: 'organizations',\n        component: UserOrganizationsComponent,\n        data: {animation: 'UserOrganizationsPage'}\n      },\n      {\n        path: 'groups',\n        component: UserGroupsComponent,\n        data: {animation: 'UserGroupsPage'}\n      },\n      {\n        path: 'settings',\n        component: UserSettingsComponent,\n        children: [\n          {\n            path: '',\n            component: UserSettingsOverviewComponent,\n            data: {animation: 'UserSettingsOverviewPage'}\n          },\n          {\n            path: 'attributes',\n            component: UserSettingsAttributesComponent,\n            data: {animation: 'UserAttributesPage'}\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    preloadingStrategy: PreloadAllModules,\n    scrollPositionRestoration: 'enabled'\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","export default \"#content-inner {\\n  position: relative;\\n}\\n\\n#footer {\\n  position: absolute;\\n  height: 200px;\\n  bottom: 0;\\n  width: 100%;\\n}\\n\\n@media (max-width: 768px) {\\n  #footer {\\n    height: 450px;\\n  }\\n}\\n\\n#content-wrap {\\n  padding-bottom: 250px;\\n  padding-top: 10px;\\n}\\n\\n@media (max-width: 768px) {\\n  #content-wrap {\\n    padding-bottom: 500px;\\n  }\\n}\\n\\n.beta-warning {\\n  overflow: hidden;\\n  height: 48px;\\n  position: fixed;\\n  z-index: 999999;\\n  top: 0;\\n  background-color: #ffbfc5;\\n  width: 100%;\\n  color: #d32f2f;\\n  text-align: center;\\n  font-weight: 500;\\n  padding: 6px;\\n  line-height: 36px;\\n  font-size: 1.2rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwiYXBwcy9hZG1pbi1ndWkvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0E7RUFDRSxrQkFBQTtBQ0pGOztBRE9BO0VBQ0Usa0JBQUE7RUFDQSxhQUFBO0VBQ0EsU0FBQTtFQUNBLFdBQUE7QUNKRjs7QURNRTtFQU5GO0lBT0ksYUFBQTtFQ0hGO0FBQ0Y7O0FETUE7RUFDRSxxQkFBQTtFQUNBLGlCQUFBO0FDSEY7O0FESUU7RUFIRjtJQUlJLHFCQUFBO0VDREY7QUFDRjs7QURJQTtFQUNFLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0EsTUFBQTtFQUNBLHlCQUFBO0VBQ0EsV0FBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7QUNERiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb250ZW50IHtcbiAgLy9tYXJnaW4tdG9wOiAxMTJweDtcbiAgLy9taW4taGVpZ2h0OiBjYWxjKDEwMHZoIC0gMTEycHgpO1xufVxuXG4jY29udGVudC1pbm5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuI2Zvb3RlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcblxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBoZWlnaHQ6IDQ1MHB4O1xuICB9XG59XG5cbiNjb250ZW50LXdyYXAge1xuICBwYWRkaW5nLWJvdHRvbTogMjUwcHg7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogNTAwcHg7XG4gIH1cbn1cblxuLmJldGEtd2FybmluZyB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGhlaWdodDogNDhweDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiA5OTk5OTk7XG4gIHRvcDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMTkxLCAxOTcpO1xuICB3aWR0aDogMTAwJTtcbiAgY29sb3I6ICNkMzJmMmY7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgcGFkZGluZzogNnB4O1xuICBsaW5lLWhlaWdodDogMzZweDtcbiAgZm9udC1zaXplOiAxLjJyZW07XG59XG4iLCIjY29udGVudC1pbm5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuI2Zvb3RlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAjZm9vdGVyIHtcbiAgICBoZWlnaHQ6IDQ1MHB4O1xuICB9XG59XG5cbiNjb250ZW50LXdyYXAge1xuICBwYWRkaW5nLWJvdHRvbTogMjUwcHg7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICNjb250ZW50LXdyYXAge1xuICAgIHBhZGRpbmctYm90dG9tOiA1MDBweDtcbiAgfVxufVxuXG4uYmV0YS13YXJuaW5nIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgaGVpZ2h0OiA0OHB4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDk5OTk5OTtcbiAgdG9wOiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZiZmM1O1xuICB3aWR0aDogMTAwJTtcbiAgY29sb3I6ICNkMzJmMmY7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgcGFkZGluZzogNnB4O1xuICBsaW5lLWhlaWdodDogMzZweDtcbiAgZm9udC1zaXplOiAxLjJyZW07XG59Il19 */\"","import { Component, HostListener, OnInit } from '@angular/core';\nimport { AuthResolverService } from './core/services/common/auth-resolver.service';\nimport { AuthService } from './core/services/common/auth.service';\nimport { CacheHelperService } from './core/services/common/cache-helper.service';\nimport { AuthzService } from '@perun-web-apps/perun/services';\nimport { PerunPrincipal } from '@perun-web-apps/perun/models';\nimport { environment } from '../environments/environment';\nimport { StoreService } from './core/services/common/store.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    private authzService: AuthzService,\n    private authResolver: AuthResolverService,\n    private authService: AuthService,\n    private cache: CacheHelperService,\n    private store: StoreService\n  ) {\n\n    this.cache.init();\n    this.getScreenSize(null);\n  }\n\n  public static minWidth = 992;\n\n  sidebarMode: 'over' | 'push' | 'side' = 'side';\n  lastScreenWidth: number;\n\n  principal: PerunPrincipal;\n  isProduction = false;\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.sidebarMode = this.isMobile() ? 'over' : 'side';\n\n    this.lastScreenWidth = window.innerWidth;\n  }\n\n  isMobile(): boolean {\n    return window.innerWidth <= AppComponent.minWidth;\n  }\n\n  ngOnInit(): void {\n    this.isProduction = environment.production;\n    this.principal = this.store.getPerunPrincipal();\n  }\n\n  getTopGap() {\n    return environment.production ? 112 : 64;\n  }\n\n  getSideNavMarginTop() {\n    return environment.production ? '112px' : '64px';\n  }\n\n  getSideNavMinHeight() {\n    return environment.production ? 'calc(100vh - 112px)' : 'calc(100vh - 64px)';\n  }\n\n  getNavMenuTop() {\n    return environment.production ? '48px' : '0';\n  }\n\n  getContentInnerMinHeight() {\n    // 64 for nav (+48) when alert is shown\n    // 210 for footer, 510 for footer on mobile\n\n    let footerSpace = this.isMobile() ? '510' : '210';\n    footerSpace = '0';\n    return environment.production ? 'calc((100vh - 112px) + ' + footerSpace + 'px)' : 'calc((100vh - 64px) + ' + footerSpace + 'px)';\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, forwardRef, NgModule, Provider } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {SharedModule} from './shared/shared.module';\nimport { MainMenuPageComponent } from './main-menu-page/main-menu-page.component';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {CoreModule} from './core/core.module';\nimport {RouteReuseStrategy} from '@angular/router';\nimport {CacheRouteReuseStrategy} from './core/services/common/cache-route-reuse-strategy';\nimport {MatIconModule} from '@angular/material';\nimport {CustomIconService} from './core/services/api/custom-icon.service';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { ApiService } from './core/services/api/api.service';\nimport { AppConfigService } from './core/services/common/app-config.service';\n// @ts-ignore\nimport { ApiModule } from '@perun-web-apps/perun/openapi';\n// @ts-ignore\nimport { ApiConfiguration } from '@perun-web-apps/perun/openapi';\nimport { StoreService } from './core/services/common/store.service';\nimport { ApiInterceptor } from './core/services/api/ApiInterceptor';\n\n\nexport const API_INTERCEPTOR_PROVIDER: Provider = {\n  provide: HTTP_INTERCEPTORS,\n  useExisting: forwardRef(() => ApiInterceptor),\n  multi: true\n};\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nexport function ApiConfigurationFactory(store: StoreService): ApiConfiguration {\n  return {\n    rootUrl: store.get('api_url')\n  };\n}\n\nconst loadConfigs = (appConfig: AppConfigService) => {\n  return () => {\n    return appConfig.loadConfigs();\n  };\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainMenuPageComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    HttpClientModule,\n    SharedModule,\n    CoreModule,\n    AppRoutingModule,\n    MatIconModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    ApiModule\n  ],\n  providers: [\n    AppConfigService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: loadConfigs,\n      multi: true,\n      deps: [AppConfigService]\n    },\n    {\n      provide: ApiConfiguration,\n      useFactory: ApiConfigurationFactory,\n      deps: [StoreService]\n    },\n    {\n    provide: RouteReuseStrategy,\n    useClass: CacheRouteReuseStrategy\n    },\n    CustomIconService,\n    {\n      provide: PERUN_API_SERVICE,\n      useClass: ApiService\n    },\n    ApiInterceptor,\n    API_INTERCEPTOR_PROVIDER\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  constructor(\n    private customIconService: CustomIconService,\n    private translate: TranslateService\n  ) {\n    this.translate.setDefaultLang('en');\n    this.translate.use('en');\n    this.customIconService.registerPerunRefreshIcon();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL2NvcmUvY29tcG9uZW50cy9hdXRoLWNhbGxiYWNrL2F1dGgtY2FsbGJhY2suY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-callback',\n  templateUrl: './auth-callback.component.html',\n  styleUrls: ['./auth-callback.component.scss']\n})\nexport class AuthCallbackComponent implements OnInit {\n\n  ngOnInit() {\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AuthService} from './services/common/auth.service';\nimport {AuthCallbackComponent} from './components/auth-callback/auth-callback.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    AuthService\n  ],\n  exports: [\n    AuthCallbackComponent,\n  ],\n  declarations: [AuthCallbackComponent],\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '../common/auth.service';\nimport { ApiRequestConfigurationService } from './api-request-configuration.service';\nimport { NotificatorService } from '../common/notificator.service';\nimport { RPCError } from '@perun-web-apps/perun/models';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n\n  constructor(\n    private authService: AuthService,\n    private apiRequestConfiguration: ApiRequestConfigurationService,\n    private notificator: NotificatorService,\n  ) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Apply the headers\n    req = req.clone({\n      setHeaders: {\n        'Authorization': this.authService.getAuthorizationHeaderValue()\n      }\n    });\n\n    // Also handle errors globally\n    return next.handle(req).pipe(\n      tap(x => x, err => {\n        // Handle this err\n        const errRpc = this.formatErrors(err, req);\n        if (errRpc === undefined) {\n          return throwError(err);\n        }\n        if (this.apiRequestConfiguration.shouldHandleError()) {\n          this.notificator.showRPCError(errRpc);\n        } else {\n          return throwError(errRpc);\n        }\n      })\n    );\n  }\n\n  private formatErrors(error: any, req: HttpRequest<any>) {\n    let rpcError;\n    if (error.error.errorId) {\n      rpcError = error.error;\n    } else {\n      rpcError = JSON.parse(error.error) as RPCError;\n    }\n    if (rpcError === undefined) {\n      return undefined;\n    }\n    rpcError.call = req.url;\n    rpcError.payload = req.body;\n    return rpcError;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiRequestConfigurationService {\n\n  private handleNextError = true;\n\n  dontHandleErrorForNext() {\n    this.handleNextError = false;\n  }\n\n  shouldHandleError() {\n    const value = this.handleNextError;\n    this.handleNextError = true;\n    return value;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {NotificatorService} from '../common/notificator.service';\nimport {AuthService} from '../common/auth.service';\nimport { PerunApiService } from '@perun-web-apps/perun/services';\nimport { RPCError } from '@perun-web-apps/perun/models';\nimport { StoreService } from '../common/store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService implements PerunApiService {\n\n  constructor(\n    private http: HttpClient,\n    private notificator: NotificatorService,\n    private authService: AuthService,\n    private storeService: StoreService\n  ) {\n  }\n\n  api_url: string;\n\n  getApiUrl(): string {\n    if (this.api_url === undefined) {\n      this.api_url = this.storeService.get('api_url');\n    }\n    return this.api_url + \"/\";\n  }\n\n  private formatErrors(error: any, url: string, payload: any, showError) {\n    const rpcError = error.error as RPCError;\n    rpcError.call = url;\n    rpcError.payload = payload;\n    if (showError) {\n      this.notificator.showRPCError(error.error);\n    }\n    return throwError(rpcError);\n  }\n\n  getHeaders(): HttpHeaders {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', this.authService.getAuthorizationHeaderValue());\n    return headers;\n  }\n\n  get(path: string, params: HttpParams = new HttpParams(), showError = true): Observable<any> {\n    const url = `${this.getApiUrl()}${path}`;\n    return this.http.get(url, { headers: this.getHeaders() })\n      .pipe(catchError(err => this.formatErrors(err, url, null, showError)));\n  }\n\n  put(path: string, body: Object = {}, showError = true): Observable<any> {\n    const url = `${this.getApiUrl()}${path}`;\n    const payload = JSON.stringify(body);\n    return this.http.put(\n      url,\n      payload, { headers: this.getHeaders() }\n    ).pipe(catchError(err => this.formatErrors(err, url, payload, showError)));\n  }\n\n  post(path: string, body: Object = {}, showError = true): Observable<any> {\n    const url = `${this.getApiUrl()}${path}`;\n    const payload = JSON.stringify(body);\n    let headers = this.getHeaders();\n    headers = headers.set('Content-Type', 'application/json; charset=utf-8');\n    return this.http.post(\n      url,\n      payload,\n      {headers: headers}\n    ).pipe(catchError(err => this.formatErrors(err, url, payload, showError)));\n  }\n\n  delete(path, showError = true): Observable<any> {\n    const url = `${this.getApiUrl()}${path}`;\n    return this.http.delete(\n      url,\n      { headers: this.getHeaders() }\n    ).pipe(catchError(err => this.formatErrors(err, url, null, showError)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {MatIconRegistry} from '@angular/material';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Injectable()\nexport class CustomIconService {\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ) {}\n\n  registerPerunRefreshIcon() {\n    this.matIconRegistry.addSvgIcon(\n      'refreshEnabled',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/img/PerunWebImages/refresh_tab-black.svg')\n    );\n    this.matIconRegistry.addSvgIcon(\n      'refreshDisabled',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/img/PerunWebImages/refresh_tab-grey.svg')\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { environment } from '../../../../environments/environment';\nimport { StoreService } from './store.service';\nimport { AuthResolverService } from './auth-resolver.service';\nimport { AuthzService } from '@perun-web-apps/perun/services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppConfigService {\n\n  constructor(private http: HttpClient,\n              private authService: AuthService,\n              private storeService: StoreService,\n              private authResolver: AuthResolverService,\n              private authzService: AuthzService) {}\n\n  loadConfigs(): Promise<void> {\n    return this.loadAppDefaultConfig()\n      .then(() => this.loadAppInstanceConfig())\n      .then(() => this.loadAdditionalData());\n  }\n\n  /**\n   * Load default configuration.\n   * If instance is not in production mode, the configuration is also\n   * taken as instance configuration and load additional data.\n   */\n  loadAppDefaultConfig() : Promise<void> {\n    return new Promise((resolve) => {\n\n      this.http.get('/assets/config/defaultConfig.json', {headers: this.getNoCacheHeaders()})\n        .subscribe(config => {\n          this.storeService.setDefaultConfig(config);\n          resolve();\n        });\n\n    });\n  }\n\n  /**\n   * Load instance configuration.\n   * If instance is in production mode, configuration mode is assigned to\n   * instance config and load additional data.\n   */\n  loadAppInstanceConfig() : Promise<void>  {\n    return new Promise((resolve, reject) => {\n\n      this.http.get('/assets/config/instanceConfig.json', { headers: this.getNoCacheHeaders() })\n        .subscribe(config => {\n          this.storeService.setInstanceConfig(config);\n          resolve();\n        }, () => {\n          if (environment.production) {\n            console.error('Failed to load instance config.');\n            reject();\n          } else {\n            console.log('instance config not detected');\n            resolve();\n          }\n        });\n    });\n  }\n\n  getNoCacheHeaders() : HttpHeaders {\n    return new HttpHeaders({\n      'Cache-Control':  'no-cache, no-store, must-revalidate, post-check=0, pre-check=0',\n      'Pragma': 'no-cache',\n      'Expires': '0'\n    });\n  }\n\n  /**\n   * Load additional data. First it init authService with necessarily data. Then start authentication and after user is\n   * authenticated the principal is loaded.\n   * @param config of the instance\n   */\n  loadAdditionalData(): Promise<any> {\n    return new Promise((resolve) => {\n      this.authService.loadConfigData();\n\n      this.authService.authenticate().then(() => {\n\n        this.loadPrincipal().then( () => {\n          resolve();\n        });\n      });\n\n    });\n  }\n\n  /**\n   * Load principal\n   */\n  loadPrincipal(): Promise<any> {\n    return this.authzService.getPerunPrincipal()\n      .toPromise()\n      .then(perunPrincipal => {\n        this.storeService.setPerunPrincipal(perunPrincipal);\n        this.authResolver.init(perunPrincipal);\n    });\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { PerunPrincipal, Role } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthResolverService {\n\n  constructor() {\n  }\n\n  private principal: PerunPrincipal;\n\n  private principalRoles: Set<Role> = new Set<Role>();\n\n  private editableFacilities: number[] = [];\n  private editableVos: number[] = [];\n  private members: number[] = [];\n  private user: number;\n  private editableGroups: number[] = [];\n  private observableVos: number[] = [];\n  private hasGroupInTheseVos: number[] = [];\n\n  init(principal: PerunPrincipal): void {\n    this.principal = principal;\n    this.initData(principal);\n  }\n  public canManageFacilities(): boolean {\n    return this.hasAtLeasOne(Role.PERUNADMIN, Role.FACILITYADMIN);\n  }\n\n  public isPerunAdmin(): boolean {\n    return this.principalRoles.has(Role.PERUNADMIN);\n  }\n\n  public isVoAdmin(): boolean {\n    return this.hasAtLeasOne(Role.PERUNADMIN, Role.VOADMIN);\n  }\n\n  public isThisVoAdminOrObserver(id: number): boolean {\n    return (this.editableVos.includes(id) || this.observableVos.includes(id) || this.principalRoles.has(Role.PERUNADMIN));\n  }\n\n  public isThisVoAdmin(id: number): boolean {\n    return (this.editableVos.includes(id) || this.principalRoles.has(Role.PERUNADMIN));\n  }\n\n  public isGroupAdmin(): boolean {\n    return this.hasAtLeasOne(Role.PERUNADMIN, Role.GROUPADMIN);\n  }\n\n  public isThisGroupAdmin(id: number): boolean {\n    return (this.editableGroups.includes(id) || this.principalRoles.has(Role.PERUNADMIN));\n  }\n\n  public isGroupAdminInThisVo(id: number): boolean {\n    return (this.hasGroupInTheseVos.includes(id));\n  }\n\n  public isFacilityAdmin(): boolean {\n    return this.hasAtLeasOne(Role.PERUNADMIN, Role.FACILITYADMIN);\n  }\n\n  public isThisFacilityAdmin(id: number): boolean {\n    return (this.editableFacilities.includes(id) || this.principalRoles.has(Role.PERUNADMIN));\n  }\n\n  isVoObserver(): boolean {\n    return (this.hasAtLeasOne(Role.PERUNADMIN, Role.VOOBSERVER));\n  }\n\n  isThisVoObserver(id: number): boolean {\n    return (this.principalRoles.has(Role.PERUNADMIN) || this.observableVos.includes(id));\n  }\n\n  public getMemberIds(): number[] {\n    return this.members;\n  }\n\n  /**\n   * Initialises principal data which are used for later verification\n   *\n   * @param principal given principal\n   */\n  private initData(principal: PerunPrincipal) {\n    this.user = principal.user.id;\n    for (const [key, value] of Object.entries(this.principal.roles)) {\n      if (principal.roles.hasOwnProperty(key)) {\n        this.principalRoles.add(<Role>key);\n      }\n      for (const [keyInner, valueInner] of Object.entries(value)) {\n        switch (key) {\n          case Role.VOADMIN: {\n            this.editableVos = <number[]>valueInner;\n            break;\n          }\n          case Role.FACILITYADMIN: {\n            this.editableFacilities = <number[]>valueInner;\n            break;\n          }\n          case Role.GROUPADMIN: {\n            if (keyInner === 'Group') {\n              this.editableGroups = <number[]>valueInner;\n            }\n            if (keyInner === 'Vo') {\n              this.hasGroupInTheseVos = <number[]>valueInner;\n            }\n            break;\n          }\n          case Role.SELF: {\n            if (keyInner === 'Member') {\n              this.members = <number[]>valueInner;\n            }\n            break;\n          }\n          case Role.VOOBSERVER: {\n            this.observableVos = <number[]>valueInner;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns true if the principal has at least one of the given roles.\n   * Otherwise, returns false\n   *\n   * @param roles specified roles\n   */\n  private hasAtLeasOne(...roles: Role[]): boolean {\n    for (const role of roles) {\n      if (this.principalRoles.has(role)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { EventEmitter, Injectable, Injector } from '@angular/core';\nimport {User, UserManager, UserManagerSettings} from 'oidc-client';\nimport {from, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { StoreService } from './store.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private router: Router;\n\n  constructor(\n    private injector: Injector,\n    private store: StoreService\n  ) {\n    setTimeout(() => {\n      this.router = this.injector.get(Router);\n    });\n  }\n  manager: UserManager;\n\n  userSet: EventEmitter<User> = new EventEmitter<User>();\n\n  user: User = null;\n  loggedIn = false;\n\n  redirectUrl: string;\n\n\n  getUserManager(): UserManager {\n    return this.manager;\n  }\n\n  getClientSettings(): UserManagerSettings {\n    return {\n      authority: this.store.get('oidc_client', 'oauth_authority'),\n      client_id: this.store.get('oidc_client', 'oauth_client_id'),\n      redirect_uri: this.store.get('oidc_client', 'oauth_redirect_uri'),\n      post_logout_redirect_uri: this.store.get('oidc_client', 'oauth_post_logout_redirect_uri'),\n      response_type: 'id_token token',\n      scope: 'openid profile perun_api perun_admin',\n      filterProtocolClaims: true,\n      loadUserInfo: true,\n      automaticSilentRenew: true,\n      silent_redirect_uri: this.store.get('oidc_client', 'oauth_silent_redirect_uri')\n    };\n  }\n\n  loadConfigData() {\n    this.manager = new UserManager(this.getClientSettings());\n    this.setUser();\n    this.manager.events.addUserLoaded(user => {\n      this.user = user;\n    });\n  }\n\n  authenticate(): Promise<any> {\n    const currentPathname = window.location.pathname;\n\n    if (currentPathname === '/api-callback') {\n      return this.handleAuthCallback();\n    } else {\n      return this.verifyAuthentication(currentPathname);\n    }\n  }\n\n  logout() {\n    this.manager.signoutRedirect()\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  isLoggedInPromise(): Observable<boolean> {\n    return from(this.manager.getUser()).pipe(map<User, boolean>((user) => {\n      if (user) {\n        return true;\n      } else {\n        return false;\n      }\n    }));\n  }\n\n  isLoggedIn(): boolean {\n    return this.user != null && !this.user.expired;\n  }\n\n  getClaims(): any {\n    return this.user.profile;\n  }\n\n  getAuthorizationHeaderValue(): string {\n    return !!this.user ? 'Bearer ' + this.user.access_token : '';\n  }\n\n  startAuthentication(): Promise<void> {\n    return this.manager.signinRedirect();\n  }\n\n  completeAuthentication(): Promise<void> {\n    return this.manager.signinRedirectCallback().then(user => {\n      this.user = user;\n      this.userSet.emit(this.user);\n    });\n  }\n\n  startSigninMainWindow() {\n    this.manager.signinRedirect({ data: this.redirectUrl }).then(function () {\n      console.log('signinRedirect done');\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  setUser() {\n    this.manager.getUser().then( user => {\n      this.user = user;\n    });\n  }\n\n  /**\n   * Check if the user is logged in and if not,\n   * save current path and start authentication;\n   *\n   * @param path current url path\n   */\n  private verifyAuthentication(path: string): Promise<any> {\n    return this.isLoggedInPromise()\n      .toPromise()\n      .then(isLoggedIn => {\n      if (!isLoggedIn) {\n        sessionStorage.setItem('auth:redirect', path);\n        this.startAuthentication().then(r => console.log('R:' + r));\n      }\n    });\n  }\n\n  /**\n   * This method is used to handle oauth callbacks.\n   *\n   * First, it finishes the authentication and then redirects user to the url\n   * he wanted to visit.\n   *\n   */\n  private handleAuthCallback(): Promise<any> {\n    return this.completeAuthentication().then(() => {\n      const redirectUrl = sessionStorage.getItem('auth:redirect');\n      if (redirectUrl) {\n        sessionStorage.removeItem('auth:redirect');\n        this.router.navigate([redirectUrl]);\n      } else {\n        this.router.navigate(['/']);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {NavigationStart, Router, RouteReuseStrategy} from '@angular/router';\nimport {CacheRouteReuseStrategy} from './cache-route-reuse-strategy';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheHelperService {\n\n  constructor(\n    private router: Router,\n    private routeReuseStrategy: RouteReuseStrategy\n  ) {\n    const cache = routeReuseStrategy as CacheRouteReuseStrategy;\n\n    router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        if (event.navigationTrigger === 'popstate') {\n          cache.setLastNavigationType('back');\n        } else {\n          cache.setLastNavigationType('direct');\n        }\n      }\n    });\n  }\n\n  // Do not remove. This method is used to instantiate this service.\n  public init(): void {\n  }\n}\n","import {RouteReuseStrategy} from '@angular/router/';\nimport {ActivatedRouteSnapshot, DetachedRouteHandle} from '@angular/router';\nimport {VoMembersComponent} from '../../../vos/pages/vo-detail-page/vo-members/vo-members.component';\nimport {VoGroupsComponent} from '../../../vos/pages/vo-detail-page/vo-groups/vo-groups.component';\nimport {VoApplicationsComponent} from '../../../vos/pages/vo-detail-page/vo-applications/vo-applications.component';\nimport {GroupApplicationsComponent} from '../../../vos/pages/group-detail-page/group-applications/group-applications.component';\nimport {GroupResourcesComponent} from '../../../vos/pages/group-detail-page/group-resources/group-resources.component';\nimport {GroupSubgroupsComponent} from '../../../vos/pages/group-detail-page/group-subgroups/group-subgroups.component';\nimport {GroupMembersComponent} from '../../../vos/pages/group-detail-page/group-members/group-members.component';\nimport {\n  FacilityAllowedGroupsComponent\n} from '../../../facilities/pages/facility-detail-page/facility-allowed-groups/facility-allowed-groups.component';\nimport {FacilityResourcesComponent} from '../../../facilities/pages/facility-detail-page/facility-resources/facility-resources.component';\nimport {MemberGroupsComponent} from '../../../vos/pages/member-detail-page/member-groups/member-groups.component';\nimport {\n  VoResourcesPreviewComponent\n} from '../../../vos/pages/vo-detail-page/vo-resources/vo-resources-preview/vo-resources-preview.component';\nimport {VoResourcesStatesComponent} from '../../../vos/pages/vo-detail-page/vo-resources/vo-resources-states/vo-resources-states.component';\nimport { AdminUsersComponent } from '../../../admin/pages/admin-page/admin-users/admin-users.component';\n\nexport class CachedRoute {\n  routeHandle: DetachedRouteHandle;\n  saveTimeStamp: number;\n}\n\nexport class CacheRouteReuseStrategy implements RouteReuseStrategy {\n\n  // typeToComponentToHandlers: Map<string, Map<string, DetachedRouteHandle>>;\n  typeToComponentToHandlers: Map<string, Map<string, CachedRoute>>;\n\n  allowCachePages = [\n    {\n      type: 'vo',\n      components: [\n        VoMembersComponent.id,\n        VoGroupsComponent.id,\n        VoApplicationsComponent.id,\n        VoResourcesPreviewComponent.id,\n        VoResourcesStatesComponent.id\n      ]\n    },\n    {\n      type: 'group',\n      components: [\n        GroupMembersComponent.id,\n        GroupSubgroupsComponent.id,\n        GroupResourcesComponent.id,\n        GroupApplicationsComponent.id\n      ]\n    },\n    {\n      type: 'facility',\n      components: [\n        FacilityAllowedGroupsComponent.id,\n        FacilityResourcesComponent.id\n      ]\n    },\n    {\n      type: 'member',\n      components: [\n        MemberGroupsComponent.id\n      ]\n    },\n    {\n      type: 'admin',\n      components: [\n        AdminUsersComponent.id\n      ]\n    }\n  ];\n\n  private cacheTimeMs = 300_000;\n\n  resets = [\n    {\n      lastValue: null,\n      resetType: 'vo',\n      resetPath: ':voId',\n      param: 'voId'\n    },\n    {\n      lastValue: null,\n      resetType: 'group',\n      resetPath: ':voId/groups/:groupId',\n      param: 'groupId'\n    },\n    {\n      lastValue: null,\n      resetType: 'facility',\n      resetPath: ':facilityId',\n      param: 'facilityId'\n    },\n    {\n      lastValue: null,\n      resetType: 'member',\n      resetPath: ':voId/members/:memberId',\n      param: 'memberId'\n    },\n    {\n      lastValue: null,\n      resetType: 'admin',\n      resetPath: 'admin/users'\n    }\n  ];\n\n  private isUserNavigatingBack = false;\n\n  constructor(\n  ) {\n    this.typeToComponentToHandlers = new Map<string, Map<string, CachedRoute>>();\n    for (const pages of this.allowCachePages) {\n      this.typeToComponentToHandlers.set(pages.type, new Map<string, CachedRoute>());\n    }\n  }\n\n  setLastNavigationType(type: 'back' | 'direct'): void {\n    this.isUserNavigatingBack = type === 'back';\n  }\n\n  /**\n   * Checks if some resets should be done on given route.\n   *\n   * Checks all resets and if their reset condition is fulfilled, pages of\n   * given type are removed from cache.\n   *\n   * @param newRoute new route\n   */\n  checkResets(newRoute: ActivatedRouteSnapshot): void {\n    const newPath = this.getPath(newRoute);\n\n    for (const reset of this.resets) {\n      // if the reset should be used and update it\n      if (reset.resetPath === newPath) {\n        const newParamValue = newRoute.params[reset.param];\n\n        // remove all cached pages for given type\n        if (reset.lastValue !== null && reset.lastValue !== newParamValue) {\n          this.typeToComponentToHandlers.get(reset.resetType).clear();\n        }\n\n        reset.lastValue = newParamValue;\n      }\n    }\n  }\n\n  shouldReuseRoute(before: ActivatedRouteSnapshot, curr:  ActivatedRouteSnapshot): boolean {\n    this.checkResets(curr);\n    return before.routeConfig === curr.routeConfig;\n  }\n\n  /**\n   * Return handlers from cache or null if they are not cached,\n   *\n   * @param route route\n   */\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    if (route.component) {\n      const componentName = this.getComponentName(route.component);\n      for (const pages of this.allowCachePages) {\n        if (pages.components.indexOf(componentName) !== -1) {\n          const cachedData =  this.typeToComponentToHandlers.get(pages.type).get(componentName);\n\n          return cachedData === undefined ? null : cachedData.routeHandle;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns true if the route should be used from cache.\n   *\n   * @param route route\n   */\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    if (!this.isUserNavigatingBack) {\n      return false;\n    }\n\n    if (route.component) {\n      const componentName = this.getComponentName(route.component);\n      for (const pages of this.allowCachePages) {\n        const cachedData = this.typeToComponentToHandlers.get(pages.type).get(componentName);\n        if (cachedData !== undefined && (this.getCurrentTimestamp() - cachedData.saveTimeStamp) < this.cacheTimeMs) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns true if the route should be cached.\n   *\n   * @param route route\n   */\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    if (route.component) {\n      const componentName = this.getComponentName(route.component);\n      for (let i = 0; i < this.allowCachePages.length; ++i) {\n        const pages = this.allowCachePages[i];\n        if (pages.components.indexOf(componentName) !== -1) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Stores given handlers for given route.\n   *\n   * @param route route\n   * @param detachedTree handlers\n   */\n  store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle): void {\n    if (route.component) {\n      const type = this.getComponentType(route);\n      this.typeToComponentToHandlers\n        .get(type)\n        .set(this.getComponentName(route.component), {\n          routeHandle: detachedTree,\n          saveTimeStamp: this.getCurrentTimestamp()\n        });\n    }\n  }\n\n  private getCurrentTimestamp(): number {\n    return + Date.now();\n  }\n\n  /**\n   * Parses component name from its source.\n   *\n   * @param component in string format\n   */\n  private getComponentName(component: any) {\n    return component.id;\n  }\n\n  /**\n   * Get cache type for given component.\n   *\n   * @param route route\n   */\n  private getComponentType(route: ActivatedRouteSnapshot): string {\n    const componentName = this.getComponentName(route.component);\n    for (const pages of this.allowCachePages) {\n      if (pages.components.indexOf(componentName) !== -1) {\n        return pages.type;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns path from given route.\n   *\n   * @param route route\n   */\n  private getPath(route: ActivatedRouteSnapshot): string {\n    if (route.routeConfig !== null && route.routeConfig.path !== null) {\n      return route.routeConfig.path;\n    }\n    return '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NotificationData } from '../../../shared/models/NotificationData';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationStorageService {\n\n  constructor() { }\n\n  private notificationData : NotificationData[] = [];\n\n  newNotificationsCount = 0;\n\n  storeNotification(notification: NotificationData){\n    this.newNotificationsCount++;\n    this.notificationData.push(notification);\n  }\n\n  getNotifications(){\n    return this.notificationData;\n  }\n}\n","import { EventEmitter, Injectable, Output } from '@angular/core';\nimport { NotificationData } from '../../../shared/models/NotificationData';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RPCError } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificatorService {\n\n  constructor(\n    private translate: TranslateService\n  ) {\n  }\n\n  defaultAction: string;\n  defaultRpcMessage: string;\n\n  defaultErrorDelayMs = 5_000;\n  defaultSuccessDelayMs = 3_000;\n\n  @Output()\n  addNotification: EventEmitter<NotificationData> = new EventEmitter<NotificationData>();\n\n  getDefaultActionMessage(): string {\n    if (this.defaultAction === undefined) {\n      return this.defaultAction = this.translate.instant('NOTIFICATOR.NOTIFICATION.DEFAULT_ACTION');\n    } else {\n      return this.defaultAction;\n    }\n  }\n\n  getDefaultRpcMessage(): string {\n    if (this.defaultRpcMessage === undefined) {\n      return this.defaultRpcMessage = this.translate.instant('NOTIFICATOR.NOTIFICATION.DEFAULT_RPC_ERROR_MESSAGE');\n    } else {\n      return this.defaultRpcMessage;\n    }\n  }\n\n  /**\n   * Shows default RPC error\n   *\n   * @param rpcError - error returned by the backend\n   * @param errorMessage - custom message that will be displayed\n   */\n  showRPCError(rpcError: RPCError, errorMessage = this.getDefaultRpcMessage()): void {\n    this.showError(errorMessage + '\\n' + rpcError.name, rpcError, rpcError.message);\n  }\n\n  /**\n   * Shows error notification\n   *\n   * @param title - text that is shown on the notification\n   * @param error - RPC error\n   * @param description - text shown in the body of dialog which is displayed after clicking the action\n   * @param actionText - clickable text shown on the notification which starts specified or default action\n   * @param action - action which will be executed after clicking the actionText\n   */\n  showError(title: string, error?: RPCError, description?: string, actionText?: string, action?: () => void): void {\n    this.addNotification.emit({\n      type: 'error',\n      error: error,\n      description: description,\n      title: title,\n      actionText: actionText === undefined && description !== undefined ? this.getDefaultActionMessage() : actionText,\n      delay: this.defaultErrorDelayMs,\n      icon: 'error_outline',\n      action: action\n    });\n  }\n\n  /**\n   * Shows success notification\n   *\n   * @param title - text that is shown on the notification\n   * @param description - text shown in the body of dialog which is displayed after clicking the action\n   * @param actionText - clickable text shown on the notification which starts specified or default action\n   * @param action - action which will be executed after clicking the actionText\n   */\n  showSuccess(title: string, description?: string, actionText?: string, action?: () => void): void {\n    this.addNotification.emit({\n      type: 'success',\n      description: description,\n      title: title,\n      actionText: actionText === undefined && description !== undefined ? this.getDefaultActionMessage() : actionText,\n      delay: this.defaultSuccessDelayMs,\n      icon: 'done',\n      action: action\n    });\n  }\n}\n","import {EventEmitter, Injectable, Output} from '@angular/core';\nimport {SideMenuItem} from '../../../shared/side-menu/side-menu.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SideMenuService {\n\n  constructor() { }\n\n  @Output() accessItemsChange: EventEmitter<SideMenuItem[]> = new EventEmitter();\n  @Output() facilityItemsChange: EventEmitter<SideMenuItem[]> = new EventEmitter();\n  @Output() adminItemsChange: EventEmitter<SideMenuItem[]> = new EventEmitter();\n  @Output() userItemsChange: EventEmitter<SideMenuItem[]> = new EventEmitter();\n  @Output() resetChange: EventEmitter<void> = new EventEmitter();\n\n  setAccessMenuItems(items: SideMenuItem[]): void {\n    this.accessItemsChange.emit(items);\n  }\n\n  setFacilityMenuItems(items: SideMenuItem[]): void {\n    this.facilityItemsChange.emit(items);\n  }\n\n  setAdminItems(items: SideMenuItem[]): void {\n    this.adminItemsChange.emit(items);\n  }\n\n  setUserItems(items: SideMenuItem[]): void {\n    this.userItemsChange.emit(items);\n  }\n\n  reset(): void {\n    this.resetChange.emit();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PerunPrincipal } from '@perun-web-apps/perun/models';\n\n/**\n * Class that just store data about instance and default configuration.\n * No logic involved.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  private instanceConfig;\n  private defaultConfig;\n  private principal: PerunPrincipal;\n\n  constructor() { }\n\n  setInstanceConfig(instanceConfig: any) {\n    this.instanceConfig = instanceConfig;\n  }\n\n  setDefaultConfig(defaultConfig: any) {\n    this.defaultConfig = defaultConfig;\n  }\n\n  setPerunPrincipal(principal: PerunPrincipal): void {\n    this.principal = principal;\n  }\n\n  getPerunPrincipal(): PerunPrincipal {\n    return this.principal;\n  }\n\n  /**\n   * Get key from json configuration. If key is not present in instance\n   * configuration method returns value from default configuration.\n   * @param keys\n   */\n  get(...keys: string[]) : any {\n    let currentValue: string;\n\n    if (this.instanceConfig !== undefined) {\n      for (let i = 0; i < keys.length; ++i) {\n        if (i === 0) {\n          currentValue = this.instanceConfig[keys[i]];\n        } else {\n          if (currentValue === undefined) {\n            break;\n          }\n          currentValue = currentValue[keys[i]];\n        }\n      }\n    }\n\n    if (currentValue === undefined) {\n      for (let i = 0; i < keys.length; ++i) {\n        if (i === 0) {\n          currentValue = this.defaultConfig[keys[i]];\n        } else {\n          if (currentValue === undefined) {\n            console.error('Missing value in default config: ' + keys);\n            break;\n          }\n          currentValue = currentValue[keys[i]];\n        }\n      }\n    }\n\n    return currentValue;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL2ZhY2lsaXRpZXMvcGFnZXMvZmFjaWxpdHktZGV0YWlsLXBhZ2UvZmFjaWxpdHktYWxsb3dlZC1ncm91cHMvZmFjaWxpdHktYWxsb3dlZC1ncm91cHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FacilityService, VoService } from '@perun-web-apps/perun/services';\nimport { Facility, Group, Vo } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-facility-allowed-groups',\n  templateUrl: './facility-allowed-groups.component.html',\n  styleUrls: ['./facility-allowed-groups.component.scss']\n})\nexport class FacilityAllowedGroupsComponent implements OnInit {\n\n  static id = 'FacilityAllowedGroupsComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private voService: VoService,\n    private facilityService: FacilityService,\n    private route: ActivatedRoute\n  ) { }\n\n  facility: Facility;\n\n  vos: Vo[];\n\n  facilityId: number;\n\n  loading: boolean;\n\n  @Input()\n  groups: Group[] = [];\n  selected = 'all';\n\n  groupsToShow: Group[] = this.groups;\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(parentParams => {\n      this.facilityId = parentParams['facilityId'];\n\n      this.facilityService.getAllowedVos(this.facilityId).subscribe(vos => {\n          this.vos = vos;\n\n          this.refreshTable();\n        });\n    });\n  }\n\n\n  showGroup() {\n    if (this.selected !== 'all') {\n      this.groupsToShow = this.groups.filter(t => t.voId === parseInt(this.selected, 10));\n    } else {\n      this.groupsToShow = this.groups;\n    }\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.groups = [];\n    this.vos.forEach(vo => {\n      this.facilityService.getAllowedGroups(this.facilityId, vo.id).subscribe(group => {\n        this.groups =  this.groups.concat(group);\n\n        this.groupsToShow = this.groups;\n        this.loading = false;\n      });\n    });\n    if (this.vos.length === 0) {\n      this.loading = false;\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL2ZhY2lsaXRpZXMvcGFnZXMvZmFjaWxpdHktZGV0YWlsLXBhZ2UvZmFjaWxpdHktcmVzb3VyY2VzL2ZhY2lsaXR5LXJlc291cmNlcy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, Input, OnInit} from '@angular/core';\nimport {SideMenuService} from '../../../../core/services/common/side-menu.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatDialog} from '@angular/material';\nimport {\n  RemoveResourceDialogComponent} from '../../../../shared/components/dialogs/remove-resource-dialog/remove-resource-dialog.component';\nimport { FacilityService, ResourcesService } from '@perun-web-apps/perun/services';\nimport { Facility, RichResource } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-facility-resources',\n  templateUrl: './facility-resources.component.html',\n  styleUrls: ['./facility-resources.component.scss']\n})\nexport class FacilityResourcesComponent implements OnInit {\n\n  static id = 'FacilityResourcesComponent';\n\n  // class used for animation\n  @HostBinding('class.router-component') true;\n\n  constructor(private dialog: MatDialog,\n              private resourcesService: ResourcesService,\n              private sideMenuService: SideMenuService,\n              private facilityService: FacilityService,\n              private route: ActivatedRoute) {\n  }\n\n  @Input()\n  facility: Facility;\n  resources: RichResource[] = [];\n  selected = new SelectionModel<RichResource>(false, []);\n\n  filterValue = '';\n\n  loading: boolean;\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(parentParams => {\n      const facilityId = parentParams['facilityId'];\n\n      this.facilityService.getFacilityById(facilityId).subscribe(facility => {\n        this.facility = facility;\n\n        this.refreshTable();\n      });\n    });\n  }\n\n  removeResource() {\n    const dialogRef = this.dialog.open(RemoveResourceDialogComponent, {\n      width: '450px',\n      data: {facilityId: this.facility.id, resources: this.selected.selected}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.resourcesService.getAllResources(this.facility.id).subscribe(resources => {\n      this.resources = resources;\n      this.selected.clear();\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n}\n","export default \".buttons-container {\\n  display: grid;\\n  padding-top: 24px;\\n  grid-gap: 0;\\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\\n  grid-column-gap: 24px;\\n  grid-row-gap: 24px;\\n}\\n\\n.main-menu-button {\\n  color: #ffffff;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  min-width: 280px;\\n  min-height: 280px;\\n  padding: 30px;\\n}\\n\\n.main-menu-button:hover {\\n  text-decoration: none;\\n}\\n\\n.main-menu-button img {\\n  height: 120px;\\n}\\n\\n.main-menu-button h1 {\\n  font-weight: 500;\\n  font-size: 1.5rem;\\n  text-align: center;\\n}\\n\\n.main-menu-button p {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvbWFpbi1tZW51LXBhZ2UvbWFpbi1tZW51LXBhZ2UuY29tcG9uZW50LnNjc3MiLCJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL21haW4tbWVudS1wYWdlL21haW4tbWVudS1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLGlCQUFBO0VBQ0EsV0FBQTtFQUNBLDREQUFBO0VBQ0EscUJBQUE7RUFDQSxrQkFBQTtBQ0NGOztBREVBO0VBQ0UsY0FBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGFBQUE7QUNDRjs7QURDRTtFQUNFLHFCQUFBO0FDQ0o7O0FEQ0U7RUFDRSxhQUFBO0FDQ0o7O0FEQ0U7RUFDRSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURDRTtFQUNFLGtCQUFBO0FDQ0oiLCJmaWxlIjoiYXBwcy9hZG1pbi1ndWkvc3JjL2FwcC9tYWluLW1lbnUtcGFnZS9tYWluLW1lbnUtcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idXR0b25zLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xuICBncmlkLWdhcDogMDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLG1pbm1heCgyODBweCwxZnIpKTtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAyNHB4O1xuICBncmlkLXJvdy1nYXA6IDI0cHg7XG59XG5cbi5tYWluLW1lbnUtYnV0dG9uIHtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1pbi13aWR0aDogMjgwcHg7XG4gIG1pbi1oZWlnaHQ6IDI4MHB4O1xuICBwYWRkaW5nOiAzMHB4O1xuXG4gICY6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxuICAmIGltZyB7XG4gICAgaGVpZ2h0OiAxMjBweFxuICB9XG4gICYgaDEge1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG4gICYgcCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG4iLCIuYnV0dG9ucy1jb250YWluZXIge1xuICBkaXNwbGF5OiBncmlkO1xuICBwYWRkaW5nLXRvcDogMjRweDtcbiAgZ3JpZC1nYXA6IDA7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDI4MHB4LCAxZnIpKTtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAyNHB4O1xuICBncmlkLXJvdy1nYXA6IDI0cHg7XG59XG5cbi5tYWluLW1lbnUtYnV0dG9uIHtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1pbi13aWR0aDogMjgwcHg7XG4gIG1pbi1oZWlnaHQ6IDI4MHB4O1xuICBwYWRkaW5nOiAzMHB4O1xufVxuLm1haW4tbWVudS1idXR0b246aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4ubWFpbi1tZW51LWJ1dHRvbiBpbWcge1xuICBoZWlnaHQ6IDEyMHB4O1xufVxuLm1haW4tbWVudS1idXR0b24gaDEge1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLm1haW4tbWVudS1idXR0b24gcCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {SideMenuService} from '../core/services/common/side-menu.service';\nimport {AuthResolverService} from '../core/services/common/auth-resolver.service';\n\n@Component({\n  selector: 'app-main-menu-page',\n  templateUrl: './main-menu-page.component.html',\n  styleUrls: ['./main-menu-page.component.scss']\n})\nexport class MainMenuPageComponent implements OnInit {\n\n  constructor(\n    private sideMenuService: SideMenuService,\n    public authResolver: AuthResolverService\n  ) { }\n\n  ngOnInit() {\n    this.sideMenuService.reset();\n  }\n}\n","import { animate, query, state, style, transition, trigger } from '@angular/animations';\n\nexport const openClose =\n  trigger('openClose', [\n  state('open', style({\n    overflow: 'hidden'\n  })),\n  state('closed', style({\n    height: '0px',\n    overflow: 'hidden'\n  })),\n  transition('open <=> closed', [\n    animate('.3s ease-in')\n  ]),\n]);\n\nexport const flyInOut = trigger('flyInOut', [\n  transition(':enter', [\n    style({transform: 'translateX(100%)'}),\n    animate('.25s')\n  ]),\n  transition(':leave', [\n    animate('.5s', style({transform: 'translateX(100%)'}))\n  ])\n]);\n\nexport const rollInOut = trigger('rollInOut', [\n  transition(':enter', [\n    style({height: '0px'}),\n    animate('.25s')\n  ]),\n  transition(':leave', [\n    animate('.25s', style({height: '0px'}))\n  ])\n]);\n\nexport const fadeIn =\n  trigger('routeAnimations', [\n    transition( '* => *', [\n      style({ position: 'relative' }),\n      query(':enter',\n        [\n          style({\n            // position: 'absolute',\n            width: '100%',\n            opacity: 0\n          })\n        ],\n        { optional: true }\n      ),\n\n      query(':leave',\n        [\n          style({\n            position: 'absolute',\n            width: '100%',\n            opacity: 1\n          }),\n          animate('0.15s', style({\n            position: 'absolute',\n            width: '100%',\n            opacity: 0\n          }))\n        ],\n        { optional: true }\n      ),\n\n      query(':enter',\n        [\n          style({\n            position: 'absolute',\n            width: '100%',\n            opacity: 0\n          }),\n          animate('0.15s', style({\n            position: 'absolute',\n            width: '100%',\n            opacity: 1\n          }))\n        ],\n        { optional: true }\n      )\n    ])\n  ]);\n\nexport const tagsOpenClose =\n  trigger('tagsOpenClose', [\n    state('open', style({\n\n    })),\n    state('closed', style({\n      width: '0px',\n      height: '0px'\n    })),\n    transition('open <=> closed', [\n      animate('.3s ease-in')\n    ]),\n  ]);\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2FuaW1hdGVkLXJvdXRlci1vdXRsZXQvYW5pbWF0ZWQtcm91dGVyLW91dGxldC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {RouterOutlet} from '@angular/router';\nimport {fadeIn} from '../../animations/Animations';\n\n@Component({\n  selector: 'app-animated-router-outlet',\n  templateUrl: './animated-router-outlet.component.html',\n  styleUrls: ['./animated-router-outlet.component.scss'],\n  animations: [\n    fadeIn\n  ]\n})\nexport class AnimatedRouterOutletComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2F0dHJpYnV0ZXMtbGlzdC9hdHRyaWJ1dGUtdmFsdWUvYXR0cmlidXRlLXZhbHVlLWJvb2xlYW4vYXR0cmlidXRlLXZhbHVlLWJvb2xlYW4uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { Attribute } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-attribute-value-boolean',\n  templateUrl: './attribute-value-boolean.component.html',\n  styleUrls: ['./attribute-value-boolean.component.scss']\n})\nexport class AttributeValueBooleanComponent implements OnInit {\n\n  constructor() {\n  }\n\n  @Input()\n  attribute: Attribute;\n\n  @Output() sendEventToParent = new EventEmitter();\n\n  ngOnInit() {\n  }\n\n  _sendEventToParent() {\n    this.sendEventToParent.emit();\n  }\n}\n","export default \".chip-word-break {\\n  word-break: break-all;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvYXR0cmlidXRlcy1saXN0L2F0dHJpYnV0ZS12YWx1ZS9hdHRyaWJ1dGUtdmFsdWUtbGlzdC9hdHRyaWJ1dGUtdmFsdWUtbGlzdC5jb21wb25lbnQuc2NzcyIsImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvYXR0cmlidXRlcy1saXN0L2F0dHJpYnV0ZS12YWx1ZS9hdHRyaWJ1dGUtdmFsdWUtbGlzdC9hdHRyaWJ1dGUtdmFsdWUtbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFBO0FDQ0YiLCJmaWxlIjoiYXBwcy9hZG1pbi1ndWkvc3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9hdHRyaWJ1dGVzLWxpc3QvYXR0cmlidXRlLXZhbHVlL2F0dHJpYnV0ZS12YWx1ZS1saXN0L2F0dHJpYnV0ZS12YWx1ZS1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNoaXAtd29yZC1icmVhayB7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbn1cbiIsIi5jaGlwLXdvcmQtYnJlYWsge1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59Il19 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {MatChipInputEvent} from '@angular/material';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport { Attribute } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-attribute-value-list',\n  templateUrl: './attribute-value-list.component.html',\n  styleUrls: ['./attribute-value-list.component.scss']\n})\nexport class AttributeValueListComponent implements OnInit {\n\n  constructor() {\n  }\n\n  @Input()\n  attribute: Attribute;\n\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  @Output() sendEventToParent = new EventEmitter();\n\n  ngOnInit() {\n    if (this.attribute.value === undefined) {\n      this.attribute.value = [];\n    }\n  }\n\n  _sendEventToParent() {\n    this.sendEventToParent.emit();\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const valueL = event.value;\n\n    if ((valueL || '').trim()) {\n      this.attribute.value.push(valueL.trim());\n    }\n\n    if (input) {\n      input.value = '';\n    }\n    this.sendEventToParent.emit();\n  }\n\n  remove(chip: string): void {\n    const index = this.attribute.value.indexOf(chip);\n\n    if (index >= 0) {\n      this.attribute.value.splice(index, 1);\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2F0dHJpYnV0ZXMtbGlzdC9hdHRyaWJ1dGUtdmFsdWUvYXR0cmlidXRlLXZhbHVlLW1hcC9hdHRyaWJ1dGUtdmFsdWUtbWFwLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Input, OnInit} from '@angular/core';\nimport { Attribute } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-attribute-value-map',\n  templateUrl: './attribute-value-map.component.html',\n  styleUrls: ['./attribute-value-map.component.scss']\n})\nexport class AttributeValueMapComponent implements OnInit {\n\n  constructor() {\n  }\n\n  @Input()\n  attribute: Attribute;\n\n  keys: string[] = [];\n  values: string[] = [];\n\n\n  ngOnInit() {\n    if (this.attribute.value !== undefined) {\n      const map = this.attribute.value as Map<string, string>;\n      for (const [key, value] of Object.entries(map)) {\n        this.keys.push(key);\n        this.values.push(value);\n      }\n    }\n  }\n\n  customTrackBy(index: number, obj: any): any {\n    return index;\n  }\n\n  addValue() {\n    this.keys.push('');\n    this.values.push('');\n  }\n\n  removeValue(index: number) {\n    this.keys.splice(index, 1);\n    this.values.splice(index, 1);\n  }\n\n  updateAttribute() {\n    const map = {};\n    for (let i = 0; i < this.keys.length; i++) {\n      map[this.keys[i]] = this.values[i];\n    }\n    if (this.keys.length === 0) {\n      this.attribute.value = undefined;\n    } else {\n      this.attribute.value = map;\n    }\n  }\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2F0dHJpYnV0ZXMtbGlzdC9hdHRyaWJ1dGUtdmFsdWUvYXR0cmlidXRlLXZhbHVlLXN0cmluZy9hdHRyaWJ1dGUtdmFsdWUtc3RyaW5nLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { Attribute } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-attribute-value-string',\n  templateUrl: './attribute-value-string.component.html',\n  styleUrls: ['./attribute-value-string.component.scss']\n})\nexport class AttributeValueStringComponent implements OnInit {\n\n  constructor() {\n  }\n\n  @Input()\n  attribute: Attribute;\n\n  @Output() sendEventToParent = new EventEmitter();\n\n  value: string;\n\n  ngOnInit() {\n    this.value = this.attribute.value;\n  }\n\n  _sendEventToParent() {\n    this.sendEventToParent.emit();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2F0dHJpYnV0ZXMtbGlzdC9hdHRyaWJ1dGUtdmFsdWUvYXR0cmlidXRlLXZhbHVlLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {AttributeValueMapComponent} from './attribute-value-map/attribute-value-map.component';\nimport { Attribute } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-attribute-value',\n  templateUrl: './attribute-value.component.html',\n  styleUrls: ['./attribute-value.component.scss']\n})\nexport class AttributeValueComponent implements OnInit {\n\n  constructor() {\n  }\n\n  @ViewChild('map', {static: false})\n  mapComponent: AttributeValueMapComponent;\n\n  @Input()\n  attribute: Attribute;\n\n  @Output() sendEventToParent2 = new EventEmitter();\n\n  ngOnInit(): void {\n  }\n\n  updateMapAttribute() {\n    if (this.attribute.type === 'java.util.LinkedHashMap') {\n      this.mapComponent.updateAttribute();\n    }\n  }\n\n  _sendEventToParent2() {\n    this.sendEventToParent2.emit();\n  }\n}\n","export default \"table {\\n  width: 100% !important;\\n}\\n\\n.mat-row {\\n  height: auto;\\n}\\n\\n.mat-cell {\\n  padding: 8px 8px 8px 0;\\n}\\n\\n.mat-column-select {\\n  flex: 0 0 25% !important;\\n  min-width: 50px !important;\\n}\\n\\n.mat-column-id {\\n  flex: 0 0 25% !important;\\n  min-width: 60px !important;\\n}\\n\\n.mat-column-value {\\n  flex: 0 0 25% !important;\\n  min-width: 300px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvYXR0cmlidXRlcy1saXN0L2F0dHJpYnV0ZXMtbGlzdC5jb21wb25lbnQuc2NzcyIsImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvYXR0cmlidXRlcy1saXN0L2F0dHJpYnV0ZXMtbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHNCQUFBO0FDQ0Y7O0FERUE7RUFDRSxZQUFBO0FDQ0Y7O0FERUE7RUFDRSxzQkFBQTtBQ0NGOztBREVBO0VBQ0Usd0JBQUE7RUFDQSwwQkFBQTtBQ0NGOztBREVBO0VBQ0Usd0JBQUE7RUFDQSwwQkFBQTtBQ0NGOztBREVBO0VBQ0Usd0JBQUE7RUFDQSwyQkFBQTtBQ0NGIiwiZmlsZSI6ImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvYXR0cmlidXRlcy1saXN0L2F0dHJpYnV0ZXMtbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbn1cblxuLm1hdC1yb3cge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi5tYXQtY2VsbCB7XG4gIHBhZGRpbmc6IDhweCA4cHggOHB4IDA7XG59XG5cbi5tYXQtY29sdW1uLXNlbGVjdCB7XG4gIGZsZXg6IDAgMCAyNSUgIWltcG9ydGFudDtcbiAgbWluLXdpZHRoOiA1MHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtY29sdW1uLWlkIHtcbiAgZmxleDogMCAwIDI1JSAhaW1wb3J0YW50O1xuICBtaW4td2lkdGg6IDYwcHggIWltcG9ydGFudDtcbn1cblxuLm1hdC1jb2x1bW4tdmFsdWUge1xuICBmbGV4OiAwIDAgMjUlICFpbXBvcnRhbnQ7XG4gIG1pbi13aWR0aDogMzAwcHggIWltcG9ydGFudDtcbn1cbiIsInRhYmxlIHtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbn1cblxuLm1hdC1yb3cge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi5tYXQtY2VsbCB7XG4gIHBhZGRpbmc6IDhweCA4cHggOHB4IDA7XG59XG5cbi5tYXQtY29sdW1uLXNlbGVjdCB7XG4gIGZsZXg6IDAgMCAyNSUgIWltcG9ydGFudDtcbiAgbWluLXdpZHRoOiA1MHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtY29sdW1uLWlkIHtcbiAgZmxleDogMCAwIDI1JSAhaW1wb3J0YW50O1xuICBtaW4td2lkdGg6IDYwcHggIWltcG9ydGFudDtcbn1cblxuLm1hdC1jb2x1bW4tdmFsdWUge1xuICBmbGV4OiAwIDAgMjUlICFpbXBvcnRhbnQ7XG4gIG1pbi13aWR0aDogMzAwcHggIWltcG9ydGFudDtcbn0iXX0= */\"","import {AfterViewInit, Component, Input, OnChanges, QueryList, SimpleChanges, ViewChild, ViewChildren} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {AttributeValueComponent} from './attribute-value/attribute-value.component';\nimport { Attribute } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-attributes-list',\n  templateUrl: './attributes-list.component.html',\n  styleUrls: ['./attributes-list.component.scss']\n})\nexport class AttributesListComponent implements OnChanges, AfterViewInit {\n\n  constructor() {\n  }\n\n  @ViewChild(MatSort, {static: true}) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @ViewChildren(AttributeValueComponent)\n  items: QueryList<AttributeValueComponent>;\n\n  @ViewChild(MatPaginator, {static: false})\n  paginator: MatPaginator;\n\n  @Input()\n  attributes: Attribute[] = [];\n\n  @Input()\n  selection = new SelectionModel<Attribute>(true, []);\n\n  private sort: MatSort;\n\n  displayedColumns: string[] = ['select', 'id', 'name', 'value', 'description'];\n  dataSource: MatTableDataSource<Attribute>;\n\n  // set this true when used in dialog window\n  @Input()\n  inDialog = false;\n\n  @Input()\n  filterValue = '';\n\n  exporting = false;\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.dataSource = new MatTableDataSource<Attribute>(this.attributes);\n    this.setDataSource();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.filter = this.filterValue;\n    }\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  checkboxLabel(row?: Attribute): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n  updateMapAttributes() {\n    for (const item of this.items.toArray()) {\n      if (item.attribute.type === 'java.util.LinkedHashMap') {\n        item.updateMapAttribute();\n      }\n    }\n  }\n\n  onValueChange(attribute: Attribute) {\n    this.selection.select(attribute);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2JhY2stYnV0dG9uL2JhY2stYnV0dG9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component} from '@angular/core';\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-back-button',\n  templateUrl: './back-button.component.html',\n  styleUrls: ['./back-button.component.scss']\n})\nexport class BackButtonComponent {\n\n  constructor(\n    private location: Location,\n  ) { }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2J1Zy1yZXBvcnQtZGlhbG9nL2J1Zy1yZXBvcnQtZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../core/services/common/notificator.service';\nimport { RPCError } from '@perun-web-apps/perun/models';\nimport { RtMessagesService } from '@perun-web-apps/perun/services';\n\n\nexport interface BugReportData {\n  error: RPCError;\n}\n\n@Component({\n  selector: 'app-bug-report-dialog',\n  templateUrl: './bug-report-dialog.component.html',\n  styleUrls: ['./bug-report-dialog.component.scss']\n})\nexport class BugReportDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<BugReportDialogComponent>,\n    private translate: TranslateService,\n    private notificator: NotificatorService,\n    private rtMessages: RtMessagesService,\n    @Inject(MAT_DIALOG_DATA) public data: BugReportData\n  ) { }\n\n  message = '';\n  subject = '';\n  methodRegexp = /(\\w+\\/\\w+)$/g;\n\n  ngOnInit() {\n    if (this.data.error && this.data.error.errorId) {\n      this.subject = this.translate.instant('DIALOGS.BUG_REPORT.SUBJECT_VALUE') +\n        this.parseMethod(this.data.error.call) + ' (' + this.data.error.errorId + ')';\n    }\n  }\n\n  sendBugReport() {\n    this.rtMessages.sendMessageToRT('perun', this.subject, this.getFullEmailBody()).subscribe(rtMessage => {\n      // TODO show ticket number and email\n      this.dialogRef.afterClosed()\n        .subscribe(() => this.notificator.showSuccess(this.translate.instant('DIALOGS.BUG_REPORT.SUCCESS')));\n      this.dialogRef.close();\n    });\n  }\n\n  private parseMethod(url: string): string {\n    if (!url) {\n      return url;\n    }\n    return this.methodRegexp.exec(url)[1];\n  }\n\n  getFullEmailBody(): string {\n    return this.message + '\\n' +\n      '------------------------\\n' +\n      'Technical details:\\n\\n' +\n      this.data.error.errorId + ' ' + this.data.error.type + '\\n' +\n      this.data.error.message + '\\n' +\n\n      // TODO add instance\n      'Perun instance: GENERIC\\n' +\n      'Request:\\n' +\n      this.data.error.call + '\\n\\n' +\n      'Payload:\\n' +\n      this.data.error.payload + '\\n\\n' +\n\n      // TODO add version\n      'NEW GUI';\n\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RlYm91bmNlLWZpbHRlci9kZWJvdW5jZS1maWx0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {fromEvent} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-debounce-filter',\n  templateUrl: './debounce-filter.component.html',\n  styleUrls: ['./debounce-filter.component.scss']\n})\nexport class DebounceFilterComponent implements OnInit {\n\n  constructor() { }\n\n  @Input()\n  placeholder: string;\n\n  @Output()\n  filter = new EventEmitter<string>();\n\n  @ViewChild('groupFilterInput', {static: true}) groupFilterInput: ElementRef;\n\n  ngOnInit() {\n    fromEvent(this.groupFilterInput.nativeElement, 'keyup').pipe(\n      map((event: any) => {\n        return event.target.value;\n      })\n      , debounceTime(500)\n      , distinctUntilChanged()\n    ).subscribe((text: string) => {\n      this.filter.emit(text);\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvYWRkLWFwcGxpY2F0aW9uLWZvcm0taXRlbS1kaWFsb2cvYWRkLWFwcGxpY2F0aW9uLWZvcm0taXRlbS1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport { ApplicationFormItem } from '@perun-web-apps/perun/models';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\n\nexport interface AddApplicationFormItemDialogComponentData {\n  voId: number;\n  groupId: number;\n  applicationFormItems: ApplicationFormItem[];\n}\n\n@Component({\n  selector: 'app-add-application-form-item-dialog',\n  templateUrl: './add-application-form-item-dialog.component.html',\n  styleUrls: ['./add-application-form-item-dialog.component.scss']\n})\nexport class AddApplicationFormItemDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<AddApplicationFormItemDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: AddApplicationFormItemDialogComponentData,\n              private translateService: TranslateService,\n              private notificationService: NotificatorService,\n              private registrarService: RegistrarService) { }\n\n  shortName = '';\n  items: string[] = [];\n  selectedItem: string;\n  selectedWidget = 'HEADING';\n  widgets = ['HEADING', 'FROM_FEDERATION_HIDDEN', 'HTML_COMMENT', 'TEXTFIELD', 'FROM_FEDERATION_SHOW', 'VALIDATED_EMAIL', 'USERNAME',\n            'PASSWORD', 'SELECTIONBOX', 'TEXTAREA', 'COMBOBOX', 'CHECKBOX', 'SUBMIT_BUTTON', 'RADIO', 'TIMEZONE', 'AUTO_SUBMIT_BUTTON'];\n\n  ngOnInit() {\n    this.translateService.get('DIALOGS.APPLICATION_FORM_ADD_ITEM.INSERT_TO_BEGINNING').subscribe( text => {\n      this.items.push(text);\n      for (const item of this.data.applicationFormItems) {\n        this.items.push(item.shortname);\n      }\n      this.selectedItem = text;\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  submit() {\n    if (this.shortName === '') {\n      this.translateService.get('DIALOGS.APPLICATION_FORM_ADD_ITEM.NO_SHORTNAME_ERROR').subscribe( text => {\n        this.notificationService.showError(text);\n        return;\n      });\n    } else {\n      const item = this.createApplicationItem();\n      if (this.data.groupId) {      // if dialog is for group\n        this.registrarService.updateFormItemsForGroup(this.data.groupId, this.data.applicationFormItems).subscribe( () => {\n          this.dialogRef.close(item);\n        });\n      } else {\n        this.registrarService.updateFormItemsForVo(this.data.voId, this.data.applicationFormItems).subscribe( () => {\n          this.dialogRef.close(item);\n        });\n      }\n    }\n  }\n\n  createApplicationItem(): ApplicationFormItem {\n    const newApplicationItem = new ApplicationFormItem();\n    newApplicationItem.shortname = this.shortName;\n    newApplicationItem.type = this.selectedWidget;\n    if (this.selectedItem === this.items[0]) {\n      this.data.applicationFormItems.splice(0, 0, newApplicationItem);\n      this.increaseOrdnums(1);\n      return newApplicationItem;\n    }\n    for (let i = 0; i < this.data.applicationFormItems.length; i++) {\n      if (this.selectedItem === this.data.applicationFormItems[i].shortname) {\n        newApplicationItem.ordnum = i + 1;\n        this.data.applicationFormItems.splice(i + 1, 0, newApplicationItem);\n        this.increaseOrdnums(i + 2);\n        return newApplicationItem;\n      }\n    }\n  }\n\n  increaseOrdnums(index: number) {\n    for (let i = index; i < this.data.applicationFormItems.length; i++) {\n      this.data.applicationFormItems[i].ordnum++;\n    }\n  }\n}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvYWRkLWVkaXQtbm90aWZpY2F0aW9uLWRpYWxvZy9hZGQtZWRpdC1ub3RpZmljYXRpb24tZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {openClose, tagsOpenClose} from '../../../animations/Animations';\nimport { ApplicationMail } from '@perun-web-apps/perun/models';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\n\nexport interface ApplicationFormAddEditMailDialogData {\n  voId: number;\n  groupId: number;\n  createMailNotification: boolean;\n  applicationMail: ApplicationMail;\n  applicationMails: ApplicationMail[];\n}\n\n@Component({\n  selector: 'app-add-edit-notification-dialog',\n  templateUrl: './add-edit-notification-dialog.component.html',\n  styleUrls: ['./add-edit-notification-dialog.component.scss'],\n  animations: [\n    tagsOpenClose,\n    openClose\n  ]\n})\nexport class AddEditNotificationDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<AddEditNotificationDialogComponent>,\n              private registrarService: RegistrarService,\n              @Inject(MAT_DIALOG_DATA) public data: ApplicationFormAddEditMailDialogData) { }\n\n  applicationMail: ApplicationMail;\n  showTags = false;\n  isTextFocused = true;\n  invalidNotification = false;\n  language = 'en';\n\n  ngOnInit() {\n    this.applicationMail = this.data.applicationMail;\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n  create() {\n    this.notificationExist();\n    if (this.invalidNotification) {\n      return;\n    }\n    if (this.data.groupId) {\n      this.registrarService.addApplicationMailForGroup(this.data.groupId, this.applicationMail).subscribe( () => {\n        this.dialogRef.close(true);\n      });\n    } else {\n      this.registrarService.addApplicationMailForVo(this.data.voId, this.applicationMail).subscribe( () => {\n        this.dialogRef.close(true);\n      });\n    }\n  }\n\n  save() {\n    this.registrarService.updateApplicationMail(this.applicationMail).subscribe( () => {\n      this.dialogRef.close(true);\n    });\n  }\n\n  addTag(input: HTMLInputElement, textarea: HTMLTextAreaElement, language: string, tag: string) {\n    let place: any;\n    if (!this.isTextFocused) {\n      place = input;\n    } else {\n      place = textarea;\n    }\n    const position: number = place.selectionStart;\n    if (this.isTextFocused) {\n      this.applicationMail.message[language].text =\n        this.applicationMail.message[language].text.substring(0, position) +\n        tag +\n        this.applicationMail.message[language].text.substring(position);\n    } else {\n      this.applicationMail.message[language].subject =\n        this.applicationMail.message[language].subject.substring(0, position)\n        + tag +\n        this.applicationMail.message[language].subject.substring(position);\n    }\n    place.focus();\n  }\n\n  notificationExist() {\n    for (const mail of this.data.applicationMails) {\n      if (mail.mailType === this.applicationMail.mailType && mail.appType === this.applicationMail.appType) {\n        this.invalidNotification =  true;\n        return;\n      }\n    }\n    this.invalidNotification =  false;\n  }\n}\n","export default \".scrollable {\\n  height: 380px;\\n  overflow: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9ncy9hZGQtZWRpdC1ub3RpZmljYXRpb24tZGlhbG9nL3RhZy1iYXIvdGFnLWJhci5jb21wb25lbnQuc2NzcyIsImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9ncy9hZGQtZWRpdC1ub3RpZmljYXRpb24tZGlhbG9nL3RhZy1iYXIvdGFnLWJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxjQUFBO0FDQ0YiLCJmaWxlIjoiYXBwcy9hZG1pbi1ndWkvc3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9kaWFsb2dzL2FkZC1lZGl0LW5vdGlmaWNhdGlvbi1kaWFsb2cvdGFnLWJhci90YWctYmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNjcm9sbGFibGUge1xuICBoZWlnaHQ6IDM4MHB4O1xuICBvdmVyZmxvdzogYXV0bztcbn1cbiIsIi5zY3JvbGxhYmxlIHtcbiAgaGVpZ2h0OiAzODBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG59Il19 */\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-tag-bar',\n  templateUrl: './tag-bar.component.html',\n  styleUrls: ['./tag-bar.component.scss']\n})\nexport class TagBarComponent implements OnInit {\n\n  constructor() { }\n\n  @Output()\n  addedTag = new EventEmitter<string>();\n\n  applicationRelatedTags = [];\n  userRelatedTags = [];\n  validationLinksUsersTags = [];\n  applicationLinksUsersTags = [];\n  applicationLinksAdministratorsTags = [];\n  perunLinksAdministratorsTags = [];\n  userInvitationsTags = [];\n\n  ngOnInit() {\n    this.getApplicationRelatedTags();\n    this.getUserRelatedTags();\n    this.getValidationLinksUsersTags();\n    this.getApplicationLinksUsersTags();\n    this.getApplicationLinksAdministratorsTags();\n    this.getPerunLinksAdministratorsTags();\n    this.getUserInvitationsTags();\n  }\n\n  getApplicationRelatedTags() {\n    const tags = [];\n    tags.push(['appId', 'APPID_DESCRIPTION']);\n    tags.push(['actor', 'ACTOR_DESCRIPTION']);\n    tags.push(['extSource', 'EXTSOURCE_DESCRIPTION']);\n    tags.push(['voName', 'VONAME_DESCRIPTION']);\n    tags.push(['groupName', 'GROUPNAME_DESCRIPTION']);\n    tags.push(['mailFooter', 'MAILFOOTER_DESCRIPTION']);\n    tags.push(['errors', 'ERRORS_DESCRIPTION']);\n    tags.push(['customMessage', 'CUSTOMMESSAGE_DESCRIPTION']);\n    this.applicationRelatedTags = tags;\n  }\n\n  getUserRelatedTags() {\n    const tags = [];\n    tags.push(['firstName', 'FIRSTNAME_DESCRIPTION']);\n    tags.push(['lastName', 'LASTNAME_DESCRIPTION']);\n    tags.push(['displayName', 'DISPLAYNAME_DESCRIPTION']);\n    tags.push(['mail', 'MAIL_DESCRIPTION']);\n    tags.push(['phone', 'PHONE_DESCRIPTION']);\n    tags.push(['login-namespace', 'LOGINNAMESPACE_DESCRIPTION']);\n    tags.push(['membershipExpiration', 'MEMBERSHIPEXPIRATION_DESCRIPTION']);\n    this.userRelatedTags = tags;\n  }\n\n  getValidationLinksUsersTags() {\n    const tags = [];\n    tags.push(['validationLink', 'VALIDATIONLINK_DESCRIPTION']);\n    tags.push(['validationLink-krb', 'VALIDATIONKRB_DESCRIPTION']);\n    tags.push(['validationLink-fed', 'VALIDATIONFED_DESCRIPTION']);\n    tags.push(['validationLink-cert', 'VALIDATIONCERT_DESCRIPTION']);\n    tags.push(['validationLink-non', 'VALIDATIONNON_DESCRIPTION']);\n    this.validationLinksUsersTags = tags;\n  }\n\n  getApplicationLinksUsersTags() {\n    const tags = [];\n    tags.push(['appGuiUrl', 'APPGUIURL_DESCRIPTION']);\n    tags.push(['appGuiUrl-krb', 'APPGUIURLKRB_DESCRIPTION']);\n    tags.push(['appGuiUrl-fed', 'APPGUIURLFED_DESCRIPTION']);\n    tags.push(['appGuiUrl-cert', 'APPGUIURLCERT_DESCRIPTION']);\n    tags.push(['appGuiUrl-non', 'APPGUIURLNON_DESCRIPTION']);\n    this.applicationLinksUsersTags = tags;\n  }\n\n  getApplicationLinksAdministratorsTags() {\n    const tags = [];\n    tags.push(['appDetailUrl', 'APPDETAILURL_DESCRIPTION']);\n    tags.push(['appDetailUrl-krb', 'APPDETAILURLKRB_DESCRIPTION']);\n    tags.push(['appDetailUrl-fed', 'APPDETAILURLFED_DESCRIPTION']);\n    tags.push(['appDetailUrl-cert', 'APPDETAILURLCERT_DESCRIPTION']);\n    this.applicationLinksAdministratorsTags = tags;\n  }\n\n  getPerunLinksAdministratorsTags() {\n    const tags = [];\n    tags.push(['perunGuiUrl', 'PERUNGUIURL_DESCRIPTION']);\n    tags.push(['perunGuiUrl-krb', 'PERUNGUIURLKRB_DESCRIPTION']);\n    tags.push(['perunGuiUrl-fed', 'PERUNGUIURLFED_DESCRIPTION']);\n    tags.push(['perunGuiUrl-cert', 'PERUNGUIURLCERT_DESCRIPTION']);\n    this.perunLinksAdministratorsTags = tags;\n  }\n\n  getUserInvitationsTags() {\n    const tags = [];\n    tags.push(['voName', 'USER_INVITATIONS_VONAME_DESCRIPTION']);\n    tags.push(['groupName', 'USER_INVITATIONS_GROUPNAME_DESCRIPTION']);\n    tags.push(['displayName', 'USER_INVITATIONS_DISPLAYNAME_DESCRIPTION']);\n    tags.push(['mailFooter', 'USER_INVITATIONS_MAILFOOTER_DESCRIPTION']);\n    tags.push(['invitationLink', 'INVITATIONLINK_DESCRIPTION']);\n    tags.push(['invitationLink-krb', 'INVITATIONLINKKRB_DESCRIPTION']);\n    tags.push(['invitationLink-fed', 'INVITATIONLINKFED_DESCRIPTION']);\n    tags.push(['invitationLink-cert', 'INVITATIONLINKCERT_DESCRIPTION']);\n    tags.push(['invitationLink-non', 'INVITATIONLINKNON_DESCRIPTION']);\n    this.userInvitationsTags = tags;\n  }\n\n  addTag(tag: string) {\n    this.addedTag.emit(tag);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvYWRkLWVkaXQtbm90aWZpY2F0aW9uLWRpYWxvZy90YWctc2VjdGlvbi90YWctc2VjdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from '@angular/core';\n\n@Component({\n  selector: 'app-tag-section',\n  templateUrl: './tag-section.component.html',\n  styleUrls: ['./tag-section.component.scss']\n})\nexport class TagSectionComponent implements OnChanges {\n\n  constructor() { }\n\n  @Input()\n  tags: [][] = [];\n\n  @Output()\n  addedTag = new EventEmitter<string>();\n\n  ngOnChanges(changes: SimpleChanges) {\n  }\n\n  addTag(tag: string) {\n    this.addedTag.emit(tag);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvYWRkLWdyb3VwLW1hbmFnZXItZGlhbG9nL2FkZC1ncm91cC1tYW5hZ2VyLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {Observable} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {map, startWith} from 'rxjs/operators';\nimport { Facility, Group, Role, Vo } from '@perun-web-apps/perun/models';\nimport { AuthzService, GroupService, VoService } from '@perun-web-apps/perun/services';\n\nexport interface AddGroupManagerDialogData {\n  complementaryObject: Vo | Group | Facility;\n  availableRoles: Role[];\n  theme: string;\n  selectedRole: Role;\n}\n\n@Component({\n  selector: 'app-add-group-manager-dialog',\n  templateUrl: './add-group-manager-dialog.component.html',\n  styleUrls: ['./add-group-manager-dialog.component.scss']\n})\nexport class AddGroupManagerDialogComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<AddGroupManagerDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: AddGroupManagerDialogData,\n    private voService: VoService,\n    private authzService: AuthzService,\n    private groupService: GroupService,\n    private translate: TranslateService,\n    private notificator: NotificatorService,\n    protected route: ActivatedRoute,\n    protected router: Router\n  ) {\n    translate.get('DIALOGS.ADD_GROUPS.TITLE').subscribe(value => this.title = value);\n    translate.get('DIALOGS.ADD_GROUPS.SUCCESS').subscribe(value => this.successMessage = value);\n  }\n\n  title: string;\n  searchString = '';\n  successMessage: string;\n\n  selection = new SelectionModel<Group>(true, []);\n  loading: boolean;\n  groups: Group[] = [];\n  selected: number;\n  vos: Vo[] = [];\n\n  selectedRole: Role;\n  filteredOptions: Observable<Vo[]>;\n  myControl = new FormControl();\n  firstSearchDone = false;\n\n  availableRoles: Role[];\n  theme: string;\n\n  displayFn(vo?: Vo): string | undefined {\n    return vo ? vo.name : null;\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    this.loading = true;\n    this.authzService.setRoleForGroups( this.selectedRole, this.selection.selected.map(group => group.id), this.data.complementaryObject)\n      .subscribe(() => {\n        this.notificator.showSuccess(this.successMessage);\n        this.loading = false;\n        this.dialogRef.close();\n    }, () => this.loading = false);\n  }\n\n  ngOnInit() {\n    this.availableRoles = this.data.availableRoles;\n    this.selectedRole = this.data.selectedRole;\n    this.theme = this.data.theme;\n    this.voService.getVos().subscribe(vos => {\n      this.filteredOptions = this.myControl.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => this._filter(value))\n        );\n\n      this.vos = vos;\n    });\n  }\n\n  private _filter(value: string | Vo): Vo[] {\n    const filterValue = typeof (value) === 'string' ? value.toLowerCase() : value.name.toLowerCase;\n    return this.vos.filter(option => option.name.toLowerCase().includes(<string>filterValue));\n  }\n\n  showVoGroups() {\n    this.loading = true;\n    this.filteredOptions.subscribe( values => {\n      if ( values.length !== 0) {\n        this.selected = values[0].id;\n\n        this.groupService.getAllGroups(this.selected).subscribe(groups => {\n          this.groups = groups;\n          this.loading = false;\n          this.firstSearchDone = true;\n        }, () => this.loading = false);\n      }\n    }, () => this.loading = false);\n  }\n}\n","export default \".inline-dialog-items {\\n  display: flex;\\n  align-items: flex-end;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9ncy9hZGQtbWFuYWdlci1kaWFsb2cvYWRkLW1hbmFnZXItZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwiYXBwcy9hZG1pbi1ndWkvc3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9kaWFsb2dzL2FkZC1tYW5hZ2VyLWRpYWxvZy9hZGQtbWFuYWdlci1kaWFsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EscUJBQUE7QUNDRiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvYWRkLW1hbmFnZXItZGlhbG9nL2FkZC1tYW5hZ2VyLWRpYWxvZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbmxpbmUtZGlhbG9nLWl0ZW1zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuIiwiLmlubGluZS1kaWFsb2ctaXRlbXMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG59Il19 */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { Facility, Group, RichUser, Role, Vo } from '@perun-web-apps/perun/models';\nimport { AuthzService, UsersService } from '@perun-web-apps/perun/services';\n\nexport interface AddManagerDialogData {\n  complementaryObject: Vo | Group | Facility;\n  theme: string;\n  availableRoles: Role[];\n  selectedRole: Role;\n}\n\n@Component({\n  selector: 'app-add-manager-dialog',\n  templateUrl: './add-manager-dialog.component.html',\n  styleUrls: ['./add-manager-dialog.component.scss']\n})\nexport class AddManagerDialogComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<AddManagerDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: AddManagerDialogData,\n    private authzService: AuthzService,\n    private usersService: UsersService,\n    private translate: TranslateService,\n    private notificator: NotificatorService,\n    protected route: ActivatedRoute,\n    protected router: Router\n  ) {\n    translate.get('DIALOGS.ADD_MANAGERS.TITLE').subscribe(value => this.title = value);\n    translate.get('DIALOGS.ADD_MANAGERS.SUCCESS').subscribe(value => this.successMessage = value);\n  }\n\n  title: string;\n  searchString = '';\n  successMessage: string;\n\n  selection = new SelectionModel<RichUser>(true, []);\n  loading: boolean;\n  users: RichUser[] = [];\n\n  selectedRole: Role;\n  firstSearchDone = false;\n  availableRoles: Role[];\n  theme: string;\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    this.loading = true;\n    this.authzService.setRole(this.selectedRole, this.selection.selected.map(u => u.id), this.data.complementaryObject).subscribe(() => {\n      this.notificator.showSuccess(this.successMessage);\n      this.loading = false;\n      this.dialogRef.close();\n    }, () => this.loading = false);\n  }\n\n  onSearchByString() {\n    this.loading = true;\n\n    this.selection.clear();\n\n    this.usersService.findRichUsers(this.searchString).subscribe(\n      users => {\n        this.users = users;\n        this.loading = false;\n        this.firstSearchDone = true;\n      },\n      () => this.loading = false\n    );\n  }\n\n  ngOnInit(): void {\n    this.theme = this.data.theme;\n    this.availableRoles = this.data.availableRoles;\n    this.selectedRole = this.data.selectedRole;\n  }\n\n}\n","export default \".adjust-width {\\n  width: 270px;\\n}\\n\\n.no-bounce-scrollbar {\\n  overflow: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9ncy9hZGQtbWVtYmVyLWRpYWxvZy9hZGQtbWVtYmVyLWRpYWxvZy5jb21wb25lbnQuc2NzcyIsImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9ncy9hZGQtbWVtYmVyLWRpYWxvZy9hZGQtbWVtYmVyLWRpYWxvZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0FDQ0YiLCJmaWxlIjoiYXBwcy9hZG1pbi1ndWkvc3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9kaWFsb2dzL2FkZC1tZW1iZXItZGlhbG9nL2FkZC1tZW1iZXItZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFkanVzdC13aWR0aCB7XG4gIHdpZHRoOiAyNzBweDtcbn1cblxuLm5vLWJvdW5jZS1zY3JvbGxiYXIge1xuICBvdmVyZmxvdzogaGlkZGVuXG59XG4iLCIuYWRqdXN0LXdpZHRoIHtcbiAgd2lkdGg6IDI3MHB4O1xufVxuXG4ubm8tYm91bmNlLXNjcm9sbGJhciB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59Il19 */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { GroupService, MembersService, RegistrarService, VoService } from '@perun-web-apps/perun/services';\nimport { Group, MemberCandidate } from '@perun-web-apps/perun/models';\nimport { Urns } from '@perun-web-apps/perun/urns';\n\nexport interface AddMemberDialogData {\n  voId?: number;\n  entityId: number;\n  group?: Group;\n  theme: string;\n  type: 'vo' | 'group';\n}\n\n@Component({\n  selector: 'app-add-member-dialog',\n  templateUrl: './add-member-dialog.component.html',\n  styleUrls: ['./add-member-dialog.component.scss']\n})\nexport class AddMemberDialogComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<AddMemberDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: AddMemberDialogData,\n    private memberService: MembersService,\n    private groupService: GroupService,\n    private voService: VoService,\n    private registrarService: RegistrarService,\n    private translate: TranslateService,\n    private notificator: NotificatorService,\n    protected route: ActivatedRoute,\n    protected router: Router\n  ) {\n    translate.get('DIALOGS.ADD_MEMBERS.TITLE').subscribe(value => this.title = value);\n    translate.get('DIALOGS.ADD_MEMBERS.SUCCESS').subscribe(value => this.successMessage = value);\n    translate.get('DIALOGS.ADD_MEMBERS.SUCCESS_INVITE').subscribe(value => this.successInviteMessage = value);\n\n  }\n\n  title: string;\n  searchString = '';\n  successMessage: string;\n  successInviteMessage: string;\n\n  selection = new SelectionModel<MemberCandidate>(false, []);\n  loading: boolean;\n  processing: boolean;\n  members: MemberCandidate[] = [];\n\n  firstSearchDone = false;\n\n  theme: string;\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onAdd(): void {\n    this.processing = true;\n    // TODO Adds only one member at the time. In the future there would be need to add more\n    const selectedMemberCandidate = this.selection.selected[0];\n\n    if (this.data.type === 'vo') {\n      if (!!selectedMemberCandidate.richUser) {\n        this.addUserToVo(selectedMemberCandidate);\n      } else {\n        this.addCandidateToVo(selectedMemberCandidate);\n      }\n    } else if (this.data.type === 'group') {\n      if (!!selectedMemberCandidate.member) {\n        this.addMemberToGroup(selectedMemberCandidate);\n      }\n      else if (!!selectedMemberCandidate.richUser) {\n        this.addUserToGroup(selectedMemberCandidate);\n      }\n      else if (!!selectedMemberCandidate.candidate) {\n        this.addCandidateToGroup(selectedMemberCandidate);\n      }\n    }\n  }\n\n  onInvite(): void {\n\n    // TODO Was not tested properly. Need to be tested on devel.\n    if (this.data.type === 'vo') {\n      this.registrarService.sendInvitationToExistingUser(this.selection.selected[0].richUser.id, this.data.entityId).subscribe(() => {\n        this.translate.get('DIALOGS.ADD_MEMBERS.SUCCESS_INVITE').subscribe(() => {\n          this.notificator.showSuccess(this.successInviteMessage);\n          this.dialogRef.close();\n        });\n      });\n    } else if (this.data.type === 'group') {\n      //TODO\n    }\n  }\n\n  onSearchByString() {\n    this.loading = true;\n\n    this.selection.clear();\n\n    // TODO properly test it on devel when possible.\n\n    this.voService.getCompleteCandidates(\n      this.data.entityId,\n      this.data.type,\n      [Urns.USER_DEF_ORGANIZATION, Urns.USER_DEF_PREFERRED_MAIL], this.searchString).subscribe(\n      members => {\n        this.members = members;\n        this.loading = false;\n        this.firstSearchDone = true;\n      },\n      () => this.loading = false\n    );\n  }\n\n  ngOnInit(): void {\n    this.theme = this.data.theme;\n  }\n\n  private addUserToVo(selectedMemberCandidate: MemberCandidate) {\n    this.memberService.createMember(this.data.entityId, selectedMemberCandidate.richUser.id).subscribe(() => {\n      this.onAddSuccess();\n    }, () => this.onError());\n  }\n\n  private addCandidateToVo(selectedMemberCandidate: MemberCandidate) {\n    this.memberService.createMemberForCandidate(\n      this.data.entityId, selectedMemberCandidate.candidate).subscribe(() => {\n      this.onAddSuccess();\n    }, () => this.onError());\n  }\n\n  private addUserToGroup(selectedMemberCandidate: MemberCandidate) {\n    this.memberService.createMemberWithGroups(\n      this.data.voId, selectedMemberCandidate.richUser.id, [this.data.group]).subscribe(() => {\n      this.onAddSuccess();\n    }, () => this.onError());\n  }\n\n  private addMemberToGroup(selectedMemberCandidate: MemberCandidate) {\n    this.groupService.addMembers(this.data.entityId, [selectedMemberCandidate.member.id]).subscribe(() => {\n      this.onAddSuccess();\n    }, () => this.onError());\n  }\n\n  private addCandidateToGroup(selectedMemberCandidate: MemberCandidate) {\n    this.memberService.createMemberForCandidateWithGroups(\n      this.data.voId, selectedMemberCandidate.candidate, [this.data.group]).subscribe(() => {\n      this.onAddSuccess();\n    }, () => this.onError());\n  }\n\n  private onAddSuccess() {\n    this.translate.get('DIALOGS.ADD_MEMBERS.SUCCESS').subscribe(() => {\n      this.notificator.showSuccess(this.successMessage);\n      this.dialogRef.close();\n    });\n  }\n\n  private onError() {\n      this.processing = false;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvYXBwbGljYXRpb24tZm9ybS1jb3B5LWl0ZW1zLWRpYWxvZy9hcHBsaWNhdGlvbi1mb3JtLWNvcHktaXRlbXMtZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AbstractControl, FormControl, ValidatorFn, Validators} from '@angular/forms';\nimport {map, startWith} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport { GroupService, RegistrarService, VoService } from '@perun-web-apps/perun/services';\nimport { Group, Vo } from '@perun-web-apps/perun/models';\n\nexport interface ApplicationFormCopyItemsDialogData {\n  voId: number;\n  groupId: number;\n}\n\n@Component({\n  selector: 'app-application-form-copy-items-dialog',\n  templateUrl: './application-form-copy-items-dialog.component.html',\n  styleUrls: ['./application-form-copy-items-dialog.component.scss']\n})\nexport class ApplicationFormCopyItemsDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<ApplicationFormCopyItemsDialogComponent>,\n              private voService: VoService,\n              private groupService: GroupService,\n              private translateService: TranslateService,\n              private registrarService: RegistrarService,\n              @Inject(MAT_DIALOG_DATA) public data: ApplicationFormCopyItemsDialogData) { }\n\n  vos: Vo[] = [];\n  groups: Group[] = [];\n  fakeGroup: Group;\n  voControl = new FormControl();\n  filteredVos: Observable<Vo[]>;\n  groupControl = new FormControl();\n  filteredGroups: Observable<Group[]>;\n\n  ngOnInit() {\n    this.translateService.get('DIALOGS.APPLICATION_FORM_COPY_ITEMS.NO_GROUP_SELECTED').subscribe( text => {\n      this.fakeGroup = {\n        id: -1,\n        name: text,\n        voId: 0,\n        parentGroupId: 0,\n        shortName: '',\n        description: ''\n      };\n      this.groupControl.setValue(this.fakeGroup);\n\n      this.voService.getAllVos().subscribe(vos => {\n        this.vos = vos;\n\n        this.voControl = new FormControl('', [this.invalidVo(this.vos), Validators.required]);\n\n        this.filteredVos = this.voControl.valueChanges\n          .pipe(\n            startWith(''),\n            map(value => typeof value === 'string' ? value : value.name),\n            map(name => name ? this._filterVo(name) : this.vos.slice())\n          );\n\n        this.vos = vos.sort(((vo1, vo2) => {\n          if (vo1.name > vo2.name) {\n            return 1;\n          }\n\n          if (vo1.name < vo2.name) {\n            return -1;\n          }\n\n          return 0;\n        }));\n      });\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  _filterVo(value: string): Vo[] {\n    const filterValue = value.toLowerCase();\n\n    return this.vos.filter(option => option.name.toLowerCase().includes(filterValue));\n  }\n\n  _filterGroup(value: string): Group[] {\n    const filterValue = value.toLowerCase();\n\n    return this.groups.filter(option => option.name.toLowerCase().includes(filterValue));\n  }\n\n  displayFn(entity?: any): string | undefined {\n    return entity ? entity.name : undefined;\n  }\n\n  submit() {\n    if (this.data.groupId) {      // checking if the dialog is for group or Vo\n      if (this.groupControl.value === this.fakeGroup) {   // no group selected\n        this.registrarService.copyFormFromVoToGroup(this.voControl.value.id, this.data.groupId).subscribe( () => {\n          this.dialogRef.close(true);\n        });\n      } else {\n        this.registrarService.copyFormFromGroupToGroup(this.groupControl.value.id, this.data.groupId).subscribe( () => {\n          this.dialogRef.close(true);\n        });\n      }\n    } else {\n      if (this.groupControl.value === this.fakeGroup) {       // no group selected\n        this.registrarService.copyFormFromVoToVo(this.voControl.value.id, this.data.voId).subscribe( () => {\n          this.dialogRef.close(true);\n        });\n      } else {\n        this.registrarService.copyFormFromGroupToVo(this.groupControl.value.id, this.data.voId).subscribe( () => {\n          this.dialogRef.close(true);\n        });\n      }\n    }\n  }\n\n  getGroups() {\n    if (!this.voControl.invalid) {\n      this.groupService.getAllGroups(this.voControl.value.id).subscribe( groups => {\n        this.groups = [this.fakeGroup].concat(groups);\n        this.groupControl.setValidators([this.invalidGroup(this.groups), Validators.required]);\n        this.filteredGroups = this.groupControl.valueChanges\n          .pipe(\n            startWith(''),\n            map(value => typeof value === 'string' ? value : value.name),\n            map(name => name ? this._filterGroup(name) : this.groups.slice())\n          );\n      });\n    } else {\n      this.groups = [this.fakeGroup];\n    }\n  }\n\n  invalidVo(vos: Vo[]): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      let invalid = false;\n      if (control.value) {\n        if (control.value.beanName) {\n          if (control.value.beanName !== 'Vo') {\n            invalid = true;\n          }\n        } else {\n          const vo = vos.find(x => x.name.toLowerCase() === control.value.toLowerCase());\n          if (!vo) {\n            invalid = true;\n          } else {\n            control.setValue(vo);\n          }\n        }\n      }\n      return invalid ? {'invalidVo': true} : null;\n    };\n  }\n\n  invalidGroup(groups: Group[]): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      let invalid = false;\n      if (control.value) {\n        if (control.value.beanName) {\n          if (control.value.beanName !== 'Group') {\n            invalid = true;\n          }\n        } else if (control.value === this.fakeGroup) {\n          invalid = false;\n        } else {\n          const group = groups.find(x => x.name.toLowerCase() === control.value.toLowerCase());\n          if (!group) {\n            invalid = true;\n          } else {\n            control.setValue(group);\n          }\n        }\n      }\n      return invalid ? {'invalidGroup': true} : null;\n    };\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvYXBwbGljYXRpb24tcmUtc2VuZC1ub3RpZmljYXRpb24tZGlhbG9nL2FwcGxpY2F0aW9uLXJlLXNlbmQtbm90aWZpY2F0aW9uLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\n\nexport interface DialogData {\n  applicationId: number;\n}\n\n@Component({\n  selector: 'app-application-re-send-notification-dialog',\n  templateUrl: './application-re-send-notification-dialog.component.html',\n  styleUrls: ['./application-re-send-notification-dialog.component.scss']\n})\nexport class ApplicationReSendNotificationDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ApplicationReSendNotificationDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private translate: TranslateService,\n              private notificator: NotificatorService,\n              private registrarService: RegistrarService) { }\n\n  mailType = 'APP_CREATED_USER';\n  reason = '';\n\n  ngOnInit() {\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    if (this.mailType === 'APP_REJECTED_USER') {\n      this.registrarService.sendMessageWithReason(this.data.applicationId, this.mailType, this.reason).subscribe( any => {\n        this.translate.get('DIALOGS.RE_SEND_NOTIFICATION.SUCCESS').subscribe(successMessage => {\n          this.notificator.showSuccess(successMessage);\n          this.dialogRef.close();\n        });\n      });\n    } else {\n      this.registrarService.sendMessage(this.data.applicationId, this.mailType).subscribe( any => {\n        this.translate.get('DIALOGS.RE_SEND_NOTIFICATION.SUCCESS').subscribe(successMessage => {\n          this.notificator.showSuccess(successMessage);\n          this.dialogRef.close();\n        });\n      });\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvYXBwbGljYXRpb24tcmVqZWN0LWRpYWxvZy9hcHBsaWNhdGlvbi1yZWplY3QtZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\n\nexport interface DialogData {\n  applicationId: number;\n}\n\n@Component({\n  selector: 'app-application-reject-dialog',\n  templateUrl: './application-reject-dialog.component.html',\n  styleUrls: ['./application-reject-dialog.component.scss']\n})\nexport class ApplicationRejectDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ApplicationRejectDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private translate: TranslateService,\n              private notificator: NotificatorService,\n              private registrarService: RegistrarService) { }\n\n  reason = '';\n\n  ngOnInit() {\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    this.registrarService.rejectApplication(this.data.applicationId, this.reason).subscribe( any => {\n      this.translate.get('DIALOGS.REJECT_APPLICATION.SUCCESS').subscribe(successMessage => {\n        this.notificator.showSuccess(successMessage);\n        this.dialogRef.close();\n      });\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvYXNzaWduLWdyb3VwLXRvLXJlc291cmNlLWRpYWxvZy9hc3NpZ24tZ3JvdXAtdG8tcmVzb3VyY2UtZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { GroupService, ResourcesService } from '@perun-web-apps/perun/services';\nimport { Group, Resource } from '@perun-web-apps/perun/models';\nimport { SelectionModel } from '@angular/cdk/collections';\n\nexport interface AssignGroupToResourceDialogData {\n  theme: string;\n  resourceId: number;\n}\n\n@Component({\n  selector: 'app-perun-web-apps-assign-group-to-resource-dialog',\n  templateUrl: './assign-group-to-resource-dialog.component.html',\n  styleUrls: ['./assign-group-to-resource-dialog.component.scss']\n})\nexport class AssignGroupToResourceDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<AssignGroupToResourceDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: AssignGroupToResourceDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private resourceService: ResourcesService,\n              private groupService: GroupService) { }\n\n  loading = false;\n  theme: string;\n\n  resource: Resource;\n  unAssignedGroups: Group[];\n  filteredGroups: Group[];\n  checkGroups = false;\n  selection = new SelectionModel<Group>(true, []);\n\n  ngOnInit() {\n    this.loading = true;\n    this.theme = this.data.theme;\n    this.resourceService.getResourceById(this.data.resourceId).subscribe( resource => {\n      this.resource = resource;\n      this.resourceService.getAssignedGroups(this.resource.id).subscribe( assignedGroups => {\n        this.groupService.getAllGroups(this.resource.voId).subscribe( allGroups => {\n          this.unAssignedGroups = allGroups;\n          for (const assignedGroup of assignedGroups) {\n            for (const allGroup of allGroups) {\n              if (assignedGroup.id === allGroup.id) {\n                this.unAssignedGroups.splice(this.unAssignedGroups.indexOf(allGroup), 1);\n              }\n            }\n          }\n          this.filteredGroups = this.unAssignedGroups;\n          this.loading = false;\n        });\n      });\n    });\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onAdd() {\n    if (this.checkGroups) {\n      //TODO when checkbox is checked\n    } else {\n      this.loading = true;\n      const addedGroups: number[] =[];\n      for (const group of this.selection.selected) {\n        addedGroups.push(group.id);\n      }\n      this.resourceService.assignGroupsToResource(addedGroups, this.resource.id).subscribe( () => {\n        this.translate.get('DIALOGS.ASSIGN_GROUP_TO_RESOURCE.SUCCESS_MESSAGE').subscribe( message => {\n          this.notificator.showSuccess(message);\n          this.dialogRef.close(true);\n        });\n      });\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    this.filteredGroups = this.unAssignedGroups.filter( option => option.name.toLowerCase().includes(filterValue.toLowerCase()));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvY2hhbmdlLW1lbWJlci1zdGF0dXMtZGlhbG9nL2NoYW5nZS1tZW1iZXItc3RhdHVzLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { RichMember } from '@perun-web-apps/perun/models';\nimport { MembersService } from '@perun-web-apps/perun/services';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ActivatedRoute } from '@angular/router';\n\nexport interface ChangeMemberStatusDialogData {\n  member: RichMember;\n}\n\n@Component({\n  selector: 'app-perun-web-apps-change-member-status-dialog',\n  templateUrl: './change-member-status-dialog.component.html',\n  styleUrls: ['./change-member-status-dialog.component.scss']\n})\nexport class ChangeMemberStatusDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ChangeMemberStatusDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: ChangeMemberStatusDialogData,\n              private memberService: MembersService,\n              private notificatorService: NotificatorService,\n              private translate: TranslateService,\n              private route: ActivatedRoute) { }\n\n  loading = false;\n  theme: string;\n\n  ngOnInit() {\n    this.route.params.subscribe(parentParams => {\n      if (parentParams['groupId']) {\n        this.theme = 'group-theme';\n      } else {\n        this.theme = 'vo-theme';\n      }\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    this.loading = true;\n    this.memberService.setStatus(this.data.member.id, 'VALID').subscribe( () => {\n      this.translate.get('DIALOGS.CHANGE_STATUS.SUCCESS').subscribe( success => {\n        this.notificatorService.showSuccess(success);\n        this.dialogRef.close(true);\n      });\n    });\n  }\n}\n","export default \".unique-toggle-label {\\n  font-size: 1.125rem;\\n}\\n\\n.form-field-width {\\n  width: 450px;\\n}\\n\\n.pointer {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9ncy9jcmVhdGUtYXR0cmlidXRlLWRlZmluaXRpb24tZGlhbG9nL2NyZWF0ZS1hdHRyaWJ1dGUtZGVmaW5pdGlvbi1kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvY3JlYXRlLWF0dHJpYnV0ZS1kZWZpbml0aW9uLWRpYWxvZy9jcmVhdGUtYXR0cmlidXRlLWRlZmluaXRpb24tZGlhbG9nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQUE7QUNDRjs7QURFQTtFQUNFLFlBQUE7QUNDRjs7QURFQTtFQUNFLGVBQUE7QUNDRiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvY3JlYXRlLWF0dHJpYnV0ZS1kZWZpbml0aW9uLWRpYWxvZy9jcmVhdGUtYXR0cmlidXRlLWRlZmluaXRpb24tZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVuaXF1ZS10b2dnbGUtbGFiZWwge1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xufVxuXG4uZm9ybS1maWVsZC13aWR0aCB7XG4gIHdpZHRoOiA0NTBweDtcbn1cblxuLnBvaW50ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4iLCIudW5pcXVlLXRvZ2dsZS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XG59XG5cbi5mb3JtLWZpZWxkLXdpZHRoIHtcbiAgd2lkdGg6IDQ1MHB4O1xufVxuXG4ucG9pbnRlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {MatDialogRef} from '@angular/material';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { AttributesService } from '@perun-web-apps/perun/services';\nimport { ActionType, AttributeDefinition, AttributeRights, Role } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-create-attribute-definition-dialog',\n  templateUrl: './create-attribute-definition-dialog.component.html',\n  styleUrls: ['./create-attribute-definition-dialog.component.scss']\n})\nexport class CreateAttributeDefinitionDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<CreateAttributeDefinitionDialogComponent>,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private attributeService: AttributesService) {\n  }\n\n  attDef: AttributeDefinition;\n  entities: string[] = ['facility', 'resource', 'group', 'group_resource', 'host', 'member', 'member_group',\n    'member_resource', 'user', 'user_ext_source', 'user_facility', 'vo', 'entityless'];\n\n  definitionTypes: string[] = ['def', 'opt', 'virt'];\n  definitionType = '';\n\n  valueTypes: string[] = ['String', 'Integer', 'Boolean', 'Array', 'LinkedHashMap', 'LargeString', 'LargeArrayList'];\n  valueType = '';\n\n  readSelf = false;\n  readSelfPublic = false;\n  readSelfVo = false;\n  readVo = false;\n  readGroup = false;\n  readFacility = false;\n\n  writeSelf = false;\n  writeSelfPublic = false;\n  writeSelfVo = false;\n  writeVo = false;\n  writeGroup = false;\n  writeFacility = false;\n\n  ngOnInit() {\n    this.attDef = {\n      baseFriendlyName: '',\n      beanName: '',\n      description: '',\n      displayName: '',\n      entity: '',\n      friendlyName: '',\n      friendlyNameParameter: '',\n      id: undefined,\n      namespace: '',\n      type: '',\n      unique: false,\n      writable: false,\n    };\n  }\n\n  onSubmit() {\n    this.attDef.namespace = 'urn:perun:' + this.attDef.entity + ':attribute-def:' + this.definitionType;\n    this.readValueType();\n    this.attributeService.createAttributeDefinition(this.attDef).subscribe(attDef => {\n      this.attDef = attDef;\n      this.attributeService.setAttributesRights(this.readRights()).subscribe(() => {\n        this.translate.get('DIALOGS.CREATE_ATTRIBUTE_DEFINITION.SUCCESS').subscribe(successMessage => {\n          this.notificator.showSuccess(successMessage);\n          this.dialogRef.close(true);\n        });\n      });\n    });\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  readRights(): AttributeRights[] {\n    const list: AttributeRights[] = [];\n\n    if (this.readSelf) {\n      list.push(this.generateRights(Role.SELF, ActionType.READ));\n    }\n    if (this.readSelfPublic) {\n      list.push(this.generateRights(Role.SELF, ActionType.READ_PUBLIC));\n    }\n    if (this.readSelfVo) {\n      list.push(this.generateRights(Role.SELF, ActionType.READ_VO));\n    }\n    if (this.readVo) {\n      list.push(this.generateRights(Role.VOADMIN, ActionType.READ));\n    }\n    if (this.readGroup) {\n      list.push(this.generateRights(Role.GROUPADMIN, ActionType.READ));\n    }\n    if (this.readFacility) {\n      list.push(this.generateRights(Role.FACILITYADMIN, ActionType.READ));\n    }\n\n    if (this.writeSelf) {\n      list.push(this.generateRights(Role.SELF, ActionType.WRITE));\n    }\n    if (this.writeSelfPublic) {\n      list.push(this.generateRights(Role.SELF, ActionType.WRITE_PUBLIC));\n    }\n    if (this.writeSelfVo) {\n      list.push(this.generateRights(Role.SELF, ActionType.WRITE_VO));\n    }\n    if (this.writeVo) {\n      list.push(this.generateRights(Role.VOADMIN, ActionType.WRITE));\n    }\n    if (this.writeGroup) {\n      list.push(this.generateRights(Role.GROUPADMIN, ActionType.WRITE));\n    }\n    if (this.writeFacility) {\n      list.push(this.generateRights(Role.FACILITYADMIN, ActionType.WRITE));\n    }\n\n    return list;\n  }\n\n  readValueType() {\n    switch (this.valueType) {\n      case 'String': {\n        this.attDef.type = 'java.lang.String';\n        break;\n      }\n      case 'Integer': {\n        this.attDef.type = 'java.lang.Integer';\n        break;\n      }\n      case 'Boolean': {\n        this.attDef.type = 'java.lang.Boolean';\n        break;\n      }\n      case 'Array': {\n        this.attDef.type = 'java.util.ArrayList';\n        break;\n      }\n      case 'LinkedHashMap': {\n        this.attDef.type = 'java.util.LinkedHashMap';\n        break;\n      }\n      case 'LargeString': {\n        this.attDef.type = 'java.lang.LargeString';\n        break;\n      }\n      case 'LargeArrayList': {\n        this.attDef.type = 'java.util.LargeArrayList';\n        break;\n      }\n    }\n  }\n\n  disableConfirmButton(): boolean {\n    return (this.attDef.friendlyName === '' || this.attDef.displayName === '' || this.attDef.description === '' ||\n      this.attDef.entity === '' || this.definitionType === '' || this.valueType === '');\n  }\n\n  disableUniqueToggle(): boolean {\n    if (this.definitionType === 'virt' || this.attDef.entity === 'entityless') {\n      this.attDef.unique = false;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private generateRights(role: Role, right: ActionType): AttributeRights {\n    const rights = {} as AttributeRights;\n    rights.attributeId = this.attDef.id;\n    rights.role = role;\n    rights.rights = [right];\n    return rights;\n  }\n\n}\n","export default \".font-size-1rem {\\n  font-size: 1rem !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9ncy9jcmVhdGUtYXR0cmlidXRlLWRpYWxvZy9jcmVhdGUtYXR0cmlidXRlLWRpYWxvZy5jb21wb25lbnQuc2NzcyIsImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9ncy9jcmVhdGUtYXR0cmlidXRlLWRpYWxvZy9jcmVhdGUtYXR0cmlidXRlLWRpYWxvZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDBCQUFBO0FDQ0YiLCJmaWxlIjoiYXBwcy9hZG1pbi1ndWkvc3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9kaWFsb2dzL2NyZWF0ZS1hdHRyaWJ1dGUtZGlhbG9nL2NyZWF0ZS1hdHRyaWJ1dGUtZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvbnQtc2l6ZS0xcmVtIHtcbiAgZm9udC1zaXplOiAxcmVtICFpbXBvcnRhbnQ7XG59XG4iLCIuZm9udC1zaXplLTFyZW0ge1xuICBmb250LXNpemU6IDFyZW0gIWltcG9ydGFudDtcbn0iXX0= */\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {AttributesListComponent} from '../../attributes-list/attributes-list.component';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { Attribute, AttrEntity } from '@perun-web-apps/perun/models';\nimport { filterCoreAttributes } from '@perun-web-apps/perun/utils';\nimport { AttributesService } from '@perun-web-apps/perun/services';\n\nexport interface CreateAttributeDialogData {\n  entityId: number;\n  notEmptyAttributes: Attribute[];\n  style?: string;\n  entity: AttrEntity;\n}\n\n@Component({\n  selector: 'app-create-attribute-dialog',\n  templateUrl: './create-attribute-dialog.component.html',\n  styleUrls: ['./create-attribute-dialog.component.scss']\n})\n\nexport class CreateAttributeDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<CreateAttributeDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: CreateAttributeDialogData,\n              private attributesService: AttributesService,\n              private notificator: NotificatorService,\n              private translate: TranslateService) {\n    this.translate.get('DIALOGS.CREATE_ATTRIBUTE.SUCCESS_SAVE').subscribe(value => this.saveSuccessMessage = value);\n  }\n\n  @ViewChild('list', {static: false})\n  list: AttributesListComponent;\n\n  attributes: Attribute[];\n  selected = new SelectionModel<Attribute>(true, []);\n  saveSuccessMessage: string;\n  showError = false;\n  filterValue = '';\n\n  ngOnInit() {\n    const unWanted = new Array<number>();\n    this.data.notEmptyAttributes.forEach(attribute => {\n      unWanted.push(attribute.id);\n    });\n    this.attributesService.getAttributeDefinitions(this.data.entityId, this.data.entity).subscribe(attributes => {\n      this.attributes = attributes as Attribute[];\n      this.attributes = this.attributes.filter(attribute => {\n        return !unWanted.includes(attribute.id);\n      });\n      this.attributes = filterCoreAttributes(this.attributes);\n    });\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSave() {\n    this.list.updateMapAttributes();\n    let containsEmpty = false;\n    for (const attribute of this.selected.selected) {\n      if (attribute.type === 'java.util.ArrayList' && attribute.value.length === 0) {\n        containsEmpty = true;\n      }\n      if (attribute.value === undefined) {\n        containsEmpty = true;\n      }\n    }\n    if (containsEmpty) {\n      this.showError = true;\n      setTimeout(() => {\n        this.showError = false;\n      }, 5000);\n      return;\n    }\n    this.attributesService.setAttributes(this.data.entityId, this.data.entity, this.selected.selected).subscribe(() => {\n      this.notificator.showSuccess(this.saveSuccessMessage);\n      this.selected.clear();\n      this.dialogRef.close('saved');\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvY3JlYXRlLWdyb3VwLWRpYWxvZy9jcmVhdGUtZ3JvdXAtZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport { Group } from '@perun-web-apps/perun/models';\nimport { GroupService } from '@perun-web-apps/perun/services';\n\nexport interface CreateGroupDialogData {\n  parentGroup: Group;\n  voId: number;\n}\n\n@Component({\n  selector: 'app-create-group-dialog',\n  templateUrl: './create-group-dialog.component.html',\n  styleUrls: ['./create-group-dialog.component.scss']\n})\nexport class CreateGroupDialogComponent {\n\n  constructor(\n    private dialogRef: MatDialogRef<CreateGroupDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: CreateGroupDialogData,\n    private groupService: GroupService,\n    private translate: TranslateService,\n    private notificator: NotificatorService,\n  ) {\n    this.isNotSubGroup = (this.data.parentGroup === null);\n    if (this.isNotSubGroup) {\n      translate.get('DIALOGS.CREATE_GROUP.TITLE').subscribe(value => this.title = value);\n    } else {\n      translate.get('DIALOGS.CREATE_GROUP.TITLE_SUB_GROUP').subscribe(value => {\n        this.title = value + this.data.parentGroup.name;\n      });\n    }\n    translate.get('DIALOGS.CREATE_GROUP.SUCCESS').subscribe(value => this.successMessage = value);\n    translate.get('DIALOGS.CREATE_GROUP.SUCCESS_SUBGROUP').subscribe(value => this.successSubGroupMessage = value);\n  }\n\n  isNotSubGroup: boolean;\n\n  name = '';\n  description = '';\n\n  title: string;\n\n  successMessage: string;\n  successSubGroupMessage: string;\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.isNotSubGroup) {\n      this.groupService.createGroup(this.data.voId, this.name, this.description).subscribe(group => {\n        this.notificator.showSuccess(this.successMessage);\n        this.dialogRef.close(true);\n      });\n    } else {\n      this.groupService.createSubGroup(this.data.parentGroup.id, this.name, this.description).subscribe(group => {\n        this.notificator.showSuccess(this.successSubGroupMessage);\n        this.dialogRef.close(true);\n      });\n    }\n  }\n}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvY3JlYXRlLXJlc291cmNlLXRhZy1kaWFsb2cvY3JlYXRlLXJlc291cmNlLXRhZy1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport { ResourcesService } from '@perun-web-apps/perun/services';\n\nexport interface CreateResourceTagDialogDialogData {\n  voId: number;\n}\n\n@Component({\n  selector: 'app-create-resource-tag-dialog',\n  templateUrl: './create-resource-tag-dialog.component.html',\n  styleUrls: ['./create-resource-tag-dialog.component.scss']\n})\nexport class CreateResourceTagDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<CreateResourceTagDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: CreateResourceTagDialogDialogData,\n              private resourceService: ResourcesService) { }\n\n  name = '';\n\n  ngOnInit() {\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    if (this.name !== '') {\n      this.resourceService.createResourceTag(this.name, this.data.voId).subscribe( () => {\n        this.dialogRef.close(true);\n      });\n    }\n\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvY3JlYXRlLXZvLWRpYWxvZy9jcmVhdGUtdm8tZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { VoService } from '@perun-web-apps/perun/services';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface CreateVoDialogData {\n  theme: string;\n}\n\n@Component({\n  selector: 'app-create-vo-dialog',\n  templateUrl: './create-vo-dialog.component.html',\n  styleUrls: ['./create-vo-dialog.component.scss']\n})\nexport class CreateVoDialogComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<CreateVoDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: CreateVoDialogData,\n    private notificator: NotificatorService,\n    private voService: VoService,\n    private translate: TranslateService,\n  ) {\n    translate.get('DIALOGS.CREATE_VO.SUCCESS').subscribe(value => this.successMessage = value);\n  }\n\n  fullName = '';\n  shortName = '';\n  successMessage: string;\n\n  loading: boolean;\n  theme: string;\n\n  ngOnInit() {\n    this.theme = this.data.theme;\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    this.loading = true;\n    this.voService.createVo(this.fullName, this.shortName).subscribe(() => {\n      this.notificator.showSuccess(this.successMessage);\n      this.loading = false;\n      this.dialogRef.close(true);\n    }, () => this.loading = false);\n  }\n\n  isValidFullName(): boolean{\n    return 0 < this.fullName.length && this.fullName.length < 129\n  }\n\n  isValidShortName(): boolean {\n    const regex = '^[\\\\w._-]*$';\n    return this.shortName.length > 0 && this.shortName.length < 33\n        && this.shortName.match(regex) && this.shortName.match(regex)[0].length === this.shortName.length;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvZGVsZXRlLWFwcGxpY2F0aW9uLWZvcm0taXRlbS1kaWFsb2cvZGVsZXRlLWFwcGxpY2F0aW9uLWZvcm0taXRlbS1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {MatDialogRef} from '@angular/material';\n\n@Component({\n  selector: 'app-delete-application-form-item-dialog',\n  templateUrl: './delete-application-form-item-dialog.component.html',\n  styleUrls: ['./delete-application-form-item-dialog.component.scss']\n})\nexport class DeleteApplicationFormItemDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<DeleteApplicationFormItemDialogComponent>) { }\n\n  ngOnInit() {\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  submit() {\n    this.dialogRef.close(true);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvZGVsZXRlLWF0dHJpYnV0ZS1kZWZpbml0aW9uLWRpYWxvZy9kZWxldGUtYXR0cmlidXRlLWRlZmluaXRpb24tZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatTableDataSource} from '@angular/material';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { AttributeDefinition } from '@perun-web-apps/perun/models';\nimport { AttributesService } from '@perun-web-apps/perun/services';\n\nexport interface DeleteAttributeDefinitionDialogData {\n  attributes: AttributeDefinition[];\n}\n\n@Component({\n  selector: 'app-delete-attribute-definition-dialog',\n  templateUrl: './delete-attribute-definition-dialog.component.html',\n  styleUrls: ['./delete-attribute-definition-dialog.component.scss']\n})\nexport class DeleteAttributeDefinitionDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteAttributeDefinitionDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DeleteAttributeDefinitionDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private attributeService: AttributesService) {\n  }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<AttributeDefinition>;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<AttributeDefinition>(this.data.attributes);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    const ids: number[] = [];\n    for (const attr of this.data.attributes) {\n      ids.push(attr.id);\n    }\n    this.attributeService.deleteAttributeDefinitions(ids).subscribe(() => {\n      this.translate.get('DIALOGS.DELETE_ATTRIBUTE_DEFINITION.SUCCESS').subscribe(successMessage => {\n        this.notificator.showSuccess(successMessage);\n        this.dialogRef.close(true);\n      });\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvZGVsZXRlLWF0dHJpYnV0ZS1kaWFsb2cvZGVsZXRlLWF0dHJpYnV0ZS1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatTableDataSource} from '@angular/material';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { AttrEntity, Attribute } from '@perun-web-apps/perun/models';\nimport { AttributesService } from '@perun-web-apps/perun/services';\n\nexport interface DeleteAttributeDialogData {\n  entityId: number;\n  entity: AttrEntity;\n  attributes: Attribute[];\n}\n\n@Component({\n  selector: 'app-delete-attribute-dialog',\n  templateUrl: './delete-attribute-dialog.component.html',\n  styleUrls: ['./delete-attribute-dialog.component.scss']\n})\nexport class DeleteAttributeDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteAttributeDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DeleteAttributeDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private attributeService: AttributesService) {\n  }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<Attribute>;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<Attribute>(this.data.attributes);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    const ids: number[] = [];\n    for (const attr of this.data.attributes) {\n      ids.push(attr.id);\n    }\n    this.attributeService.deleteAttributes(this.data.entityId, this.data.entity, ids).subscribe(() => {\n      this.translate.get('DIALOGS.DELETE_ATTRIBUTES.SUCCESS').subscribe(successMessage => {\n        this.notificator.showSuccess(successMessage);\n        this.dialogRef.close(true);\n      });\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvZGVsZXRlLWdyb3VwLWRpYWxvZy9kZWxldGUtZ3JvdXAtZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport { Group } from '@perun-web-apps/perun/models';\nimport { GroupService } from '@perun-web-apps/perun/services';\n\nexport interface DeleteGroupDialogData {\n  voId: number;\n  groups: Group[];\n}\n\n@Component({\n  selector: 'app-delete-group-dialog',\n  templateUrl: './delete-group-dialog.component.html',\n  styleUrls: ['./delete-group-dialog.component.scss']\n})\nexport class DeleteGroupDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteGroupDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DeleteGroupDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private groupService: GroupService) { }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<Group>;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<Group>(this.data.groups);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    this.groupService.deleteGroups(this.data.groups).subscribe( () => {\n      this.translate.get('DIALOGS.DELETE_GROUP.SUCCESS').subscribe(successMessage => {\n        this.notificator.showSuccess(successMessage);\n        this.dialogRef.close(true);\n      });\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvZGVsZXRlLW5vdGlmaWNhdGlvbi1kaWFsb2cvZGVsZXRlLW5vdGlmaWNhdGlvbi1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatTableDataSource} from '@angular/material';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { ApplicationMail } from '@perun-web-apps/perun/models';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\n\nexport interface DeleteApplicationFormMailDialogData {\n  voId: number;\n  groupId: number;\n  mails: ApplicationMail[];\n}\n\n@Component({\n  selector: 'app-delete-notification-dialog',\n  templateUrl: './delete-notification-dialog.component.html',\n  styleUrls: ['./delete-notification-dialog.component.scss']\n})\nexport class DeleteNotificationDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteNotificationDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DeleteApplicationFormMailDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private registrarService: RegistrarService) { }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<ApplicationMail>;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<ApplicationMail>(this.data.mails);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    if (this.data.groupId) {\n      for (const mail of this.data.mails) {\n        this.registrarService.deleteApplicationMailForGroup(this.data.groupId, mail.id).subscribe(() => {\n          this.dialogRef.close(true);\n        });\n      }\n    } else {\n      for (const mail of this.data.mails) {\n        this.registrarService.deleteApplicationMailForVo(this.data.voId, mail.id).subscribe( () => {\n          this.dialogRef.close(true);\n        });\n      }\n    }\n  }\n\n  getMailType(applicationMail: ApplicationMail): string {\n    let value = '';\n    if (applicationMail.mailType === undefined || applicationMail.mailType === null || applicationMail.mailType === '') {\n      value = '';\n    } else {\n      this.translate.get('VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_' + applicationMail.mailType).subscribe( text => {\n        value = text;\n      });\n    }\n    return value;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvZGVsZXRlLXJlc291cmNlLXRhZy1kaWFsb2cvZGVsZXRlLXJlc291cmNlLXRhZy1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatTableDataSource} from '@angular/material';\nimport { ResourceTag } from '@perun-web-apps/perun/models';\nimport { ResourcesService } from '@perun-web-apps/perun/services';\n\nexport interface DeleteResourceTagDialogDialogData {\n  voId: number;\n  tagsForDelete: ResourceTag[];\n}\n\n@Component({\n  selector: 'app-delete-resource-tag-dialog',\n  templateUrl: './delete-resource-tag-dialog.component.html',\n  styleUrls: ['./delete-resource-tag-dialog.component.scss']\n})\nexport class DeleteResourceTagDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<DeleteResourceTagDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: DeleteResourceTagDialogDialogData,\n              private resourceService: ResourcesService) { }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<ResourceTag>;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource(this.data.tagsForDelete);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    for (const resourceTag of this.data.tagsForDelete) {\n      this.resourceService.deleteResourceTag(resourceTag).subscribe( () => {\n        this.dialogRef.close(true);\n      }, error => this.dialogRef.close(true));\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvZWRpdC1hcHBsaWNhdGlvbi1mb3JtLWl0ZW0tZGlhbG9nL2VkaXQtYXBwbGljYXRpb24tZm9ybS1pdGVtLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {TranslateService} from '@ngx-translate/core';\nimport { ApplicationFormItem, AttributeDefinition, Group } from '@perun-web-apps/perun/models';\nimport { AttributesService, RegistrarService } from '@perun-web-apps/perun/services';\n\nexport interface EditApplicationFormItemDialogComponentData {\n  voId: number;\n  group: Group;\n  applicationFormItem: ApplicationFormItem;\n  applicationFormItems: ApplicationFormItem[];\n}\n\nexport class SelectionItem {\n  value: string;\n  displayName: string;\n\n  constructor(displayName: string, value: string) {\n    this.value = value;\n    this.displayName = displayName;\n  }\n}\n\n@Component({\n  selector: 'app-edit-application-form-item-dialog',\n  templateUrl: './edit-application-form-item-dialog.component.html',\n  styleUrls: ['./edit-application-form-item-dialog.component.scss']\n})\nexport class EditApplicationFormItemDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<EditApplicationFormItemDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: EditApplicationFormItemDialogComponentData,\n              private registrarService: RegistrarService,\n              private attributesService: AttributesService,\n              private translateService: TranslateService) { }\n\n  applicationFormItem: ApplicationFormItem;\n  attributeDefinitions: AttributeDefinition[];\n  federationAttributes: SelectionItem[] = [];\n  federationAttribute = '';\n  sourceAttributes: SelectionItem[] = [];\n  destinationAttributes: SelectionItem[] = [];\n  optionsEn: [string, string][] = [];\n  optionsCs: [string, string][] = [];\n\n\n  ngOnInit() {\n    this.applicationFormItem = this.data.applicationFormItem;\n    this.attributesService.getAttributesDefinition().subscribe( attributeDefinitions => {\n      this.attributeDefinitions = attributeDefinitions;\n      this.getDestinationAndSourceAttributes();\n    });\n    this.getFederationAttributes();\n    this.getFederationAttribute();\n    if (this.applicationFormItem.perunDestinationAttribute === null) {\n      this.applicationFormItem.perunDestinationAttribute = '';\n    }\n    if (this.applicationFormItem.perunSourceAttribute === null) {\n      this.applicationFormItem.perunSourceAttribute = '';\n    }\n    this.getOptions();\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    this.updateOptions();\n    for (const item of this.data.applicationFormItems) {\n      if (item.id === this.applicationFormItem.id) {\n        this.data.applicationFormItems[item.ordnum] = this.applicationFormItem;\n        break;\n      }\n    }\n    if (this.data.group) {      // if the dialog is for group\n      this.registrarService.updateFormItemsForGroup(this.data.group.id, this.data.applicationFormItems).subscribe( () => {\n        this.dialogRef.close(true);\n      });\n    } else {\n      this.registrarService.updateFormItemsForVo(this.data.voId, this.data.applicationFormItems).subscribe(() => {\n        this.dialogRef.close(true);\n      });\n    }\n  }\n\n  onChangingType(type: string) {\n    if (this.applicationFormItem.applicationTypes.includes(type)) {\n      const index = this.applicationFormItem.applicationTypes.indexOf(type);\n      this.applicationFormItem.applicationTypes.splice(index, 1);\n    } else {\n      this.applicationFormItem.applicationTypes.push(type);\n    }\n  }\n\n  getDestinationAndSourceAttributes() {\n    this.translateService.get('DIALOGS.APPLICATION_FORM_EDIT_ITEM.NO_SELECTED_ITEM').subscribe( noItem => {\n      this.sourceAttributes.push(new SelectionItem(noItem, ''));\n      this.destinationAttributes.push(new SelectionItem(noItem, ''));\n    });\n\n    for (const attribute of this.attributeDefinitions) {\n      if (attribute.entity.toLowerCase() === 'user' || attribute.entity.toLowerCase() === 'member') {\n        // add only member and user attributes\n        this.sourceAttributes.push(\n          new SelectionItem(attribute.friendlyName + ' (' + attribute.entity + ' / ' + this.getDefinition(attribute) + ')',\n            attribute.namespace + ':' + attribute.friendlyName)\n        );\n        this.destinationAttributes.push(\n          new SelectionItem(attribute.friendlyName + ' (' + attribute.entity + ' / ' + this.getDefinition(attribute) + ')',\n            attribute.namespace + ':' + attribute.friendlyName)\n        );\n      } else if (attribute.entity.toLowerCase() === 'vo') {\n        // source attributes can be VO too\n        this.sourceAttributes.push(\n          new SelectionItem(attribute.friendlyName + ' (' + attribute.entity + ' / ' + this.getDefinition(attribute) + ')',\n            attribute.namespace + ':' + attribute.friendlyName)\n        );\n      } else if (attribute.entity.toLowerCase() === 'group' && this.data.group) {\n        // if dialog is for group\n        this.sourceAttributes.push(\n          new SelectionItem(attribute.friendlyName + ' (' + attribute.entity + ' / ' + this.getDefinition(attribute) + ')',\n            attribute.namespace + ':' + attribute.friendlyName)\n        );\n      }\n    }\n  }\n\n  getFederationAttributes() {\n    this.translateService.get('DIALOGS.APPLICATION_FORM_EDIT_ITEM.NO_SELECTED_ITEM').subscribe( noItem => {\n      this.federationAttributes.push(new SelectionItem(noItem, ''));\n      this.translateService.get('DIALOGS.APPLICATION_FORM_EDIT_ITEM.CUSTOM_VALUE').subscribe( custom => {\n        this.federationAttributes.push(new SelectionItem(custom, 'custom'));\n        this.federationAttributes.push(new SelectionItem('Display name', 'displayName'));\n        this.federationAttributes.push(new SelectionItem('Common name', 'cn'));\n        this.federationAttributes.push(new SelectionItem('Mail', 'mail'));\n        this.federationAttributes.push(new SelectionItem('Organization', 'o'));\n        this.federationAttributes.push(new SelectionItem('Level of Assurance (LoA)', 'loa'));\n        this.federationAttributes.push(new SelectionItem('First name', 'givenName'));\n        this.federationAttributes.push(new SelectionItem('Surname', 'sn'));\n        this.federationAttributes.push(new SelectionItem('EPPN', 'eppn'));\n        this.federationAttributes.push(new SelectionItem('IdP Category', 'md_entityCategory'));\n        this.federationAttributes.push(new SelectionItem('IdP Affiliation', 'affiliation'));\n        this.federationAttributes.push(new SelectionItem('EduPersonScopedAffiliation', 'eduPersonScopedAffiliation'));\n        this.federationAttributes.push(new SelectionItem('Forwarded Affiliation from Proxy', 'forwardedScopedAffiliation'));\n        this.federationAttributes.push(new SelectionItem('schacHomeOrganization', 'schacHomeOrganization'));\n        this.federationAttributes.push(new SelectionItem('Login', 'uid'));\n        this.federationAttributes.push(new SelectionItem('Alternative login name', 'alternativeLoginName'));\n      });\n    });\n  }\n\n  getFederationAttribute() {\n    if (this.applicationFormItem.federationAttribute) {\n      for (const attribute of this.federationAttributes) {\n        if (attribute.value === this.applicationFormItem.federationAttribute) {\n          this.federationAttribute = attribute.value;\n          return;\n        }\n      }\n      this.federationAttribute = 'custom';\n    }\n  }\n\n  federationAttributeschanged() {\n    if (this.federationAttribute !== 'custom') {\n      this.applicationFormItem.federationAttribute = this.federationAttribute;\n    } else {\n      this.applicationFormItem.federationAttribute = '';\n    }\n  }\n\n  private getDefinition(attribute: AttributeDefinition) {\n    const temp = attribute.namespace.split(':');\n    if (temp[4] === null ) {\n      return 'null';\n    }\n    return temp[4];\n  }\n\n  addEnOption() {\n    this.optionsEn.push(['', '']);\n  }\n\n  addCsOption() {\n    this.optionsCs.push(['', '']);\n  }\n\n  updateOptions() {\n    let enOptions = '';\n    for (const item of this.optionsEn) {\n      if (item[0] !== '' && item[1] !== '') {\n        if (enOptions === '') {\n          enOptions = item[0] + '#' + item[1];\n        } else {\n          enOptions = enOptions + '|' + item[0] + '#' + item[1];\n        }\n      }\n    }\n    this.applicationFormItem.i18n['en'].options = enOptions;\n\n    let csOptions = '';\n    for (const item of this.optionsCs) {\n      if (item[0] !== '' && item[1] !== '') {\n        if (csOptions === '') {\n          csOptions = item[0] + '#' + item[1];\n        } else {\n          csOptions = csOptions + '|' + item[0] + '#' + item[1];\n        }\n      }\n    }\n    this.applicationFormItem.i18n['cs'].options = csOptions;\n  }\n\n  private getOptions() {\n    if (this.applicationFormItem.i18n['en'].options) {\n      const tempen = this.applicationFormItem.i18n['en'].options.split('|');\n      for (const item of tempen) {\n        const line = item.split('#');\n        this.optionsEn.push([line[0], line[1]]);\n      }\n    }\n    if (this.applicationFormItem.i18n['cs'].options) {\n      const tempcs = this.applicationFormItem.i18n['cs'].options.split('|');\n      for (const item of tempcs) {\n        const line = item.split('#');\n        this.optionsCs.push([line[0], line[1]]);\n      }\n    }\n  }\n\n  sortEnOptionsAZ() {\n    this.optionsEn = this.optionsEn.sort((n1, n2) => {\n      if (n1[1] > n2[1]) {\n        return 1;\n      }\n\n      if (n1[1] < n2[1]) {\n        return -1;\n      }\n\n      return 0;\n    });\n  }\n\n  sortEnOptionsZA() {\n    this.optionsEn = this.optionsEn.sort((n1, n2) => {\n      if (n1[1] > n2[1]) {\n        return -1;\n      }\n\n      if (n1[1] < n2[1]) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }\n\n  sortCsOptionsZA() {\n    this.optionsCs = this.optionsCs.sort((n1, n2) => {\n      if (n1[1] > n2[1]) {\n        return -1;\n      }\n\n      if (n1[1] < n2[1]) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }\n\n  sortCsOptionsAZ() {\n    this.optionsCs = this.optionsCs.sort((n1, n2) => {\n      if (n1[1] > n2[1]) {\n        return 1;\n      }\n\n      if (n1[1] < n2[1]) {\n        return -1;\n      }\n\n      return 0;\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvZWRpdC1lbWFpbC1mb290ZXItZGlhbG9nL2VkaXQtZW1haWwtZm9vdGVyLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport { AttributesService } from '@perun-web-apps/perun/services';\nimport { Attribute } from '@perun-web-apps/perun/models';\nimport { Urns } from '@perun-web-apps/perun/urns';\n\nexport interface ApplicationFormEmailFooterDialogData {\n  voId: number;\n  groupId: number;\n}\n\n@Component({\n  selector: 'app-edit-email-footer-dialog',\n  templateUrl: './edit-email-footer-dialog.component.html',\n  styleUrls: ['./edit-email-footer-dialog.component.scss']\n})\nexport class EditEmailFooterDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<EditEmailFooterDialogComponent>,\n              private attributesService: AttributesService,\n              private translateService: TranslateService,\n              private notificator: NotificatorService,\n              @Inject(MAT_DIALOG_DATA) public data: ApplicationFormEmailFooterDialogData) { }\n\n  mailFooter = '';\n  mailAttribute: Attribute;\n\n  ngOnInit() {\n    this.data.groupId ? this.getFooterForGroup() : this.getFooterForVo();\n  }\n\n  submit() {\n    this.mailAttribute.value = this.mailFooter;\n    if (this.data.groupId) {\n      this.attributesService.setAttributes(this.data.groupId, 'group', [this.mailAttribute]).subscribe( () => {\n        this.notificateSuccess();\n      });\n    } else {\n      this.attributesService.setAttributes(this.data.voId, 'vo', [this.mailAttribute]).subscribe( () => {\n        this.notificateSuccess();\n      });\n    }\n    this.dialogRef.close();\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n  getFooterForVo() {\n    this.attributesService.getAttributes(this.data.voId,\n      'vo',\n      [Urns.VO_DEF_MAIL_FOOTER]).subscribe( footer => {\n      this.mailAttribute = footer[0];\n      if (footer[0].value) {\n        this.mailFooter = footer[0].value;\n      } else {\n        this.mailFooter = '';\n      }\n    });\n  }\n\n  getFooterForGroup() {\n    this.attributesService.getAttributes(this.data.groupId,\n      'group',\n      [Urns.GROUP_DEF_MAIL_FOOTER]).subscribe( footer => {\n\n      this.mailAttribute = footer[0];\n      if (footer[0].value) {\n        this.mailFooter = footer[0].value;\n      } else {\n        this.mailFooter = '';\n      }\n\n    });\n  }\n\n  notificateSuccess() {\n    this.translateService.get('DIALOGS.NOTIFICATIONS_EDIT_FOOTER.SUCCESS').subscribe( text => {\n      this.notificator.showSuccess(text);\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvaW52aXRlLW1lbWJlci1kaWFsb2cvaW52aXRlLW1lbWJlci1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormControl, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\n\n\nexport interface InviteMemberDialogData {\n  voId: number;\n}\n\n@Component({\n  selector: 'app-invite-member-dialog',\n  templateUrl: './invite-member-dialog.component.html',\n  styleUrls: ['./invite-member-dialog.component.scss']\n})\nexport class InviteMemberDialogComponent implements OnInit {\n\n  emailForm = new FormControl('', [Validators.required, Validators.email]);\n  language = 'en';\n  name = '';\n\n  constructor(public dialogRef: MatDialogRef<InviteMemberDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: InviteMemberDialogData,\n              private registrarService: RegistrarService,\n              private snackBar: MatSnackBar,\n              private translate: TranslateService) { }\n\n  ngOnInit() {\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    if (this.emailForm.invalid || this.name === '') {\n      return;\n    } else {\n      this.registrarService.sendInvitation(this.data.voId, this.name, this.emailForm.value, this.language).subscribe(() => {\n        this.translate.get('DIALOGS.INVITE_MEMBER.SUCCESS').subscribe(successMessage => {\n          this.snackBar.open(successMessage, null, {duration: 5000});\n          this.dialogRef.close();\n        });\n      });\n    }\n  }\n\n}\n","export default \".move-options {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 15px 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9ncy9tb3ZlLWdyb3VwLWRpYWxvZy9tb3ZlLWdyb3VwLWRpYWxvZy5jb21wb25lbnQuc2NzcyIsImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9ncy9tb3ZlLWdyb3VwLWRpYWxvZy9tb3ZlLWdyb3VwLWRpYWxvZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLGNBQUE7QUNDRiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvbW92ZS1ncm91cC1kaWFsb2cvbW92ZS1ncm91cC1kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubW92ZS1vcHRpb25ze1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXJnaW46IDE1cHggMDtcbn1cbiIsIi5tb3ZlLW9wdGlvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXJnaW46IDE1cHggMDtcbn0iXX0= */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {openClose} from '../../../animations/Animations';\nimport {GroupFlatNode} from '../../../../vos/components/groups-tree/groups-tree.component';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { GroupService } from '@perun-web-apps/perun/services';\nimport { Group } from '@perun-web-apps/perun/models';\nimport { ApiRequestConfigurationService } from '../../../../core/services/api/api-request-configuration.service';\n\nexport interface MoveGroupDialogData {\n  group: GroupFlatNode;\n  theme: string;\n}\n\n@Component({\n  selector: 'app-move-group-dialog',\n  templateUrl: './move-group-dialog.component.html',\n  styleUrls: ['./move-group-dialog.component.scss'],\n  animations: [\n    openClose\n  ]\n})\nexport class MoveGroupDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<MoveGroupDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: MoveGroupDialogData,\n    private groupService: GroupService,\n    private notificator: NotificatorService,\n    private translate: TranslateService,\n    private apiRequest: ApiRequestConfigurationService\n  ) {\n    this.translate.get('DIALOGS.MOVE_GROUP.SUCCESS').subscribe(value => this.successMessage = value);\n    this.translate.get('DIALOGS.MOVE_GROUP.ERROR').subscribe(value => this.errorMessage = value);\n  }\n\n  successMessage: string;\n  errorMessage: string;\n\n  toRootOptionDisabled = false;\n  toGroupOptionDisabled = false;\n\n  otherGroups: Group[] = [];\n  filteredGroups: Observable<Group[]>;\n  otherGroupsCtrl = new FormControl();\n  moveOption: 'toGroup' | 'toRoot';\n  loading = false;\n\n  ngOnInit() {\n    this.groupService.getAllGroups(this.data.group.voId).subscribe(allGroups => {\n      this.otherGroups = allGroups.filter(group => group.id !== this.data.group.id && group.name !== 'members');\n      if (this.data.group.parentGroupId === null) {\n        this.toRootOptionDisabled = true;\n        this.moveOption = 'toGroup';\n      }\n      this.filteredGroups = this.otherGroupsCtrl.valueChanges\n        .pipe(\n          startWith(''),\n          map(group => group ? this._filterGroups(group) : this.otherGroups.slice())\n        );\n    });\n  }\n\n  // Hack that ensures proper autocomplete value displaying\n  displayFn(group: Group): string | Group {\n    return group ? group.name : group;\n  }\n\n  private _filterGroups(value: any): Group[] {\n    // Hack that ensures proper autocomplete value displaying\n    if (typeof value === 'object') {\n      return [];\n    }\n\n    const filterValue = value.toLowerCase();\n\n    return value ? this.otherGroups.filter(group => group.name.toLowerCase().indexOf(filterValue) > -1) : this.otherGroups;\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n  confirm() {\n    this.loading = true;\n    // FIXME this might not work in case of some race condition (other request finishes sooner)\n    this.apiRequest.dontHandleErrorForNext();\n    this.groupService.moveGroup(\n      this.data.group.id,\n      this.otherGroupsCtrl.value ? this.otherGroupsCtrl.value.id : undefined,\n      false).subscribe(() => {\n      this.notificator.showSuccess(this.successMessage);\n      this.dialogRef.close(true);\n    }, (error => {\n      this.notificator.showRPCError(error, this.errorMessage);\n      this.dialogRef.close(false);\n    }));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3Mvbm90aWZpY2F0aW9ucy1jb3B5LW1haWxzLWRpYWxvZy9ub3RpZmljYXRpb25zLWNvcHktbWFpbHMtZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AbstractControl, FormControl, ValidatorFn, Validators} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {openClose} from '../../../animations/Animations';\nimport { GroupService, RegistrarService, VoService } from '@perun-web-apps/perun/services';\nimport { Group, Vo } from '@perun-web-apps/perun/models';\n\nexport interface NotificationsCopyMailsDialogData {\n  voId: number;\n  groupId: number;\n}\n\n@Component({\n  selector: 'app-notifications-copy-mails-dialog',\n  templateUrl: './notifications-copy-mails-dialog.component.html',\n  styleUrls: ['./notifications-copy-mails-dialog.component.scss'],\n  animations: [\n    openClose\n  ]\n})\nexport class NotificationsCopyMailsDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<NotificationsCopyMailsDialogComponent>,\n              private voService: VoService,\n              private groupService: GroupService,\n              private translateService: TranslateService,\n              private registrarService: RegistrarService,\n              @Inject(MAT_DIALOG_DATA) public data: NotificationsCopyMailsDialogData) { }\n\n  vos: Vo[] = [];\n  groups: Group[] = [];\n  fakeGroup: Group;\n  voControl = new FormControl();\n  filteredVos: Observable<Vo[]>;\n  groupControl = new FormControl();\n  filteredGroups: Observable<Group[]>;\n\n  ngOnInit() {\n    this.translateService.get('DIALOGS.NOTIFICATIONS_COPY_MAILS.NO_GROUP_SELECTED').subscribe( text => {\n      this.fakeGroup = {\n        id: -1,\n        name: text,\n        voId: 0,\n        parentGroupId: 0,\n        shortName: '',\n        description: ''\n      };\n      this.groupControl.setValue(this.fakeGroup);\n\n      this.voService.getAllVos().subscribe(vos => {\n        this.vos = vos;\n\n        this.voControl = new FormControl('', [this.invalidVo(this.vos), Validators.required]);\n\n        this.filteredVos = this.voControl.valueChanges\n          .pipe(\n            startWith(''),\n            map(value => typeof value === 'string' ? value : value.name),\n            map(name => name ? this._filterVo(name) : this.vos.slice())\n          );\n        this.vos = vos.sort(((vo1, vo2) => {\n          if (vo1.name > vo2.name) {\n            return 1;\n          }\n\n          if (vo1.name < vo2.name) {\n            return -1;\n          }\n\n          return 0;\n        }));\n      });\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  _filterVo(value: string): Vo[] {\n    const filterValue = value.toLowerCase();\n\n    return this.vos.filter(option => option.name.toLowerCase().includes(filterValue));\n  }\n\n  _filterGroup(value: string): Group[] {\n    const filterValue = value.toLowerCase();\n\n    return this.groups.filter(option => option.name.toLowerCase().includes(filterValue));\n  }\n\n  displayFn(entity?: any): string | undefined {\n    return entity ? entity.name : undefined;\n  }\n\n  submit() {\n    if (this.data.groupId) {      // checking if the dialog is for group or Vo\n      if (this.groupControl.value === this.fakeGroup) {\n        this.registrarService.copyMailsFromVoToGroup(this.voControl.value.id, this.data.groupId).subscribe(() => {\n          this.dialogRef.close(true);\n        });\n      } else {\n        this.registrarService.copyMailsFromGroupToGroup(this.groupControl.value.id, this.data.groupId).subscribe(() => {\n          this.dialogRef.close(true);\n        });\n      }\n    } else {\n      if (this.groupControl.value === this.fakeGroup) {\n        this.registrarService.copyMailsFromVoToVo(this.voControl.value.id, this.data.voId).subscribe(() => {\n          this.dialogRef.close(true);\n        });\n      } else {\n        this.registrarService.copyMailsFromGroupToVo(this.groupControl.value.id, this.data.voId).subscribe(() => {\n          this.dialogRef.close(true);\n        });\n      }\n    }\n  }\n\n  getGroups() {\n    if (!this.voControl.invalid) {\n      this.groupService.getAllGroups(this.voControl.value.id).subscribe( groups => {\n        this.groups = [this.fakeGroup].concat(groups);\n        this.groupControl.setValidators([this.invalidGroup(this.groups), Validators.required]);\n        this.filteredGroups = this.groupControl.valueChanges\n          .pipe(\n            startWith(''),\n            map(value => typeof value === 'string' ? value : value.name),\n            map(name => name ? this._filterGroup(name) : this.groups.slice())\n          );\n      });\n    } else {\n      this.groups = [this.fakeGroup];\n    }\n  }\n\n  invalidVo(vos: Vo[]): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      let invalid = false;\n      if (control.value) {\n        if (control.value.beanName) {\n          if (control.value.beanName !== 'Vo') {\n            invalid = true;\n          }\n        } else {\n          const vo = vos.find(x => x.name.toLowerCase() === control.value.toLowerCase());\n          if (!vo) {\n            invalid = true;\n          } else {\n            control.setValue(vo);\n          }\n        }\n      }\n      return invalid ? {'invalidVo': true} : null;\n    };\n  }\n\n  invalidGroup(groups: Group[]): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      let invalid = false;\n      if (control.value) {\n        if (control.value.beanName) {\n          if (control.value.beanName !== 'Group') {\n            invalid = true;\n          }\n        } else if (control.value === this.fakeGroup) {\n          invalid = false;\n        } else {\n          const group = groups.find(x => x.name.toLowerCase() === control.value.toLowerCase());\n          if (!group) {\n            invalid = true;\n          } else {\n            control.setValue(group);\n          }\n        }\n      }\n      return invalid ? {'invalidGroup': true} : null;\n    };\n  }\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvcmVtb3ZlLWdyb3VwLWZyb20tcmVzb3VyY2UtZGlhbG9nL3JlbW92ZS1ncm91cC1mcm9tLXJlc291cmNlLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatTableDataSource } from '@angular/material';\nimport { Group } from '@perun-web-apps/perun/models';\nimport { ResourcesService } from '@perun-web-apps/perun/services';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface RemoveGroupFromResourceDialogData {\n  resourceId: number;\n  groups: Group[];\n}\n\n@Component({\n  selector: 'app-perun-web-apps-remove-group-from-resource-dialog',\n  templateUrl: './remove-group-from-resource-dialog.component.html',\n  styleUrls: ['./remove-group-from-resource-dialog.component.scss']\n})\nexport class RemoveGroupFromResourceDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<RemoveGroupFromResourceDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: RemoveGroupFromResourceDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private resourceService: ResourcesService) { }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<Group>;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<Group>(this.data.groups);\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    const groupsId = [];\n    for (const group of this.data.groups) {\n      groupsId.push(group.id);\n    }\n    this.resourceService.removeGroupsFromResource(groupsId, this.data.resourceId).subscribe( () => {\n      this.translate.get('DIALOGS.REMOVE_GROUP_FROM_RESOURCE.SUCCESS').subscribe(successMessage => {\n        this.notificator.showSuccess(successMessage);\n        this.dialogRef.close(true);\n      });\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvcmVtb3ZlLWdyb3VwLW1hbmFnZXItZGlhbG9nL3JlbW92ZS1ncm91cC1tYW5hZ2VyLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatTableDataSource} from '@angular/material';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { Facility, Group, Role, Vo } from '@perun-web-apps/perun/models';\nimport { AuthzService } from '@perun-web-apps/perun/services';\n\nexport interface RemoveGroupDialogData {\n  complementaryObject: Vo | Group | Facility;\n  groups: Group[];\n  role: Role;\n  theme: string;\n}\n\n@Component({\n  selector: 'app-remove-group-manager-dialog',\n  templateUrl: './remove-group-manager-dialog.component.html',\n  styleUrls: ['./remove-group-manager-dialog.component.scss']\n})\nexport class RemoveGroupManagerDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<RemoveGroupManagerDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: RemoveGroupDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private authzService: AuthzService) {\n  }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<Group>;\n\n  loading: boolean;\n  theme: string;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<Group>(this.data.groups);\n    this.theme = this.data.theme;\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    this.loading = true;\n    this.authzService.unsetRoleForGroups(this.data.role, this.data.groups.map(group => group.id), this.data.complementaryObject)\n      .subscribe(() => {\n        this.translate.get('DIALOGS.REMOVE_GROUPS.SUCCESS').subscribe(successMessage => {\n          this.notificator.showSuccess(successMessage);\n          this.loading = false;\n          this.dialogRef.close(true);\n        }, () => this.loading = false);\n      }, () => this.loading = false);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvcmVtb3ZlLW1hbmFnZXItZGlhbG9nL3JlbW92ZS1tYW5hZ2VyLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatTableDataSource} from '@angular/material';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { Facility, Group, RichUser, Role, Vo } from '@perun-web-apps/perun/models';\nimport { AuthzService } from '@perun-web-apps/perun/services';\n\nexport interface RemoveManagerDialogData {\n  complementaryObject: Vo | Group | Facility;\n  managers: RichUser[];\n  role: Role;\n  theme: string;\n}\n\n@Component({\n  selector: 'app-remove-manager-dialog',\n  templateUrl: './remove-manager-dialog.component.html',\n  styleUrls: ['./remove-manager-dialog.component.scss']\n})\nexport class RemoveManagerDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<RemoveManagerDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: RemoveManagerDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private authzService: AuthzService) {\n  }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<RichUser>;\n\n  loading: boolean;\n  theme: string;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<RichUser>(this.data.managers);\n    this.theme = this.data.theme;\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    this.loading = true;\n    this.authzService.unsetRole(this.data.role, this.data.managers.map(manager => manager.id), this.data.complementaryObject)\n      .subscribe(() => {\n      this.translate.get('DIALOGS.REMOVE_MANAGERS.SUCCESS').subscribe(successMessage => {\n        this.notificator.showSuccess(successMessage);\n        this.loading = false;\n        this.dialogRef.close(true);\n      }, () => this.loading = false);\n    }, () => this.loading = false);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvcmVtb3ZlLW1lbWJlcnMtZGlhbG9nL3JlbW92ZS1tZW1iZXJzLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatTableDataSource} from '@angular/material';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { RichMember } from '@perun-web-apps/perun/models';\nimport { GroupService, MembersService } from '@perun-web-apps/perun/services';\n\nexport interface RemoveMembersDialogData {\n  members: RichMember[];\n  groupId?: number;\n}\n@Component({\n  selector: 'app-remove-members-dialog',\n  templateUrl: './remove-members-dialog.component.html',\n  styleUrls: ['./remove-members-dialog.component.scss']\n})\nexport class RemoveMembersDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<RemoveMembersDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: RemoveMembersDialogData,\n    private membersService: MembersService,\n    private groupService: GroupService,\n    private notificator: NotificatorService,\n    private translate: TranslateService\n  ) { }\n\n  displayedColumns: string[] = ['id', 'name'];\n  dataSource: MatTableDataSource<RichMember>;\n\n  loading: boolean;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<RichMember>(this.data.members);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    this.loading = true;\n    if (!!this.data.groupId) {\n      this.groupService.removeMembers(this.data.groupId, this.data.members.map(m => m.id))\n        .subscribe(() => this.onSuccess(), () => this.onError());\n    } else {\n      this.membersService.deleteMembers(this.data.members.map(m => m.id))\n        .subscribe(() => this.onSuccess(), () => this.onError());\n    }\n  }\n\n  onSuccess() {\n    const message = !!this.data.groupId ?\n      this.translate.instant('DIALOGS.REMOVE_MEMBERS.SUCCESS_GROUP'):\n      this.translate.instant('DIALOGS.REMOVE_MEMBERS.SUCCESS');\n    this.notificator.showSuccess(message);\n    this.dialogRef.close(true);\n    this.loading = false;\n  }\n\n  onError() {\n    this.loading = false;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvcmVtb3ZlLXJlc291cmNlLWRpYWxvZy9yZW1vdmUtcmVzb3VyY2UtZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatTableDataSource} from '@angular/material';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { RichResource } from '@perun-web-apps/perun/models';\nimport { ResourcesService } from '@perun-web-apps/perun/services';\n\nexport interface RemoveResourceDialogData {\n  facilityId: number;\n  resources: RichResource[];\n}\n\n@Component({\n  selector: 'app-remove-resource-dialog',\n  templateUrl: './remove-resource-dialog.component.html',\n  styleUrls: ['./remove-resource-dialog.component.scss']\n})\nexport class RemoveResourceDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<RemoveResourceDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: RemoveResourceDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private resourcesService: ResourcesService) { }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<RichResource>;\n  loading = false;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<RichResource>(this.data.resources);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    // TODO Removes only one resource at the time. In future there would be need to remove more than one resource.\n    this.loading = true;\n    this.resourcesService.removeResource(this.data.resources[0].id).subscribe( () => {\n      this.translate.get('DIALOGS.REMOVE_RESOURCES.SUCCESS').subscribe(successMessage => {\n        this.loading = false;\n        this.notificator.showSuccess(successMessage);\n        this.dialogRef.close(true);\n      });\n    });\n  }\n\n}\n","export default \".foo {\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9ncy9yZW1vdmUtdm8tZGlhbG9nL3JlbW92ZS12by1kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvcmVtb3ZlLXZvLWRpYWxvZy9yZW1vdmUtdm8tZGlhbG9nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7QUNDRiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvcmVtb3ZlLXZvLWRpYWxvZy9yZW1vdmUtdm8tZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3tcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cbiIsIi5mb28ge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufSJdfQ== */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatTableDataSource } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { VoService } from '@perun-web-apps/perun/services';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { Vo } from '@perun-web-apps/perun/models';\n\nexport interface RemoveVoDialogData {\n  vos: Vo[]\n  theme: string;\n}\n\n@Component({\n  selector: 'app-remove-vo-dialog',\n  templateUrl: './remove-vo-dialog.component.html',\n  styleUrls: ['./remove-vo-dialog.component.scss']\n})\nexport class RemoveVoDialogComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<RemoveVoDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: RemoveVoDialogData,\n    private notificator: NotificatorService,\n    private voService: VoService,\n    private translate: TranslateService\n  ) {\n    translate.get('DIALOGS.REMOVE_VO.SUCCESS').subscribe(value => this.successMessage = value);\n  }\n\n  successMessage: string;\n  theme: string;\n  force = false;\n  loading: boolean;\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<Vo>;\n\n  ngOnInit() {\n    this.theme = this.data.theme;\n    this.dataSource = new MatTableDataSource<Vo>(this.data.vos);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    this.loading = true;\n    //TODO Works for one Vo at the time, in future there may be need to remove  more Vos at once\n    this.voService.removeVo(this.data.vos[0].id, this.force).subscribe(() => {\n      this.notificator.showSuccess(this.successMessage);\n      this.loading = false;\n      this.dialogRef.close(true);\n    }, () => this.loading = false);\n\n  }\n\n}\n","export default \".viewport {\\n  height: 400px;\\n  width: 470px;\\n}\\n\\n.hide-horizontal-scrollbar {\\n  overflow-x: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9ncy9zaG93LW5vdGlmaWNhdGlvbi1oaXN0b3J5LWRpYWxvZy9zaG93LW5vdGlmaWNhdGlvbi1oaXN0b3J5LWRpYWxvZy5jb21wb25lbnQuc2NzcyIsImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9ncy9zaG93LW5vdGlmaWNhdGlvbi1oaXN0b3J5LWRpYWxvZy9zaG93LW5vdGlmaWNhdGlvbi1oaXN0b3J5LWRpYWxvZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxZQUFBO0FDQ0Y7O0FERUE7RUFDRSxrQkFBQTtBQ0NGIiwiZmlsZSI6ImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9ncy9zaG93LW5vdGlmaWNhdGlvbi1oaXN0b3J5LWRpYWxvZy9zaG93LW5vdGlmaWNhdGlvbi1oaXN0b3J5LWRpYWxvZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi52aWV3cG9ydCB7XG4gIGhlaWdodDogNDAwcHg7XG4gIHdpZHRoOiA0NzBweDtcbn1cblxuLmhpZGUtaG9yaXpvbnRhbC1zY3JvbGxiYXJ7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cbiIsIi52aWV3cG9ydCB7XG4gIGhlaWdodDogNDAwcHg7XG4gIHdpZHRoOiA0NzBweDtcbn1cblxuLmhpZGUtaG9yaXpvbnRhbC1zY3JvbGxiYXIge1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { NotificationStorageService } from '../../../../core/services/common/notification-storage.service';\nimport { NotificationData } from '../../../models/NotificationData';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-show-notification-history-dialog',\n  templateUrl: './show-notification-history-dialog.component.html',\n  styleUrls: ['./show-notification-history-dialog.component.scss']\n})\nexport class ShowNotificationHistoryDialogComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<ShowNotificationHistoryDialogComponent>,\n    notificationStorageService: NotificationStorageService,\n  ) {\n    this.notificationStorageService = notificationStorageService;\n  }\n\n  notificationStorageService: NotificationStorageService;\n  notifications: NotificationData[];\n\n  ngOnInit() {\n    this.notifications = this.notificationStorageService.getNotifications();\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2RpYWxvZ3MvdXBkYXRlLWFwcGxpY2F0aW9uLWZvcm0tZGlhbG9nL3VwZGF0ZS1hcHBsaWNhdGlvbi1mb3JtLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\nimport { ApplicationForm } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-update-application-form-dialog',\n  templateUrl: './update-application-form-dialog.component.html',\n  styleUrls: ['./update-application-form-dialog.component.scss']\n})\nexport class UpdateApplicationFormDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<UpdateApplicationFormDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) private data,\n              private registrarService: RegistrarService) { }\n\n  applicationForm: ApplicationForm;\n  moduleName: string;\n  initialState: string;\n  extensionState: string;\n\n  ngOnInit() {\n    this.applicationForm = this.data.applicationForm;\n    this.moduleName = this.applicationForm.moduleClassName;\n    this.initialState = this.applicationForm.automaticApproval ? 'auto' : 'manual';\n    this.extensionState = this.applicationForm.automaticApprovalExtension ? 'auto' : 'manual';\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    this.applicationForm.moduleClassName = this.moduleName;\n    this.applicationForm.automaticApproval = this.initialState === 'auto';\n    this.applicationForm.automaticApprovalExtension = this.extensionState === 'auto';\n    this.registrarService.updateForm(this.applicationForm).subscribe( updatedForm => {\n      this.dialogRef.close(updatedForm);\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2dyb3VwLW1lbnUvZ3JvdXAtbWVudS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {GroupFlatNode} from '../../../vos/components/groups-tree/groups-tree.component';\n\n@Component({\n  selector: 'app-group-menu',\n  templateUrl: './group-menu.component.html',\n  styleUrls: ['./group-menu.component.scss']\n})\nexport class GroupMenuComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() group: GroupFlatNode;\n\n  @Input() disabled = false;\n\n  @Output() moveGroup: EventEmitter<void> = new EventEmitter<void>();\n\n  ngOnInit() {\n  }\n\n  onMoveGroup() {\n    console.log('Emit menu - ' + this.group);\n    this.moveGroup.emit();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2dyb3Vwcy1saXN0L2dyb3Vwcy1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {AfterViewInit, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatPaginator} from '@angular/material';\nimport { Group } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-groups-list',\n  templateUrl: './groups-list.component.html',\n  styleUrls: ['./groups-list.component.scss']\n})\nexport class GroupsListComponent implements AfterViewInit, OnChanges {\n\n  constructor() { }\n\n  @ViewChild(MatSort, { static: true }) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @Output()\n  moveGroup = new EventEmitter<Group>();\n\n  @Input()\n  groups: Group[] = [];\n\n  @Input()\n  selection = new SelectionModel<Group>(true, []);\n\n  private sort: MatSort;\n  private hasMembersGroup = false;\n\n  @Input()\n  hideColumns: string[] = [];\n\n  @Input()\n  inDialog: boolean;\n\n  @Input()\n  disableMembers: boolean;\n\n  @Input()\n  pageSize = 10;\n\n  displayedColumns: string[] = ['select', 'id', 'vo', 'name', 'description', 'menu'];\n  dataSource: MatTableDataSource<Group>;\n\n  exporting = false;\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.hasMembersGroup = this.checkIfHasMembersGroup();\n    this.dataSource = new MatTableDataSource<Group>(this.groups);\n    this.setDataSource();\n  }\n\n  checkIfHasMembersGroup(): boolean {\n    for (const group of this.groups) {\n      if (group.name === 'members') {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  setDataSource() {\n    this.displayedColumns = this.displayedColumns.filter(x => !this.hideColumns.includes(x));\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  isAllSelected() {\n    let numSelected = this.selection.selected.length;\n\n    if (numSelected > 0 && this.hasMembersGroup && this.disableMembers) {\n      numSelected++;\n    }\n\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => {\n        if (row.name !== 'members' ) {\n          this.selection.select(row);\n        } else if (!this.disableMembers) {\n          this.selection.select(row);\n        }\n      });\n  }\n\n  checkboxLabel(row?: Group): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  onMoveGroup(group: Group) {\n    this.moveGroup.emit(group);\n  }\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2ltbWVkaWF0ZS1maWx0ZXIvaW1tZWRpYXRlLWZpbHRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'app-immediate-filter',\n  templateUrl: './immediate-filter.component.html',\n  styleUrls: ['./immediate-filter.component.scss']\n})\nexport class ImmediateFilterComponent implements OnInit {\n\n  constructor() { }\n\n  @Input()\n  placeholder: string;\n\n  @Output()\n  filter = new EventEmitter<string>();\n\n  formControl = new FormControl();\n\n  ngOnInit(): void {\n    this.formControl.valueChanges.subscribe(value => {\n      let returnValue = value.trim();\n      returnValue = returnValue.toLowerCase();\n      this.filter.emit(returnValue);\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL21hbmFnZXJzLXBhZ2UvbWFuYWdlcnMtcGFnZS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, HostBinding, Input, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {AddManagerDialogComponent} from '../dialogs/add-manager-dialog/add-manager-dialog.component';\nimport {RemoveManagerDialogComponent} from '../dialogs/remove-manager-dialog/remove-manager-dialog.component';\nimport {RemoveGroupManagerDialogComponent} from '../dialogs/remove-group-manager-dialog/remove-group-manager-dialog.component';\nimport {AddGroupManagerDialogComponent} from '../dialogs/add-group-manager-dialog/add-group-manager-dialog.component';\nimport { AuthzService } from '@perun-web-apps/perun/services';\nimport { Facility, Group, RichUser, Role, Vo } from '@perun-web-apps/perun/models';\nimport { Urns } from '@perun-web-apps/perun/urns';\n\n@Component({\n  selector: 'app-managers-page',\n  templateUrl: './managers-page.component.html',\n  styleUrls: ['./managers-page.component.scss']\n})\nexport class ManagersPageComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private dialog: MatDialog,\n    private authzService: AuthzService\n  ) {\n  }\n\n\n  groups: Group[] = null;\n  managers: RichUser[] = null;\n\n  @Input()\n  complementaryObject: Group | Vo | Facility;\n\n  @Input()\n  availableRoles: Role[];\n\n  @Input()\n  complementaryObjectType: string;\n\n  @Input()\n  theme: string;\n\n  selectionUsers = new SelectionModel<RichUser>(true, []);\n  selectionGroups = new SelectionModel<Group>(true, []);\n\n  selected = 'user';\n  selectedRole: Role;\n\n  loading = false;\n\n  ngOnInit() {\n    this.selectedRole = this.availableRoles[0];\n    this.changeUser();\n  }\n\n  changeUser() {\n    this.loading = true;\n    if (this.selected === 'user') {\n      this.authzService.getRichAdmins(this.selectedRole, this.complementaryObject.id, this.complementaryObjectType,\n        [Urns.USER_DEF_ORGANIZATION, Urns.USER_DEF_PREFERRED_MAIL]).subscribe(managers => {\n        this.managers = managers;\n        this.selectionUsers.clear();\n        this.selectionGroups.clear();\n        this.loading = false;\n      }, () => {\n        this.loading = false;\n      });\n    }\n    if (this.selected === 'group') {\n      this.authzService.getManagerGroups(this.selectedRole, this.complementaryObject.id, this.complementaryObjectType).subscribe(groups => {\n        this.groups = groups;\n        this.selectionUsers.clear();\n        this.selectionGroups.clear();\n        this.loading = false;\n      }, () => {\n        this.loading = false;\n      });\n    }\n  }\n\n  addManager() {\n    const dialogRef = this.dialog.open(AddManagerDialogComponent, {\n      width: '1000px',\n      data: {\n        complementaryObject: this.complementaryObject,\n        theme: this.theme,\n        availableRoles: this.availableRoles,\n        selectedRole: this.selectedRole\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.changeUser();\n    });\n  }\n\n  removeManager() {\n    const dialogRef = this.dialog.open(RemoveManagerDialogComponent, {\n      width: '450px',\n      data: {\n        managers: this.selectionUsers.selected,\n        complementaryObject: this.complementaryObject,\n        role: this.selectedRole,\n        theme: this.theme\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.changeUser();\n      }\n    });\n  }\n\n  removeGroup() {\n    const dialogRef = this.dialog.open(RemoveGroupManagerDialogComponent, {\n      width: '450px',\n      data: {\n        groups: this.selectionGroups.selected,\n        complementaryObject: this.complementaryObject,\n        role: this.selectedRole,\n        theme: this.theme\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.changeUser();\n      }\n    });\n  }\n\n  addGroup() {\n    const dialogRef = this.dialog.open(AddGroupManagerDialogComponent, {\n      width: '1000px',\n      data: {\n        complementaryObject: this.complementaryObject,\n        availableRoles: this.availableRoles,\n        theme: this.theme,\n        selectedRole: this.selectedRole\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.changeUser();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL21lbWJlcnMtY2FuZGlkYXRlcy1saXN0L21lbWJlcnMtY2FuZGlkYXRlcy1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {AfterViewInit, Component, Input, OnChanges, SimpleChanges, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { MemberCandidate } from '@perun-web-apps/perun/models';\nimport { parseEmail, parseFullName } from '@perun-web-apps/perun/utils';\n\n@Component({\n  selector: 'app-members-candidates-list',\n  templateUrl: './members-candidates-list.component.html',\n  styleUrls: ['./members-candidates-list.component.scss']\n})\nexport class MembersCandidatesListComponent implements OnChanges, AfterViewInit {\n\n  constructor() {\n  }\n\n  private sort: MatSort;\n\n  @ViewChild(MatSort, {static: true}) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @ViewChild(MatPaginator, {static: false}) paginator: MatPaginator;\n\n  @Input()\n  members: MemberCandidate[];\n\n  @Input()\n  selection: SelectionModel<MemberCandidate>;\n\n  displayedColumns: string[] = ['checkbox', 'fullName', 'voExtSource', 'email'];\n  dataSource: MatTableDataSource<MemberCandidate>;\n\n  exporting = false;\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n\n      this.dataSource.sortingDataAccessor = (richMember, property) => {\n        switch (property) {\n          case 'fullName':\n            return parseFullName(richMember.richUser);\n          case 'email':\n            return parseEmail(richMember.member);\n          default:\n            return richMember[property];\n        }\n      };\n\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.dataSource = new MatTableDataSource<MemberCandidate>(this.members);\n\n    this.setDataSource();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  checkboxLabel(row?: MemberCandidate): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\n      row.member === null ? row.richUser.id + 1 : row.member.id + 1}`;\n  }\n\n}\n","export default \".items-container {\\n  display: grid;\\n  grid-gap: 0;\\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\\n  margin: 0 -8px;\\n}\\n@media (max-width: 768px) {\\n  .items-container {\\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\\n  }\\n}\\n.item-itself {\\n  text-align: center;\\n  min-height: 200px;\\n  padding: 20px;\\n  display: flex;\\n  flex-direction: column;\\n  margin: 8px;\\n  color: #ffffff;\\n  align-items: center;\\n  font-size: 1.25rem;\\n}\\n.item-itself:hover {\\n  text-decoration: none;\\n}\\n.item-itself img {\\n  height: 120px;\\n  margin-bottom: 10px;\\n}\\n@media (max-width: 768px) {\\n  .item-itself {\\n    min-height: 150px;\\n    padding: 10px;\\n  }\\n  .item-itself img {\\n    height: 80px;\\n    margin-bottom: 10px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbWVudS1idXR0b25zLWZpZWxkL21lbnUtYnV0dG9ucy1maWVsZC5jb21wb25lbnQuc2NzcyIsImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbWVudS1idXR0b25zLWZpZWxkL21lbnUtYnV0dG9ucy1maWVsZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxXQUFBO0VBQ0EsNERBQUE7RUFDQSxjQUFBO0FDQ0Y7QURDRTtFQU5GO0lBT0ksNERBQUE7RUNFRjtBQUNGO0FEQUE7RUFDRSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLFdBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtBQ0dGO0FEREU7RUFDRSxxQkFBQTtBQ0dKO0FEREU7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7QUNHSjtBREFFO0VBbkJGO0lBb0JJLGlCQUFBO0lBQ0EsYUFBQTtFQ0dGO0VERkU7SUFDRSxZQUFBO0lBQ0EsbUJBQUE7RUNJSjtBQUNGIiwiZmlsZSI6ImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbWVudS1idXR0b25zLWZpZWxkL21lbnUtYnV0dG9ucy1maWVsZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pdGVtcy1jb250YWluZXIge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWdhcDogMDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLG1pbm1heCgyMjBweCwxZnIpKTtcbiAgbWFyZ2luOiAwIC04cHg7XG5cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLG1pbm1heCgxNjBweCwxZnIpKTtcbiAgfVxufVxuLml0ZW0taXRzZWxmIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtaW4taGVpZ2h0OiAyMDBweDtcbiAgcGFkZGluZzogMjBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWFyZ2luOiA4cHg7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LXNpemU6IDEuMjVyZW07XG5cbiAgJjpob3ZlciB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG4gICYgaW1nIHtcbiAgICBoZWlnaHQ6IDEyMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIH1cblxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBtaW4taGVpZ2h0OiAxNTBweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgICYgaW1nIHtcbiAgICAgIGhlaWdodDogODBweDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuXG59XG4iLCIuaXRlbXMtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC1nYXA6IDA7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDIyMHB4LCAxZnIpKTtcbiAgbWFyZ2luOiAwIC04cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLml0ZW1zLWNvbnRhaW5lciB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMTYwcHgsIDFmcikpO1xuICB9XG59XG5cbi5pdGVtLWl0c2VsZiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWluLWhlaWdodDogMjAwcHg7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1hcmdpbjogOHB4O1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xufVxuLml0ZW0taXRzZWxmOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuLml0ZW0taXRzZWxmIGltZyB7XG4gIGhlaWdodDogMTIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLml0ZW0taXRzZWxmIHtcbiAgICBtaW4taGVpZ2h0OiAxNTBweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICB9XG4gIC5pdGVtLWl0c2VsZiBpbWcge1xuICAgIGhlaWdodDogODBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG59Il19 */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {MenuItem} from '../../models/MenuItem';\nimport { MatDialog } from '@angular/material/dialog';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-menu-buttons-field',\n  templateUrl: './menu-buttons-field.component.html',\n  styleUrls: ['./menu-buttons-field.component.scss']\n})\nexport class MenuButtonsFieldComponent implements OnInit {\n\n  constructor(public dialog: MatDialog,\n              protected route: ActivatedRoute) { }\n\n  @Input()\n  items: MenuItem[];\n\n  @Input()\n  size = 'large';\n\n  voId: number;\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.voId = params['voId'];\n    });\n  }\n\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL25vdGlmaWNhdGlvbi1kaWFsb2cvbm90aWZpY2F0aW9uLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {NotificationData} from '../../models/NotificationData';\nimport {BugReportDialogComponent} from '../bug-report-dialog/bug-report-dialog.component';\n\n@Component({\n  selector: 'app-notification-dialog',\n  templateUrl: './notification-dialog.component.html',\n  styleUrls: ['./notification-dialog.component.scss']\n})\nexport class NotificationDialogComponent {\n\n  constructor(\n    private dialogRef: MatDialogRef<NotificationDialogComponent>,\n    private dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public data: NotificationData\n  ) { }\n\n  onCloseClick() {\n    this.dialogRef.close();\n  }\n\n  onBugReportClick() {\n    this.dialogRef.afterClosed().subscribe(() => {\n      this.dialog.open(BugReportDialogComponent, {\n        width: '550px',\n        data: {\n          error: this.data.error,\n        },\n        autoFocus: false\n      });\n    });\n    this.dialogRef.close();\n  }\n}\n","export default \".notification {\\n  width: 450px;\\n  margin-bottom: 16px;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  color: #ffffff;\\n}\\n\\n.notification-container {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: row;\\n  padding: 16px 16px;\\n}\\n\\n.notification-text {\\n  font-size: 1.1em;\\n}\\n\\n.notification-action {\\n  margin-left: auto;\\n  text-decoration: underline;\\n  cursor: pointer;\\n}\\n\\n@media (max-width: 768px) {\\n  .notification {\\n    width: 100%;\\n  }\\n}\\n\\n.notification.error {\\n  background-color: #d32f2f;\\n}\\n\\n.notification.success {\\n  background-color: #288619;\\n}\\n\\n.notification-icon {\\n  padding-right: 8px;\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uL25vdGlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uL25vdGlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7RUFDQSxtQkFBQTtFQUVBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLDhCQUFBO0VBQ0EsY0FBQTtBQ0FGOztBREdBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0FDQUY7O0FER0E7RUFDRSxnQkFBQTtBQ0FGOztBREdBO0VBQ0UsaUJBQUE7RUFDQSwwQkFBQTtFQUNBLGVBQUE7QUNBRjs7QURHQTtFQUNFO0lBQ0UsV0FBQTtFQ0FGO0FBQ0Y7O0FER0E7RUFDRSx5QkFBQTtBQ0RGOztBRElBO0VBQ0UseUJBQUE7QUNERjs7QURJQTtFQUNFLGtCQUFBO0VBQ0EsWUFBQTtBQ0RGIiwiZmlsZSI6ImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uL25vdGlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ub3RpZmljYXRpb24ge1xuICB3aWR0aDogNDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIC8vYm9yZGVyLWxlZnQ6IDhweCBzb2xpZDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cblxuLm5vdGlmaWNhdGlvbi1jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgcGFkZGluZzogMTZweCAxNnB4XG59XG5cbi5ub3RpZmljYXRpb24tdGV4dCB7XG4gIGZvbnQtc2l6ZTogMS4xZW07XG59XG5cbi5ub3RpZmljYXRpb24tYWN0aW9uIHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAubm90aWZpY2F0aW9uIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG4ubm90aWZpY2F0aW9uLmVycm9yIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2QzMmYyZjtcbn1cblxuLm5vdGlmaWNhdGlvbi5zdWNjZXNzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI4ODYxOTtcbn1cblxuLm5vdGlmaWNhdGlvbi1pY29uIHtcbiAgcGFkZGluZy1yaWdodDogOHB4O1xuICBjb2xvcjogd2hpdGU7XG59XG4iLCIubm90aWZpY2F0aW9uIHtcbiAgd2lkdGg6IDQ1MHB4O1xuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuXG4ubm90aWZpY2F0aW9uLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBwYWRkaW5nOiAxNnB4IDE2cHg7XG59XG5cbi5ub3RpZmljYXRpb24tdGV4dCB7XG4gIGZvbnQtc2l6ZTogMS4xZW07XG59XG5cbi5ub3RpZmljYXRpb24tYWN0aW9uIHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAubm90aWZpY2F0aW9uIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuLm5vdGlmaWNhdGlvbi5lcnJvciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkMzJmMmY7XG59XG5cbi5ub3RpZmljYXRpb24uc3VjY2VzcyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyODg2MTk7XG59XG5cbi5ub3RpZmljYXRpb24taWNvbiB7XG4gIHBhZGRpbmctcmlnaHQ6IDhweDtcbiAgY29sb3I6IHdoaXRlO1xufSJdfQ== */\"","import {Component, Input} from '@angular/core';\nimport {NotificationData} from '../../models/NotificationData';\nimport { MatDialog } from '@angular/material/dialog';\nimport {NotificationDialogComponent} from '../notification-dialog/notification-dialog.component';\nimport { NotificationStorageService } from '../../../core/services/common/notification-storage.service';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.scss']\n})\nexport class NotificationComponent {\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationStorageService: NotificationStorageService\n  ) { }\n\n  @Input()\n  data: NotificationData;\n\n  @Input()\n  hideShadow: boolean;\n\n  @Input()\n  newNotification = false;\n\n  alreadyPressed = false;\n\n  doAction(): void {\n    if(this.newNotification){\n      this.alreadyPressed = true;\n    }\n    if(this.notificationStorageService.newNotificationsCount){\n      this.notificationStorageService.newNotificationsCount--;\n    }\n    if (this.data.action !== undefined) {\n      this.data.action();\n    } else {\n      this.dialog.open(NotificationDialogComponent, {\n        width: '550px',\n        data: this.data,\n        autoFocus: false\n      });\n    }\n  }\n}\n","export default \"#notificator {\\n  position: fixed;\\n  right: 0;\\n  z-index: 1001;\\n  padding: 8px;\\n}\\n\\n@media (max-width: 768px) {\\n  #notificator {\\n    width: 100%;\\n    top: initial;\\n    bottom: 0;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbm90aWZpY2F0b3Ivbm90aWZpY2F0b3IuY29tcG9uZW50LnNjc3MiLCJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL25vdGlmaWNhdG9yL25vdGlmaWNhdG9yLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLFFBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtBQ0NGOztBREVBO0VBQ0U7SUFDRSxXQUFBO0lBQ0EsWUFBQTtJQUNBLFNBQUE7RUNDRjtBQUNGIiwiZmlsZSI6ImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbm90aWZpY2F0b3Ivbm90aWZpY2F0b3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbm90aWZpY2F0b3Ige1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAwO1xuICB6LWluZGV4OiAxMDAxO1xuICBwYWRkaW5nOiA4cHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAjbm90aWZpY2F0b3Ige1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRvcDogaW5pdGlhbDtcbiAgICBib3R0b206IDA7XG4gIH1cbn1cbiIsIiNub3RpZmljYXRvciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgcmlnaHQ6IDA7XG4gIHotaW5kZXg6IDEwMDE7XG4gIHBhZGRpbmc6IDhweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICNub3RpZmljYXRvciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiBpbml0aWFsO1xuICAgIGJvdHRvbTogMDtcbiAgfVxufSJdfQ== */\"","import { Component, HostListener } from '@angular/core';\nimport {NotificationData} from '../../models/NotificationData';\nimport {NotificatorService} from '../../../core/services/common/notificator.service';\nimport {flyInOut} from '../../animations/Animations';\nimport { doAfterDelay } from '@perun-web-apps/perun/utils';\nimport { environment } from '../../../../environments/environment';\nimport { AppComponent } from '../../../app.component';\nimport { NotificationStorageService } from '../../../core/services/common/notification-storage.service';\n\n@Component({\n  selector: 'app-notificator',\n  templateUrl: './notificator.component.html',\n  styleUrls: ['./notificator.component.scss'],\n  animations: [\n    flyInOut\n  ]\n})\nexport class NotificatorComponent {\n\n  constructor(\n    private notificator: NotificatorService,\n    private notificationStorageService: NotificationStorageService\n  ) {\n    this.notificator.addNotification.subscribe(notificationData => {\n      this.processNotification(notificationData);\n    });\n    this.getScreenSize();\n  }\n\n  private mobileView = false;\n\n  notifications: NotificationData[] = [];\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize() {\n    this.mobileView = window.innerWidth <= AppComponent.minWidth;\n  }\n\n  private processNotification(data: NotificationData): void {\n    this.notifications.push(data);\n    this.notificationStorageService.storeNotification(data);\n\n    doAfterDelay(data.delay, () => {\n      this.notifications.shift();\n    });\n  }\n\n  getNotificatorTop() {\n    if (this.mobileView) {\n      return 'initial';\n    }\n    return environment.production ? '112px' : '64px';\n  }\n}\n","export default \".center-icon {\\n  display: inline-flex;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvcmVmcmVzaC1idXR0b24vcmVmcmVzaC1idXR0b24uY29tcG9uZW50LnNjc3MiLCJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3JlZnJlc2gtYnV0dG9uL3JlZnJlc2gtYnV0dG9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQUE7QUNDRiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3JlZnJlc2gtYnV0dG9uL3JlZnJlc2gtYnV0dG9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNlbnRlci1pY29uIHtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG59XG4iLCIuY2VudGVyLWljb24ge1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbn0iXX0= */\"","import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-refresh-button',\n  templateUrl: './refresh-button.component.html',\n  styleUrls: ['./refresh-button.component.scss']\n})\nexport class RefreshButtonComponent {\n\n  constructor() { }\n\n  @Output()\n  refresh = new EventEmitter<MouseEvent>();\n\n  @Input()\n  disabled: boolean;\n\n  onClickbutton(event: MouseEvent) {\n    this.refresh.emit(event);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3JlcG9ydC1pc3N1ZS1kaWFsb2cvcmVwb3J0LWlzc3VlLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificatorService } from '../../../core/services/common/notificator.service';\nimport { RtMessagesService } from '@perun-web-apps/perun/services';\n\n@Component({\n  selector: 'app-perun-web-apps-report-issue-dialog',\n  templateUrl: './report-issue-dialog.component.html',\n  styleUrls: ['./report-issue-dialog.component.scss']\n})\nexport class ReportIssueDialogComponent implements OnInit {\n\n  message = '';\n  subject = '';\n\n  constructor(private dialogRef: MatDialogRef<ReportIssueDialogComponent>,\n              private translate: TranslateService,\n              private notificator: NotificatorService,\n              private rtMessages: RtMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  sendBugReport() {\n    this.rtMessages.sendMessageToRT('perun', this.subject, this.getFullEmailBody()).subscribe(() => {\n      // TODO show ticket number and email\n      this.dialogRef.afterClosed()\n        .subscribe(() => this.notificator.showSuccess(this.translate.instant('DIALOGS.REPORT_ISSUE.SUCCESS')));\n      this.dialogRef.close();\n    });\n  }\n\n  getFullEmailBody(): string {\n    return this.message + '\\n' +\n      '------------------------\\n' +\n\n      // TODO add instance\n      'Perun instance: GENERIC\\n' +\n\n      // TODO add version\n      'NEW GUI';\n\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n","export default \"table {\\n  width: 100% !important;\\n}\\n\\n.mat-row {\\n  height: auto;\\n}\\n\\n.mat-cell {\\n  padding: 8px 8px 8px 0;\\n}\\n\\n.mat-column-select {\\n  flex: 0 0 25% !important;\\n  min-width: 50px !important;\\n}\\n\\n.mat-column-id {\\n  flex: 0 0 25% !important;\\n  min-width: 60px !important;\\n}\\n\\n.filter-input {\\n  width: 300px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvcmVzb3VyY2VzLWxpc3QvcmVzb3VyY2VzLWxpc3QuY29tcG9uZW50LnNjc3MiLCJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3Jlc291cmNlcy1saXN0L3Jlc291cmNlcy1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQUE7QUNDRjs7QURFQTtFQUNFLFlBQUE7QUNDRjs7QURFQTtFQUNFLHNCQUFBO0FDQ0Y7O0FERUE7RUFDRSx3QkFBQTtFQUNBLDBCQUFBO0FDQ0Y7O0FERUE7RUFDRSx3QkFBQTtFQUNBLDBCQUFBO0FDQ0Y7O0FERUE7RUFDRSx1QkFBQTtBQ0NGIiwiZmlsZSI6ImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvcmVzb3VyY2VzLWxpc3QvcmVzb3VyY2VzLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtcm93IHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4ubWF0LWNlbGwge1xuICBwYWRkaW5nOiA4cHggOHB4IDhweCAwO1xufVxuXG4ubWF0LWNvbHVtbi1zZWxlY3Qge1xuICBmbGV4OiAwIDAgMjUlICFpbXBvcnRhbnQ7XG4gIG1pbi13aWR0aDogNTBweCAhaW1wb3J0YW50O1xufVxuXG4ubWF0LWNvbHVtbi1pZCB7XG4gIGZsZXg6IDAgMCAyNSUgIWltcG9ydGFudDtcbiAgbWluLXdpZHRoOiA2MHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5maWx0ZXItaW5wdXQge1xuICB3aWR0aDogMzAwcHggIWltcG9ydGFudDtcbn1cbiIsInRhYmxlIHtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbn1cblxuLm1hdC1yb3cge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi5tYXQtY2VsbCB7XG4gIHBhZGRpbmc6IDhweCA4cHggOHB4IDA7XG59XG5cbi5tYXQtY29sdW1uLXNlbGVjdCB7XG4gIGZsZXg6IDAgMCAyNSUgIWltcG9ydGFudDtcbiAgbWluLXdpZHRoOiA1MHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtY29sdW1uLWlkIHtcbiAgZmxleDogMCAwIDI1JSAhaW1wb3J0YW50O1xuICBtaW4td2lkdGg6IDYwcHggIWltcG9ydGFudDtcbn1cblxuLmZpbHRlci1pbnB1dCB7XG4gIHdpZHRoOiAzMDBweCAhaW1wb3J0YW50O1xufSJdfQ== */\"","import {AfterViewInit, Component, Input, OnChanges, SimpleChanges, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { RichResource } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-resources-list',\n  templateUrl: './resources-list.component.html',\n  styleUrls: ['./resources-list.component.scss']\n})\nexport class ResourcesListComponent implements AfterViewInit, OnChanges {\n\n  constructor() { }\n\n  @ViewChild(MatSort, { static: true }) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @Input()\n  resources: RichResource[] = [];\n\n  private sort: MatSort;\n\n  @Input()\n  hideColumns: string[] = [];\n\n  displayedColumns: string[] = ['select', 'id', 'name', 'facility', 'tags', 'description'];\n  dataSource: MatTableDataSource<RichResource>;\n\n  exporting = false;\n\n  @Input()\n  selection;\n\n  @Input()\n  filterValue: string;\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.displayedColumns = this.displayedColumns.filter(x => !this.hideColumns.includes(x));\n    this.dataSource = new MatTableDataSource<RichResource>(this.resources);\n    this.setDataSource();\n    this.dataSource.filter = this.filterValue;\n  }\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: RichResource): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3Jlc291cmNlcy10YWdzLWxpc3QvcmVzb3VyY2VzLXRhZ3MtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import {AfterViewInit, Component, Input, OnChanges, SimpleChanges, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {NotificatorService} from '../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { ResourcesService } from '@perun-web-apps/perun/services';\nimport { ResourceTag } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-resources-tags-list',\n  templateUrl: './resources-tags-list.component.html',\n  styleUrls: ['./resources-tags-list.component.scss']\n})\nexport class ResourcesTagsListComponent implements OnChanges, AfterViewInit {\n\n  constructor( private resourceService: ResourcesService,\n               private notificator: NotificatorService,\n               private translator: TranslateService) { }\n\n  @Input()\n  resourceTags: ResourceTag[] = [];\n\n  @Input()\n  filterValue: string;\n\n  @ViewChild(MatSort, { static: true }) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n\n  private sort: MatSort;\n\n  displayedColumns: string[] = ['select', 'id', 'name', 'edit'];\n  dataSource: MatTableDataSource<ResourceTag>;\n\n  @Input()\n  selection = new SelectionModel<ResourceTag>(true, []);\n\n  isChanging = new SelectionModel<ResourceTag>(true, []);\n  exporting = false;\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.dataSource = new MatTableDataSource<ResourceTag>(this.resourceTags);\n    this.setDataSource();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.filter = this.filterValue;\n    }\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  checkboxLabel(row?: ResourceTag): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n  save(tag: ResourceTag) {\n    this.resourceService.updateResourceTag(tag).subscribe( () => {\n      this.translator.get('SHARED.COMPONENTS.RESOURCES_TAGS_LIST.EDIT_SUCCESS').subscribe( text => {\n        this.notificator.showSuccess(text);\n      });\n      this.isChanging.deselect(tag);\n    });\n  }\n\n  edit(row?: ResourceTag) {\n    this.isChanging.select(row);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3NldHRpbmdzLXRvZ2dsZS1pdGVtL3NldHRpbmdzLXRvZ2dsZS1pdGVtLmNvbXBvbmVudC5zY3NzIn0= */\"","import {AfterViewInit, Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {openClose} from '../../animations/Animations';\nimport { MatSlideToggle } from '@angular/material/slide-toggle';\n\n@Component({\n  selector: 'app-settings-toggle-item',\n  templateUrl: './settings-toggle-item.component.html',\n  styleUrls: ['./settings-toggle-item.component.scss'],\n  animations: [\n    openClose\n  ]\n})\nexport class SettingsToggleItemComponent implements AfterViewInit {\n\n  constructor() { }\n\n  @ViewChild(MatSlideToggle, { static: true })\n  toggle: MatSlideToggle;\n\n  @Input()\n  title: string;\n\n  modelValue: boolean;\n\n  @Output() modelChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Input() get model(): boolean {\n    return this.modelValue;\n  }\n  set model(value: boolean) {\n    this.modelValue = value;\n  }\n\n  ngAfterViewInit(): void {\n    this.toggle.change.subscribe(() => this.valueChanged());\n  }\n\n  valueChanged() {\n    this.modelChange.emit(this.toggle.checked);\n  }\n}\n","export default \".position-right {\\n  position: absolute;\\n  right: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvdGFibGUtb3B0aW9ucy90YWJsZS1vcHRpb25zLmNvbXBvbmVudC5zY3NzIiwiYXBwcy9hZG1pbi1ndWkvc3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy90YWJsZS1vcHRpb25zL3RhYmxlLW9wdGlvbnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBQTtFQUNBLFdBQUE7QUNDRiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3RhYmxlLW9wdGlvbnMvdGFibGUtb3B0aW9ucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wb3NpdGlvbi1yaWdodCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDIwcHg7XG59XG4iLCIucG9zaXRpb24tcmlnaHQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAyMHB4O1xufSJdfQ== */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {MatTableExporterDirective} from 'mat-table-exporter';\n\n@Component({\n  selector: 'app-table-options',\n  templateUrl: './table-options.component.html',\n  styleUrls: ['./table-options.component.scss']\n})\nexport class TableOptionsComponent implements OnInit {\n\n  constructor() { }\n\n  @Input()\n  exporter: MatTableExporterDirective;\n\n  // tslint:disable-next-line:no-output-native\n  @Output()\n  start = new EventEmitter();\n\n  // tslint:disable-next-line:no-output-native\n  @Output()\n  end = new EventEmitter();\n\n  ngOnInit(): void {\n    this.exporter.exportStarted.subscribe(() => {this.start.emit();});\n    this.exporter.exportCompleted.subscribe(() => this.end.emit());\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3VzZXItZGV0YWlsLXBhZ2UvdXNlci1kZXRhaWwtcGFnZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {fadeIn} from '../../animations/Animations';\n\n@Component({\n  selector: 'app-user-detail-page',\n  templateUrl: './user-detail-page.component.html',\n  styleUrls: ['./user-detail-page.component.scss'],\n  animations: [\n    fadeIn\n  ]\n})\nexport class UserDetailPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3VzZXItZGV0YWlsLXBhZ2UvdXNlci1kZXRhaWwvdXNlci1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.scss']\n})\nexport class UserDetailComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3VzZXItZGV0YWlsLXBhZ2UvdXNlci1ncm91cHMvdXNlci1ncm91cHMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnInit} from '@angular/core';\nimport { Group, PerunPrincipal, Vo } from '@perun-web-apps/perun/models';\nimport { GroupService, MembersService, UsersService } from '@perun-web-apps/perun/services';\nimport { StoreService } from '../../../../core/services/common/store.service';\n\n@Component({\n  selector: 'app-user-groups',\n  templateUrl: './user-groups.component.html',\n  styleUrls: ['./user-groups.component.scss']\n})\nexport class UserGroupsComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  loading = false;\n  principal: PerunPrincipal;\n  vos: Vo[] = [];\n  membersGroups: Group[] = [];\n  adminsGroups: Group[] = [];\n\n  constructor(private usersService: UsersService,\n              private memberService: MembersService,\n              private groupService: GroupService,\n              private store: StoreService) { }\n\n  ngOnInit() {\n    this.loading = true;\n    this.principal = this.store.getPerunPrincipal();\n    this.refreshTable();\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.membersGroups = [];\n    this.usersService.getVosWhereUserIsMember(this.principal.userId).subscribe(vos => {\n      this.vos = vos;\n      for(const vo of this.vos) {\n        this.memberService.getMemberByUser(vo.id, this.principal.userId).subscribe( member => {\n          this.groupService.getMemberGroups(member.id).subscribe( groups => {\n            this.membersGroups = this.membersGroups.concat(groups);\n          });\n        });\n      }\n      this.loading = false;\n    });\n    this.usersService.getGroupsWhereUserIsAdmin(this.principal.userId).subscribe( groups => {\n      this.adminsGroups = groups;\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3VzZXItZGV0YWlsLXBhZ2UvdXNlci1vcmdhbml6YXRpb25zL3VzZXItb3JnYW5pemF0aW9ucy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { UsersService } from '@perun-web-apps/perun/services';\nimport { PerunPrincipal, Vo } from '@perun-web-apps/perun/models';\nimport { AuthResolverService } from '../../../../core/services/common/auth-resolver.service';\nimport { StoreService } from '../../../../core/services/common/store.service';\n\n@Component({\n  selector: 'app-user-organizations',\n  templateUrl: './user-organizations.component.html',\n  styleUrls: ['./user-organizations.component.scss']\n})\nexport class UserOrganizationsComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private usersService: UsersService,\n    private authResolver: AuthResolverService,\n    private store: StoreService\n  ) {\n  }\n\n  principal: PerunPrincipal;\n  vosWhereIsAdmin: Vo[];\n  vosWhereIsMember: Vo[];\n  loading: boolean;\n  userId: number;\n  filterValue = '';\n\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.principal = this.store.getPerunPrincipal();\n    this.userId = this.principal.user.id;\n\n    this.refreshTable();\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.usersService.getVosWhereUserIsMember(this.userId).subscribe(vosMember => {\n      this.vosWhereIsMember = vosMember;\n\n      this.usersService.getVosWhereUserIsAdmin(this.userId).subscribe(vosAdmin => {\n        this.vosWhereIsAdmin = vosAdmin;\n        this.loading = false;\n      });\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3VzZXItZGV0YWlsLXBhZ2UvdXNlci1vdmVydmlldy91c2VyLW92ZXJ2aWV3LmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {MenuItem} from '../../../models/MenuItem';\nimport { User } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-user-overview',\n  templateUrl: './user-overview.component.html',\n  styleUrls: ['./user-overview.component.scss']\n})\nexport class UserOverviewComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor() { }\n\n  navItems: MenuItem[] = [];\n  user: User;\n  path: string;\n\n  ngOnInit() {\n    this.initNavItems();\n  }\n\n  private initNavItems() {\n    this.navItems = [\n      {\n        icon: 'user-white.svg',\n        url: `detail`,\n        label: 'MENU_ITEMS.USER.DETAIL',\n        style: 'user-btn'\n      },\n      {\n        icon: 'vo-white.svg',\n        url: `organizations`,\n        label: 'MENU_ITEMS.USER.ORGANIZATIONS',\n        style: 'user-btn'\n      },\n      {\n        icon: 'group-white.svg',\n        url: `groups`,\n        label: 'MENU_ITEMS.USER.GROUPS',\n        style: 'user-btn'\n      },\n      {\n        icon: 'settings2-white.svg',\n        url: `settings`,\n        label: 'MENU_ITEMS.USER.SETTINGS',\n        style: 'user-btn'\n      }\n    ];\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3VzZXItZGV0YWlsLXBhZ2UvdXNlci1zZXR0aW5ncy91c2VyLXNldHRpbmdzLWF0dHJpYnV0ZXMvdXNlci1zZXR0aW5ncy1hdHRyaWJ1dGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, HostBinding, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AttributesService } from '@perun-web-apps/perun/services';\nimport { NotificatorService } from '../../../../../core/services/common/notificator.service';\nimport { MatDialog } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AttributesListComponent } from '../../../attributes-list/attributes-list.component';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Attribute } from '@perun-web-apps/perun/models';\nimport { CreateAttributeDialogComponent } from '../../../dialogs/create-attribute-dialog/create-attribute-dialog.component';\nimport { filterCoreAttributes } from '@perun-web-apps/perun/utils';\nimport { DeleteAttributeDialogComponent } from '../../../dialogs/delete-attribute-dialog/delete-attribute-dialog.component';\nimport { StoreService } from '../../../../../core/services/common/store.service';\n\n@Component({\n  selector: 'app-user-settings-attributes',\n  templateUrl: './user-settings-attributes.component.html',\n  styleUrls: ['./user-settings-attributes.component.scss']\n})\nexport class UserSettingsAttributesComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private attributesService: AttributesService,\n    private notificator: NotificatorService,\n    private dialog: MatDialog,\n    private translate: TranslateService,\n    private store: StoreService\n  ) {\n    this.translate.get('USER_DETAIL.SETTINGS.ATTRIBUTES.SUCCESS_SAVE').subscribe(value => this.saveSuccessMessage = value);\n    this.translate.get('USER_DETAIL.SETTINGS.ATTRIBUTES.SUCCESS_DELETE').subscribe(value => this.deleteSuccessMessage = value);\n  }\n\n  @ViewChild('list', {static: false})\n  list: AttributesListComponent;\n\n  saveSuccessMessage: string;\n  deleteSuccessMessage: string;\n  selection = new SelectionModel<Attribute>(true, []);\n  attributes: Attribute[] = [];\n  userId: number;\n\n  loading: boolean;\n  filterValue = '';\n\n  ngOnInit() {\n    this.route.parent.parent.params.subscribe(params => {\n      this.userId = params['userId'];\n      if (this.userId === undefined) {\n        this.userId = this.store.getPerunPrincipal().userId;\n      }\n\n      this.refreshTable();\n    });\n  }\n\n  onCreate() {\n    const dialogRef = this.dialog.open(CreateAttributeDialogComponent, {\n      width: '1050px',\n      data: {\n        entityId: this.userId,\n        entity: 'user',\n        notEmptyAttributes: this.attributes,\n        style: 'user-theme'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  onSave() {\n    // have to use this to update attribute with map in it, before saving it\n    this.list.updateMapAttributes();\n    this.attributesService.setAttributes(this.userId, 'user', this.selection.selected).subscribe(() => {\n      this.attributesService.getAllAttributes(this.userId, 'user').subscribe(attributes => {\n        this.attributes = filterCoreAttributes(attributes);\n        this.notificator.showSuccess(this.saveSuccessMessage);\n        this.selection.clear();\n      });\n    });\n  }\n\n  onDelete() {\n    const dialogRef = this.dialog.open(DeleteAttributeDialogComponent, {\n      width: '450px',\n      data: {\n        entityId: this.userId,\n        entity: 'user',\n        attributes: this.selection.selected\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(didConfirm => {\n      if (didConfirm) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  refreshTable() {\n    // TODO Does not apply filter on refresh.\n    this.loading = true;\n    this.attributesService.getAllAttributes(this.userId, 'user').subscribe(attributes => {\n      this.attributes = filterCoreAttributes(attributes);\n      this.selection.clear();\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3VzZXItZGV0YWlsLXBhZ2UvdXNlci1zZXR0aW5ncy91c2VyLXNldHRpbmdzLW92ZXJ2aWV3L3VzZXItc2V0dGluZ3Mtb3ZlcnZpZXcuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {MenuItem} from '../../../../models/MenuItem';\n\n@Component({\n  selector: 'app-user-settings-overview',\n  templateUrl: './user-settings-overview.component.html',\n  styleUrls: ['./user-settings-overview.component.scss']\n})\nexport class UserSettingsOverviewComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n  ) { }\n\n  navItems: MenuItem[] = [];\n  path: string;\n\n  ngOnInit() {\n    this.initNavItems();\n  }\n\n  private initNavItems() {\n    this.navItems = [\n      {\n        icon: 'attributes-white.svg',\n        url: `attributes`,\n        label: 'MENU_ITEMS.USER.ATTRIBUTES',\n        style: 'user-btn'\n      }\n    ];\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3VzZXItZGV0YWlsLXBhZ2UvdXNlci1zZXR0aW5ncy91c2VyLXNldHRpbmdzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-user-settings',\n  templateUrl: './user-settings.component.html',\n  styleUrls: ['./user-settings.component.scss']\n})\nexport class UserSettingsComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthResolverService } from '../../../core/services/common/auth-resolver.service';\nimport { SideMenuService } from '../../../core/services/common/side-menu.service';\nimport { UsersService } from '@perun-web-apps/perun/services';\nimport { PerunPrincipal, User } from '@perun-web-apps/perun/models';\nimport { StoreService } from '../../../core/services/common/store.service';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor(\n    public authResolver: AuthResolverService,\n    private usersService: UsersService,\n    private sideMenuService: SideMenuService,\n    private store: StoreService\n  ) {\n  }\n\n  principal: PerunPrincipal;\n  user: User;\n  path = `/profile`;\n  regex = `/profile`;\n\n  ngOnInit() {\n    this.principal = this.store.getPerunPrincipal();\n    this.user = this.principal.user;\n\n    this.sideMenuService.setUserItems([]);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3VzZXJzLWxpc3QvdXNlcnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Input, OnChanges, SimpleChanges, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { RichUser } from '@perun-web-apps/perun/models';\nimport { parseFullName, parseUserEmail, parseVo } from '@perun-web-apps/perun/utils';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss']\n})\nexport class UsersListComponent implements OnChanges {\n\n  constructor() { }\n\n  @ViewChild(MatSort, { static: true }) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @ViewChild(MatPaginator, { static: true })\n  paginator: MatPaginator;\n\n  @Input()\n  users: RichUser[];\n\n  private sort: MatSort;\n\n  @Input()\n  hideColumns: string[] = [];\n\n  @Input()\n  selection = new SelectionModel<RichUser>(true, []);\n\n  @Input()\n  inDialog: boolean;\n\n  displayedColumns: string[] = ['select', 'id', 'name', 'email', 'organization'];\n\n  dataSource: MatTableDataSource<RichUser>;\n\n  exporting = false;\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.sortingDataAccessor = (item, property) => {\n        switch (property) {\n          case 'name':\n            return parseFullName(item);\n          case 'email':\n            return parseUserEmail(item);\n          case 'organization':\n            return parseVo(item);\n          default:\n            return item[property];\n        }\n      };\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.displayedColumns = this.displayedColumns.filter(x => !this.hideColumns.includes(x));\n    this.dataSource = new MatTableDataSource<RichUser>(this.users);\n    this.dataSource.paginator = this.paginator;\n    this.setDataSource();\n  }\n\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  checkboxLabel(row?: RichUser): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3ZvLXNlbGVjdC10YWJsZS92by1zZWxlY3QtdGFibGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { AfterViewInit, Component, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { Vo } from '@perun-web-apps/perun/models';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'app-vo-select-table',\n  templateUrl: './vo-select-table.component.html',\n  styleUrls: ['./vo-select-table.component.scss']\n})\nexport class VoSelectTableComponent implements OnChanges, AfterViewInit {\n\n  constructor() { }\n\n  @Input()\n  vos: Vo[] = [];\n\n  @Input()\n  recentIds: number[];\n\n  @Input()\n  filterValue: string;\n\n  @Input()\n  selection: SelectionModel<Vo>;\n\n  @Input()\n  displayedColumns: string[];\n\n  @ViewChild(MatSort, { static: true }) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n\n  private sort: MatSort;\n\n  dataSource: MatTableDataSource<Vo>;\n  exporting = false;\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.dataSource = new MatTableDataSource<Vo>(this.vos);\n    this.setDataSource();\n    this.dataSource.filter = this.filterValue;\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  checkboxLabel(row?: Vo): string {\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9kZWJ1Z2dlci1wYWdlL2RlYnVnZ2VyLXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {AuthResolverService} from '../../core/services/common/auth-resolver.service';\nimport { PerunPrincipal } from '@perun-web-apps/perun/models';\nimport { StoreService } from '../../core/services/common/store.service';\n\n@Component({\n  selector: 'app-debugger-page',\n  templateUrl: './debugger-page.component.html',\n  styleUrls: ['./debugger-page.component.scss']\n})\nexport class DebuggerPageComponent implements OnInit {\n\n  constructor(\n    public authResolver: AuthResolverService,\n    private store: StoreService\n  ) { }\n\n  principal: PerunPrincipal;\n\n  ngOnInit() {\n    this.principal = this.store.getPerunPrincipal();\n  }\n}\n","import {Directive, ElementRef, OnInit} from '@angular/core';\n\n@Directive({\n  selector: '[appAutoFocus]'\n})\nexport class AutoFocusDirective implements OnInit {\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnInit(): void {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","export default \"footer {\\n  background: #263238;\\n  height: 100%;\\n}\\n\\n.footer-col {\\n  padding-top: 35px;\\n  white-space: nowrap;\\n}\\n\\n#copyright {\\n  color: #9E9E9E;\\n}\\n\\na {\\n  color: inherit;\\n  text-decoration: none;\\n}\\n\\nli {\\n  color: #E0E0E0;\\n}\\n\\n#clickable {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL3BlcnVuLWZvb3Rlci9wZXJ1bi1mb290ZXIuY29tcG9uZW50LnNjc3MiLCJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9wZXJ1bi1mb290ZXIvcGVydW4tZm9vdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQUE7RUFDQSxZQUFBO0FDQ0Y7O0FERUE7RUFDRSxpQkFBQTtFQUNBLG1CQUFBO0FDQ0Y7O0FERUE7RUFDRSxjQUFBO0FDQ0Y7O0FERUE7RUFDRSxjQUFBO0VBQ0EscUJBQUE7QUNDRjs7QURFQTtFQUNFLGNBQUE7QUNDRjs7QURFQTtFQUNFLGVBQUE7QUNDRiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9wZXJ1bi1mb290ZXIvcGVydW4tZm9vdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9vdGVyIHtcbiAgYmFja2dyb3VuZDogIzI2MzIzODtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uZm9vdGVyLWNvbCB7XG4gIHBhZGRpbmctdG9wOiAzNXB4O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuXG4jY29weXJpZ2h0IHtcbiAgY29sb3I6ICM5RTlFOUU7XG59XG5cbmEge1xuICBjb2xvcjppbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmxpIHtcbiAgY29sb3I6ICNFMEUwRTA7XG59XG5cbiNjbGlja2FibGUge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4iLCJmb290ZXIge1xuICBiYWNrZ3JvdW5kOiAjMjYzMjM4O1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5mb290ZXItY29sIHtcbiAgcGFkZGluZy10b3A6IDM1cHg7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cbiNjb3B5cmlnaHQge1xuICBjb2xvcjogIzlFOUU5RTtcbn1cblxuYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmxpIHtcbiAgY29sb3I6ICNFMEUwRTA7XG59XG5cbiNjbGlja2FibGUge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { ReportIssueDialogComponent } from '../components/report-issue-dialog/report-issue-dialog.component';\nimport { StoreService } from '../../core/services/common/store.service';\n\n@Component({\n  selector: 'app-perun-footer',\n  templateUrl: './perun-footer.component.html',\n  styleUrls: ['./perun-footer.component.scss']\n})\nexport class PerunFooterComponent implements OnInit {\n\n  constructor(private storeService: StoreService,\n              private dialog: MatDialog) { }\n\n  perunwebpage = '';\n  perunTeamWebpage = '';\n  privacyPolicy = '';\n  userDocumentationWebpage = '';\n  administratorDocumentationWebpage = '';\n  supportMail = '';\n  version = '';\n  copyright: [] = [];\n\n  currentYear = (new Date()).getFullYear();\n\n  ngOnInit() {\n    this.perunwebpage = this.storeService.get('footer_perun_web_web');\n    this.perunTeamWebpage = this.storeService.get('footer_perun_team_web');\n    this.privacyPolicy = this.storeService.get('footer_privacy_policy_web');\n    this.userDocumentationWebpage = this.storeService.get('footer_users_documentation_web');\n    this.administratorDocumentationWebpage = this.storeService.get('footer_administrator_documentation');\n    this.supportMail = this.storeService.get('footer_support_mail');\n    this.version = this.storeService.get('version');\n    this.copyright = this.storeService.get('footer_copyright');\n  }\n\n  openBugReportDialog() {\n    this.dialog.open(ReportIssueDialogComponent, {\n      width: '550px',\n    });\n  }\n}\n","export default \"#nav-menu-user-info {\\n  display: flex;\\n  flex-direction: row;\\n  color: #ffffff;\\n  align-items: center;\\n  padding-right: 16px;\\n}\\n\\n#nav-menu-icons {\\n  margin-left: 8px;\\n  display: flex;\\n  flex-direction: row;\\n  width: 270px;\\n}\\n\\n#nav-link-items {\\n  display: flex;\\n  flex-direction: row;\\n  color: #ffffff;\\n  align-items: center;\\n}\\n\\n#nav-link-items a {\\n  padding: 0 1rem;\\n  line-height: 64px;\\n  text-align: center;\\n  height: 64px;\\n  display: block;\\n}\\n\\n.nav-menu-icon {\\n  padding: 16px 8px;\\n}\\n\\n.nav-menu-icon img {\\n  height: 32px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL3BlcnVuLW5hdi9wZXJ1bi1uYXYuY29tcG9uZW50LnNjc3MiLCJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9wZXJ1bi1uYXYvcGVydW4tbmF2LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FDQ0Y7O0FEQUU7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FDRUo7O0FERUE7RUFDRSxpQkFBQTtBQ0NGOztBRENFO0VBQ0UsWUFBQTtBQ0NKIiwiZmlsZSI6ImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL3BlcnVuLW5hdi9wZXJ1bi1uYXYuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbmF2LW1lbnUtdXNlci1pbmZvIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctcmlnaHQ6IDE2cHg7XG59XG5cbiNuYXYtbWVudS1pY29ucyB7XG4gIG1hcmdpbi1sZWZ0OiA4cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIHdpZHRoOiAyNzBweDtcbn1cblxuI25hdi1saW5rLWl0ZW1zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICYgYSB7XG4gICAgcGFkZGluZzogMCAxcmVtO1xuICAgIGxpbmUtaGVpZ2h0OiA2NHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDY0cHg7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cblxuLm5hdi1tZW51LWljb24ge1xuICBwYWRkaW5nOiAxNnB4IDhweDtcblxuICBpbWcge1xuICAgIGhlaWdodDogMzJweDtcbiAgfVxufVxuIiwiI25hdi1tZW51LXVzZXItaW5mbyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nLXJpZ2h0OiAxNnB4O1xufVxuXG4jbmF2LW1lbnUtaWNvbnMge1xuICBtYXJnaW4tbGVmdDogOHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB3aWR0aDogMjcwcHg7XG59XG5cbiNuYXYtbGluay1pdGVtcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuI25hdi1saW5rLWl0ZW1zIGEge1xuICBwYWRkaW5nOiAwIDFyZW07XG4gIGxpbmUtaGVpZ2h0OiA2NHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGhlaWdodDogNjRweDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5uYXYtbWVudS1pY29uIHtcbiAgcGFkZGluZzogMTZweCA4cHg7XG59XG4ubmF2LW1lbnUtaWNvbiBpbWcge1xuICBoZWlnaHQ6IDMycHg7XG59Il19 */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { PerunPrincipal } from '@perun-web-apps/perun/models';\nimport { StoreService } from '../../core/services/common/store.service';\nimport { AuthService } from '../../core/services/common/auth.service';\nimport { MatDialog } from '@angular/material';\nimport { ShowNotificationHistoryDialogComponent } from '../components/dialogs/show-notification-history-dialog/show-notification-history-dialog.component';\nimport { NotificationStorageService } from '../../core/services/common/notification-storage.service';\n\n@Component({\n  selector: 'app-perun-nav-menu',\n  templateUrl: './perun-nav.component.html',\n  styleUrls: ['./perun-nav.component.scss']\n})\nexport class PerunNavComponent implements OnInit {\n\n  constructor(private storeService: StoreService,\n              private authService: AuthService,\n              private dialog: MatDialog,\n              private notificationStorageService: NotificationStorageService) {\n  }\n\n  logoutEnabled = true;\n\n  @Input()\n  sideNav: MatSidenav;\n\n  @Input()\n  principal: PerunPrincipal;\n\n  ngOnInit(): void {\n    this.logoutEnabled = this.storeService.get('log_out_enabled');\n  }\n\n  onLogOut() {\n    this.authService.logout();\n  }\n\n  showNotificationHistory() {\n    this.notificationStorageService.newNotificationsCount = 0;\n    this.dialog.open(ShowNotificationHistoryDialogComponent, {\n      width: '520px'\n    });\n\n  }\n\n  getNewNotificationsCount(): number {\n    return this.notificationStorageService.newNotificationsCount;\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport { Attribute } from '@perun-web-apps/perun/models';\n\n@Pipe({\n  name: 'anyToString'\n})\nexport class AnyToStringPipe implements PipeTransform {\n\n  transform(attribute: Attribute, args?: any): string {\n    if (attribute.value === undefined) {\n      return '';\n    }\n    switch (attribute.type) {\n      case 'java.lang.String': {\n        return attribute.value;\n      }\n      case 'java.lang.Integer': {\n        return attribute.value.toString();\n      }\n      case 'java.util.ArrayList': {\n        return this.whenValueIsArray(attribute.value);\n      }\n      case 'java.util.LinkedHashMap': {\n        return this.whenValueIsMap(attribute.value);\n      }\n      case 'java.lang.Boolean': {\n        return attribute.value.toString();\n      }\n      default: {\n        return attribute.value;\n      }\n    }\n  }\n  whenValueIsArray(value: Array<string>): string {\n    let result = '';\n    value.forEach(function (str) {\n      result = result.concat(str + ', ');\n    });\n    return result;\n  }\n\n  whenValueIsMap(map: Map<string, string>): string {\n    let result = '';\n    map.forEach((value, key) => {\n      result = result.concat(key + ': ' + value + ', ');\n    });\n    return result;\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Pipe({\n  name: 'applicationFormItemType'\n})\nexport class ApplicationFormItemTypePipe implements PipeTransform {\n\n  private returnData = '';\n\n  constructor(private translateService: TranslateService) { }\n\n  transform(value: any, ...args: any[]): any {\n    switch (value) {\n      case 'HEADING': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.HEADER').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'FROM_FEDERATION_HIDDEN': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.FROM_FEDERATION_HIDDEN').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'HTML_COMMENT': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.HTML_COMMENT').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'TEXTFIELD': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.TEXTFIELD').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'FROM_FEDERATION_SHOW': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.FROM_FEDERATION_SHOW').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'VALIDATED_EMAIL': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.VALIDATED_EMAIL').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'USERNAME': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.USERNAME').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'PASSWORD': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.PASSWORD').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'SELECTIONBOX': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.SELECTIONBOX').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'TEXTAREA': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.TEXTAREA').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'COMBOBOX': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.COMBOBOX').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'CHECKBOX': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.CHECKBOX').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'SUBMIT_BUTTON': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.SUBMIT_BUTTON').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'RADIO': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.RADIO').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'TIMEZONE': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.TIMEZONE').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'AUTO_SUBMIT_BUTTON': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.AUTO_SUBMIT_BUTTON').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      default: {\n        return value;\n      }\n    }\n    return this.returnData;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Pipe({\n  name: 'applicationFormWidgetDescription'\n})\nexport class ApplicationFormWidgetDescriptionPipe implements PipeTransform {\n\n  private returnData = '';\n\n  constructor(private translateService: TranslateService) { }\n\n  transform(value: any, ...args: any[]): any {\n    switch (value) {\n      case 'HEADING': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.HEADER').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'FROM_FEDERATION_HIDDEN': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.FROM_FEDERATION_HIDDEN').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'HTML_COMMENT': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.HTML_COMMENT').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'TEXTFIELD': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.TEXTFIELD').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'FROM_FEDERATION_SHOW': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.FROM_FEDERATION_SHOW').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'VALIDATED_EMAIL': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.VALIDATED_EMAIL').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'USERNAME': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.USERNAME').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'PASSWORD': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.PASSWORD').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'SELECTIONBOX': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.SELECTIONBOX').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'TEXTAREA': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.TEXTAREA').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'COMBOBOX': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.COMBOBOX').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'CHECKBOX': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.CHECKBOX').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'SUBMIT_BUTTON': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.SUBMIT_BUTTON').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'RADIO': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.RADIO').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'TIMEZONE': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.TIMEZONE').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'AUTO_SUBMIT_BUTTON': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.AUTO_SUBMIT_BUTTON').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      default: {\n        return value;\n      }\n    }\n    return this.returnData;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Pipe({\n  name: 'applicationState',\n  pure: false\n})\nexport class ApplicationStatePipe implements PipeTransform {\n\n  private returnData = '';\n\n  constructor(\n    private translate: TranslateService\n  ) { }\n\n  transform(value: any, args?: any): any {\n    switch (value) {\n      case 'APPROVED': {\n        this.translate.get('VO_DETAIL.APPLICATION.STATE.APPROVED').subscribe(response => {\n          this.returnData = `<i class=\"material-icons green\">done</i>${response}`;\n        });\n        break;\n      }\n      case 'REJECTED': {\n        this.translate.get('VO_DETAIL.APPLICATION.STATE.REJECTED').subscribe(response => {\n          this.returnData = `<i class=\"material-icons red\">clear</i>${response}`;\n        });\n        break;\n      }\n      case 'NEW': {\n        this.translate.get('VO_DETAIL.APPLICATION.STATE.NEW').subscribe(response => {\n          this.returnData = `<i class=\"material-icons orange\">contact_mail</i> ${response}`;\n        });\n        break;\n      }\n      case 'VERIFIED': {\n        this.translate.get('VO_DETAIL.APPLICATION.STATE.VERIFIED').subscribe(response => {\n          this.returnData = `<i class=\"material-icons blue\">find_replace</i>${response}`;\n        });\n        break;\n      }\n      default: {\n        this.returnData = value;\n        break;\n      }\n    }\n    return this.returnData;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'attributeTypeClean'\n})\nexport class AttributeTypeCleanPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value === null) {\n      return null;\n    }\n\n    const stringValue = <string>value;\n    return stringValue.substring(stringValue.lastIndexOf('.') + 1, stringValue.length);\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Pipe({\n  name: 'displayedRole'\n})\nexport class DisplayedRolePipe implements PipeTransform {\n\n  constructor(\n    private translate: TranslateService\n  ) {}\n\n  prefix = 'ROLES.';\n\n  transform(value: any, args?: any): any {\n    const data = this.prefix.concat(value);\n    return this.translate.instant(data);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { MemberCandidate } from '@perun-web-apps/perun/models';\nimport { parseEmail, parseUserEmail } from '@perun-web-apps/perun/utils';\n\n@Pipe({\n  name: 'memberCandidateEmail'\n})\nexport class MemberCandidateEmailPipe implements PipeTransform {\n\n  transform(value: MemberCandidate): any {\n    return !!value.member && !!value.member.memberAttributes ? parseEmail(value.member) : parseUserEmail(value.richUser);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { parseEmail } from '@perun-web-apps/perun/utils';\n\n@Pipe({\n  name: 'memberEmail'\n})\nexport class MemberEmailPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return parseEmail(value);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { parseLogins } from '@perun-web-apps/perun/utils';\n\n@Pipe({\n  name: 'memberLogins'\n})\nexport class MemberLoginsPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return parseLogins(value);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'memberStatusIconColor'\n})\nexport class MemberStatusIconColorPipe implements PipeTransform {\n\n  /**\n   * Return color which should be used for icon of given member's status.\n   *\n   */\n  transform(value: any, args?: any): any {\n    switch (value) {\n      case 'VALID':\n        return 'green';\n      case 'INVALID':\n        return 'red';\n      default:\n        return '';\n    }\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'memberStatusIcon'\n})\nexport class MemberStatusIconPipe implements PipeTransform {\n\n  /**\n   * Return string representing Material icon for status of given member.\n   *\n   * @param value string status\n   * @param args not used\n   */\n  transform(value: string, args?: any): any {\n    switch (value) {\n      case 'VALID':\n        return 'verified_user';\n      case 'INVALID':\n        return 'report';\n      case 'SUSPENDED':\n        return 'lock';\n      case 'EXPIRED':\n        return 'schedule';\n      case 'DISABLED':\n        return 'delete';\n      default:\n        return value;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'nameSpaceToDef'\n})\nexport class NameSpaceToDefPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value === null) {\n      return null;\n    }\n\n    const stringValue = <string>value;\n    return stringValue.substring(stringValue.lastIndexOf(':') + 1, stringValue.length);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport { ResourceTag } from '@perun-web-apps/perun/models';\n\n@Pipe({\n  name: 'resourceTagsToString'\n})\nexport class ResourceTagsToStringPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value == null) {\n      return null;\n    }\n    const tags = <[ResourceTag]>value;\n\n    let result = '';\n\n    tags.forEach(function (tag) {\n      result = result.concat(tag.tagName);\n    });\n\n    return result;\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport { parseTechnicalOwnersNames } from '@perun-web-apps/perun/utils';\n\n@Pipe({\n  name: 'technicalOwners'\n})\nexport class TechnicalOwnersPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    return parseTechnicalOwnersNames(value);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport { parseUserEmail } from '@perun-web-apps/perun/utils';\n\n@Pipe({\n  name: 'userEmail'\n})\nexport class UserEmailPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    return parseUserEmail(value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '@perun-web-apps/perun/models';\n\n@Pipe({\n  name: 'userFullName'\n})\nexport class UserFullNamePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    const user = <User> value;\n\n    let fullName = '';\n\n    if (user.titleBefore !== null) {\n      fullName += user.titleBefore + ' ';\n    }\n    if (user.firstName !== null) {\n      fullName += user.firstName + ' ';\n    }\n    if (user.middleName !== null) {\n      fullName += user.middleName + ' ';\n    }\n    if (user.lastName !== null) {\n      fullName += user.lastName + ' ';\n    }\n    if (user.titleAfter !== null) {\n      fullName += user.titleAfter + ' ';\n    }\n    if (fullName.endsWith(' ')) {\n      fullName = fullName.substring(0, fullName.length - 1);\n    }\n\n    return fullName;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { parseVo } from '@perun-web-apps/perun/utils';\n\n@Pipe({\n  name: 'userVo'\n})\nexport class UserVoPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return parseVo(value);\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PerunNavComponent} from './perun-nav/perun-nav.component';\nimport {RouterModule} from '@angular/router';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatBadgeModule, MatChipsModule, MatMenuModule, MatStepperModule } from '@angular/material';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SideMenuComponent} from './side-menu/side-menu.component';\nimport {SideMenuItemComponent} from './side-menu/side-menu-item/side-menu-item.component';\nimport {MenuButtonsFieldComponent} from './components/menu-buttons-field/menu-buttons-field.component';\nimport {TranslateModule, TranslateService} from '@ngx-translate/core';\nimport {CreateGroupDialogComponent} from './components/dialogs/create-group-dialog/create-group-dialog.component';\nimport {InviteMemberDialogComponent} from './components/dialogs/invite-member-dialog/invite-member-dialog.component';\nimport {UserFullNamePipe} from './pipes/user-full-name.pipe';\nimport {DeleteGroupDialogComponent} from './components/dialogs/delete-group-dialog/delete-group-dialog.component';\nimport {BackButtonComponent} from './components/back-button/back-button.component';\nimport {SettingsToggleItemComponent} from './components/settings-toggle-item/settings-toggle-item.component';\nimport { ResourceTagsToStringPipe } from './pipes/resource-tags-to-string.pipe';\nimport { ApplicationStatePipe } from './pipes/application-state.pipe';\nimport { NotificatorComponent } from './components/notificator/notificator.component';\nimport { NotificationComponent } from './components/notification/notification.component';\nimport { NotificationDialogComponent } from './components/notification-dialog/notification-dialog.component';\nimport { AttributeTypeCleanPipe } from './pipes/attribute-type-clean.pipe';\nimport { NameSpaceToDefPipe } from './pipes/name-space-to-def.pipe';\nimport {UsersListComponent} from './components/users-list/users-list.component';\nimport { ApplicationReSendNotificationDialogComponent\n} from './components/dialogs/application-re-send-notification-dialog/application-re-send-notification-dialog.component';\nimport { ApplicationRejectDialogComponent } from './components/dialogs/application-reject-dialog/application-reject-dialog.component';\nimport { AnyToStringPipe } from './pipes/any-to-string.pipe';\nimport { DeleteAttributeDialogComponent } from './components/dialogs/delete-attribute-dialog/delete-attribute-dialog.component';\nimport { MemberStatusIconPipe } from './pipes/member-status-icon.pipe';\nimport { MemberStatusIconColorPipe } from './pipes/member-status-icon-color.pipe';\nimport { MemberEmailPipe } from './pipes/member-email.pipe';\nimport { MemberLoginsPipe } from './pipes/member-logins.pipe';\nimport { RemoveMembersDialogComponent } from './components/dialogs/remove-members-dialog/remove-members-dialog.component';\nimport { NgxGraphModule } from '@swimlane/ngx-graph';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { SideMenuRootItemComponent } from './side-menu/side-menu-root-item/side-menu-root-item.component';\nimport { DebuggerPageComponent } from './debugger-page/debugger-page.component';\nimport { TechnicalOwnersPipe } from './pipes/technical-owners.pipe';\nimport { RemoveResourceDialogComponent } from './components/dialogs/remove-resource-dialog/remove-resource-dialog.component';\nimport {ResourcesListComponent} from './components/resources-list/resources-list.component';\nimport {GroupsListComponent} from './components/groups-list/groups-list.component';\nimport { AddManagerDialogComponent } from './components/dialogs/add-manager-dialog/add-manager-dialog.component';\nimport { RemoveManagerDialogComponent } from './components/dialogs/remove-manager-dialog/remove-manager-dialog.component';\nimport {AddGroupManagerDialogComponent } from './components/dialogs/add-group-manager-dialog/add-group-manager-dialog.component';\nimport { RemoveGroupManagerDialogComponent } from './components/dialogs/remove-group-manager-dialog/remove-group-manager-dialog.component';\nimport { ApplicationFormItemTypePipe } from './pipes/application-form-item-type.pipe';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {\n  UpdateApplicationFormDialogComponent\n} from './components/dialogs/update-application-form-dialog/update-application-form-dialog.component';\nimport {\n  DeleteApplicationFormItemDialogComponent\n} from './components/dialogs/delete-application-form-item-dialog/delete-application-form-item-dialog.component';\nimport {\n  ApplicationFormCopyItemsDialogComponent\n} from './components/dialogs/application-form-copy-items-dialog/application-form-copy-items-dialog.component';\nimport {\n  AddApplicationFormItemDialogComponent\n} from './components/dialogs/add-application-form-item-dialog/add-application-form-item-dialog.component';\nimport {\n  EditApplicationFormItemDialogComponent\n} from './components/dialogs/edit-application-form-item-dialog/edit-application-form-item-dialog.component';\nimport { ApplicationFormWidgetDescriptionPipe } from './pipes/application-form-widget-description.pipe';\nimport {AttributesListComponent} from './components/attributes-list/attributes-list.component';\nimport {CreateAttributeDialogComponent} from './components/dialogs/create-attribute-dialog/create-attribute-dialog.component';\nimport {AttributeValueComponent} from './components/attributes-list/attribute-value/attribute-value.component';\nimport {\n  AttributeValueBooleanComponent\n} from './components/attributes-list/attribute-value/attribute-value-boolean/attribute-value-boolean.component';\nimport {\n  AttributeValueListComponent\n} from './components/attributes-list/attribute-value/attribute-value-list/attribute-value-list.component';\nimport {AttributeValueMapComponent} from './components/attributes-list/attribute-value/attribute-value-map/attribute-value-map.component';\nimport {\n  AttributeValueStringComponent\n} from './components/attributes-list/attribute-value/attribute-value-string/attribute-value-string.component';\nimport { RefreshButtonComponent } from './components/refresh-button/refresh-button.component';\nimport { AddMemberDialogComponent } from './components/dialogs/add-member-dialog/add-member-dialog.component';\nimport {MembersCandidatesListComponent} from './components/members-candidates-list/members-candidates-list.component';\nimport {MemberCandidateEmailPipe} from './pipes/member-candidate-email.pipe';\nimport {UserVoPipe} from './pipes/vo-or-ext-source.pipe';\nimport { CreateResourceTagDialogComponent } from './components/dialogs/create-resource-tag-dialog/create-resource-tag-dialog.component';\nimport { DeleteResourceTagDialogComponent } from './components/dialogs/delete-resource-tag-dialog/delete-resource-tag-dialog.component';\nimport { MoveGroupDialogComponent } from './components/dialogs/move-group-dialog/move-group-dialog.component';\nimport {GroupMenuComponent} from './components/group-menu/group-menu.component';\nimport { ManagersPageComponent } from './components/managers-page/managers-page.component';\nimport {\n  DeleteNotificationDialogComponent\n} from './components/dialogs/delete-notification-dialog/delete-notification-dialog.component';\nimport {\n  EditEmailFooterDialogComponent\n} from './components/dialogs/edit-email-footer-dialog/edit-email-footer-dialog.component';\nimport {\n  AddEditNotificationDialogComponent\n} from './components/dialogs/add-edit-notification-dialog/add-edit-notification-dialog.component';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport { TagSectionComponent } from './components/dialogs/add-edit-notification-dialog/tag-section/tag-section.component';\nimport { TagBarComponent } from './components/dialogs/add-edit-notification-dialog/tag-bar/tag-bar.component';\nimport {\n  NotificationsCopyMailsDialogComponent\n} from './components/dialogs/notifications-copy-mails-dialog/notifications-copy-mails-dialog.component';\nimport { ImmediateFilterComponent } from './components/immediate-filter/immediate-filter.component';\nimport {DisplayedRolePipe} from './pipes/displayed-role.pipe';\nimport { AnimatedRouterOutletComponent } from './components/animated-router-outlet/animated-router-outlet.component';\nimport { UserEmailPipe } from './pipes/user-email.pipe';\nimport { UserDetailComponent } from './components/user-detail-page/user-detail/user-detail.component';\nimport { ResourcesTagsListComponent } from './components/resources-tags-list/resources-tags-list.component';\nimport { DebounceFilterComponent } from './components/debounce-filter/debounce-filter.component';\nimport { UserDetailPageComponent } from './components/user-detail-page/user-detail-page.component';\nimport {UserOverviewComponent} from './components/user-detail-page/user-overview/user-overview.component';\nimport {UserGroupsComponent} from './components/user-detail-page/user-groups/user-groups.component';\nimport {UserSettingsComponent} from './components/user-detail-page/user-settings/user-settings.component';\nimport {UserOrganizationsComponent} from './components/user-detail-page/user-organizations/user-organizations.component';\nimport {UserSettingsAttributesComponent} from './components/user-detail-page/user-settings/user-settings-attributes/user-settings-attributes.component';\nimport {\n  UserSettingsOverviewComponent\n} from './components/user-detail-page/user-settings/user-settings-overview/user-settings-overview.component';\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\n// tslint:disable-next-line:max-line-length\nimport { DeleteAttributeDefinitionDialogComponent } from './components/dialogs/delete-attribute-definition-dialog/delete-attribute-definition-dialog.component';\n// tslint:disable-next-line:max-line-length\nimport { CreateAttributeDefinitionDialogComponent } from './components/dialogs/create-attribute-definition-dialog/create-attribute-definition-dialog.component';\nimport { PerunFooterComponent } from './perun-footer/perun-footer.component';\nimport { BugReportDialogComponent } from './components/bug-report-dialog/bug-report-dialog.component';\nimport { AutoFocusDirective } from './directives/auto-focus.directive';\nimport { TableOptionsComponent } from './components/table-options/table-options.component';\nimport {MatTableExporterModule} from 'mat-table-exporter';\nimport { UiAlertsModule } from '@perun-web-apps/ui/alerts';\nimport { ReportIssueDialogComponent } from './components/report-issue-dialog/report-issue-dialog.component';\nimport { RemoveVoDialogComponent } from './components/dialogs/remove-vo-dialog/remove-vo-dialog.component';\nimport { CreateVoDialogComponent } from './components/dialogs/create-vo-dialog/create-vo-dialog.component';\nimport { ShowNotificationHistoryDialogComponent } from './components/dialogs/show-notification-history-dialog/show-notification-history-dialog.component';\nimport { VoSelectTableComponent } from './components/vo-select-table/vo-select-table.component';\nimport { ChangeMemberStatusDialogComponent } from './components/dialogs/change-member-status-dialog/change-member-status-dialog.component';\nimport { RemoveGroupFromResourceDialogComponent } from './components/dialogs/remove-group-from-resource-dialog/remove-group-from-resource-dialog.component';\nimport { AssignGroupToResourceDialogComponent } from './components/dialogs/assign-group-to-resource-dialog/assign-group-to-resource-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    TranslateModule.forChild({}),\n    MatButtonModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatTooltipModule,\n    MatSlideToggleModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatDividerModule,\n    MatRippleModule,\n    MatPaginatorModule,\n    MatCardModule,\n    MatStepperModule,\n    NgxGraphModule,\n    NgxChartsModule,\n    DragDropModule,\n    NgxChartsModule,\n    DragDropModule,\n    NgxChartsModule,\n    MatCardModule,\n    MatChipsModule,\n    MatMenuModule,\n    MatTableExporterModule,\n    ScrollingModule,\n    UiAlertsModule,\n    MatBadgeModule\n  ],\n  exports: [\n    PerunNavComponent,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatFormFieldModule,\n    RouterModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatIconModule,\n    SideMenuComponent,\n    MatSidenavModule,\n    TranslateModule,\n    MenuButtonsFieldComponent,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    UserFullNamePipe,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatTooltipModule,\n    BackButtonComponent,\n    MatSlideToggleModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatDividerModule,\n    MatCardModule,\n    MatStepperModule,\n    SettingsToggleItemComponent,\n    MatRippleModule,\n    ResourceTagsToStringPipe,\n    ApplicationStatePipe,\n    MatPaginatorModule,\n    NotificatorComponent,\n    AttributeTypeCleanPipe,\n    NameSpaceToDefPipe,\n    UsersListComponent,\n    MemberStatusIconPipe,\n    MemberStatusIconColorPipe,\n    MemberEmailPipe,\n    MemberLoginsPipe,\n    NgxGraphModule,\n    NgxChartsModule,\n    TechnicalOwnersPipe,\n    ResourcesListComponent,\n    GroupsListComponent,\n    ApplicationFormItemTypePipe,\n    DragDropModule,\n    ApplicationFormWidgetDescriptionPipe,\n    GroupsListComponent,\n    RemoveManagerDialogComponent,\n    AddManagerDialogComponent,\n    AddGroupManagerDialogComponent,\n    RemoveGroupManagerDialogComponent,\n    ApplicationFormWidgetDescriptionPipe,\n    GroupsListComponent,\n    ResourcesListComponent,\n    TechnicalOwnersPipe,\n    UsersListComponent,\n    AnyToStringPipe,\n    AddMemberDialogComponent,\n    MembersCandidatesListComponent,\n    MemberCandidateEmailPipe,\n    UserVoPipe,\n    AttributesListComponent,\n    MatChipsModule,\n    RefreshButtonComponent,\n    MatChipsModule,\n    MatExpansionModule,\n    MatMenuModule,\n    GroupMenuComponent,\n    ScrollingModule,\n    ImmediateFilterComponent,\n    ManagersPageComponent,\n    GroupMenuComponent,\n    ScrollingModule,\n    DisplayedRolePipe,\n    ScrollingModule,\n    AnimatedRouterOutletComponent,\n    ResourcesTagsListComponent,\n    DebounceFilterComponent,\n    ResourcesTagsListComponent,\n    UserDetailComponent,\n    UserDetailPageComponent,\n    PerunFooterComponent,\n    TableOptionsComponent,\n    VoSelectTableComponent\n  ],\n  entryComponents: [\n    CreateGroupDialogComponent,\n    InviteMemberDialogComponent,\n    DeleteGroupDialogComponent,\n    NotificationDialogComponent,\n    ApplicationReSendNotificationDialogComponent,\n    ApplicationRejectDialogComponent,\n    RemoveMembersDialogComponent,\n    RemoveResourceDialogComponent,\n    UpdateApplicationFormDialogComponent,\n    DeleteApplicationFormItemDialogComponent,\n    ApplicationFormCopyItemsDialogComponent,\n    AddApplicationFormItemDialogComponent,\n    EditApplicationFormItemDialogComponent,\n    RemoveResourceDialogComponent,\n    RemoveManagerDialogComponent,\n    AddManagerDialogComponent,\n    AddGroupManagerDialogComponent,\n    RemoveGroupManagerDialogComponent,\n    RemoveResourceDialogComponent,\n    RemoveMembersDialogComponent,\n    ApplicationRejectDialogComponent,\n    DeleteAttributeDialogComponent,\n    AddMemberDialogComponent,\n    MembersCandidatesListComponent,\n    CreateAttributeDialogComponent,\n    CreateResourceTagDialogComponent,\n    DeleteResourceTagDialogComponent,\n    MoveGroupDialogComponent,\n    DeleteNotificationDialogComponent,\n    EditEmailFooterDialogComponent,\n    AddEditNotificationDialogComponent,\n    NotificationsCopyMailsDialogComponent,\n    BugReportDialogComponent,\n    ReportIssueDialogComponent,\n    CreateVoDialogComponent,\n    RemoveVoDialogComponent,\n    ShowNotificationHistoryDialogComponent,\n    ChangeMemberStatusDialogComponent,\n    RemoveGroupFromResourceDialogComponent,\n    AssignGroupToResourceDialogComponent\n  ],\n  declarations: [\n    AttributesListComponent,\n    PerunNavComponent,\n    SideMenuComponent,\n    SideMenuItemComponent,\n    MenuButtonsFieldComponent,\n    CreateGroupDialogComponent,\n    InviteMemberDialogComponent,\n    UserFullNamePipe,\n    BackButtonComponent,\n    DeleteGroupDialogComponent,\n    SettingsToggleItemComponent,\n    ResourceTagsToStringPipe,\n    ApplicationStatePipe,\n    NotificatorComponent,\n    NotificationComponent,\n    NotificationDialogComponent,\n    AttributeTypeCleanPipe,\n    NameSpaceToDefPipe,\n    UsersListComponent,\n    ApplicationStatePipe,\n    ApplicationReSendNotificationDialogComponent,\n    ApplicationRejectDialogComponent,\n    MemberStatusIconPipe,\n    MemberStatusIconColorPipe,\n    MemberEmailPipe,\n    MemberLoginsPipe,\n    RemoveMembersDialogComponent,\n    SideMenuRootItemComponent,\n    DebuggerPageComponent,\n    TechnicalOwnersPipe,\n    RemoveResourceDialogComponent,\n    ResourcesListComponent,\n    GroupsListComponent,\n    AddManagerDialogComponent,\n    RemoveManagerDialogComponent,\n    AddManagerDialogComponent,\n    AddGroupManagerDialogComponent,\n    RemoveGroupManagerDialogComponent,\n    GroupsListComponent,\n    ApplicationFormItemTypePipe,\n    UpdateApplicationFormDialogComponent,\n    DeleteApplicationFormItemDialogComponent,\n    ApplicationFormCopyItemsDialogComponent,\n    AddApplicationFormItemDialogComponent,\n    EditApplicationFormItemDialogComponent,\n    ApplicationFormWidgetDescriptionPipe,\n    GroupsListComponent,\n    ResourcesListComponent,\n    TechnicalOwnersPipe,\n    SideMenuRootItemComponent,\n    ApplicationRejectDialogComponent,\n    AnyToStringPipe,\n    DeleteAttributeDialogComponent,\n    AddMemberDialogComponent,\n    MembersCandidatesListComponent,\n    MemberCandidateEmailPipe,\n    UserVoPipe,\n    CreateAttributeDialogComponent,\n    AttributeValueComponent,\n    AttributeValueBooleanComponent,\n    AttributeValueListComponent,\n    AttributeValueMapComponent,\n    AttributeValueStringComponent,\n    RefreshButtonComponent,\n    CreateResourceTagDialogComponent,\n    DeleteResourceTagDialogComponent,\n    MoveGroupDialogComponent,\n    GroupMenuComponent,\n    DeleteNotificationDialogComponent,\n    EditEmailFooterDialogComponent,\n    AddEditNotificationDialogComponent,\n    TagSectionComponent,\n    TagBarComponent,\n    NotificationsCopyMailsDialogComponent,\n    ImmediateFilterComponent,\n    GroupMenuComponent,\n    ManagersPageComponent,\n    DisplayedRolePipe,\n    NotificationsCopyMailsDialogComponent,\n    AnimatedRouterOutletComponent,\n    UserEmailPipe,\n    UserDetailComponent,\n    ResourcesTagsListComponent,\n    UserDetailPageComponent,\n    UserOverviewComponent,\n    UserGroupsComponent,\n    UserSettingsComponent,\n    UserOrganizationsComponent,\n    UserSettingsAttributesComponent,\n    UserSettingsOverviewComponent,\n    ResourcesTagsListComponent,\n    DebounceFilterComponent,\n    UserProfileComponent,\n    DebounceFilterComponent,\n    ResourcesTagsListComponent,\n    UserDetailComponent,\n    DeleteAttributeDefinitionDialogComponent,\n    CreateAttributeDefinitionDialogComponent,\n    PerunFooterComponent,\n    BugReportDialogComponent,\n    AutoFocusDirective,\n    ReportIssueDialogComponent,\n    RemoveVoDialogComponent,\n    TableOptionsComponent,\n    CreateVoDialogComponent,\n    ShowNotificationHistoryDialogComponent,\n    VoSelectTableComponent,\n    ChangeMemberStatusDialogComponent,\n    RemoveGroupFromResourceDialogComponent,\n    AssignGroupToResourceDialogComponent\n  ],\n  providers: [\n    AnyToStringPipe,\n  ]\n})\nexport class SharedModule {\n  constructor(private translate: TranslateService) {\n    translate.addLangs(['en', 'cs']);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {EntityMenuLink, SideMenuItem} from './side-menu.component';\nimport {AuthResolverService} from '../../core/services/common/auth-resolver.service';\nimport { Facility, Group, Resource, RichMember, User, Vo } from '@perun-web-apps/perun/models';\nimport { parseFullName } from '@perun-web-apps/perun/utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SideMenuItemService {\n\n  constructor(\n    private translate: TranslateService,\n    private authResolver: AuthResolverService,\n  ) {\n  }\n\n  getFacilitiesManagementItem(): SideMenuItem {\n    return {\n      label: 'MAIN_MENU.FACILITIES',\n      colorClass: 'base-item-color-activated',\n      icon: 'manage_facility_white.svg',\n      baseLink: ['/facilities'],\n      links: [],\n      baseColorClass: 'base-item-color',\n      baseColorClassRegex: '^/facilities$',\n    };\n  }\n\n  getAccessManagementItem(): SideMenuItem {\n    return {\n      label: 'MAIN_MENU.ACCESS',\n      colorClass: 'base-item-color-activated',\n      icon: 'vo-white.svg',\n      links: [],\n      baseLink: ['/organizations'],\n      baseColorClass: 'base-item-color',\n      baseColorClassRegex: '^/organizations$',\n    };\n  }\n\n  getUserItem(user: User): SideMenuItem {\n    return {\n      baseLink: ['/profile'],\n      expandable: false,\n      label: 'MAIN_MENU.PROFILE',\n      colorClass: 'base-item-color-activated',\n      icon: 'user-white.svg',\n      baseColorClass: 'base-item-color',\n      baseColorClassRegex: '^/profile$',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links',\n      links: [\n        {\n          label: 'MENU_ITEMS.USER.OVERVIEW',\n          url: ['/profile'],\n          activatedRegex: '^/profile$'\n        },\n        {\n          label: 'MENU_ITEMS.USER.DETAIL',\n          url: ['/profile/detail'],\n          activatedRegex: `^/profile/detail`\n        },\n        {\n          label: 'MENU_ITEMS.USER.ORGANIZATIONS',\n          url: [`/profile/organizations`],\n          activatedRegex: `^/profile/organizations`\n        },\n        {\n          label: 'MENU_ITEMS.USER.GROUPS',\n          url: [`/profile/groups`],\n          activatedRegex: `^/profile/groups`\n        },\n        {\n          label: 'MENU_ITEMS.USER.SETTINGS',\n          url: [`/profile/settings`],\n          activatedRegex: `^/profile/settings$`,\n          children: [\n            {\n              label: 'MENU_ITEMS.MEMBER.ATTRIBUTES',\n              url: [`/profile/settings/attributes`],\n              activatedRegex: `^/profile/settings/attributes`\n            }\n          ],\n          showChildrenRegex: `^/profile/settings`\n        },\n      ],\n    };\n  }\n\n  getAdminItem(): SideMenuItem {\n    return {\n      baseLink: ['/admin'],\n      expandable: false,\n      label: 'MAIN_MENU.ADMIN',\n      colorClass: 'base-item-color-activated',\n      icon: 'perun_admin-white.svg',\n      baseColorClass: 'base-item-color',\n      baseColorClassRegex: '^/admin$',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links',\n      links: [\n        {\n          label: 'MENU_ITEMS.ADMIN.OVERVIEW',\n          url: ['/admin'],\n          activatedRegex: '^/admin$'\n        },\n        {\n          label: 'MENU_ITEMS.ADMIN.ATTRIBUTES',\n          url: ['/admin/attributes'],\n          activatedRegex: '^/admin/attributes$'\n        },\n        {\n          label: 'MENU_ITEMS.ADMIN.USERS',\n          url: ['/admin/users'],\n          activatedRegex: '^/admin/users$'\n        },\n        {\n          label: 'MENU_ITEMS.ADMIN.VISUALIZER',\n          url: ['/admin/visualizer'],\n          activatedRegex: '^/admin/visualizer$',\n          children: [\n            {\n              label: 'MENU_ITEMS.VISUALIZER.ATTR_DEPENDENCIES',\n              url: ['/admin/visualizer/attrDependencies'],\n              activatedRegex: '^/admin/visualizer/attrDependencies'\n            },\n            {\n              label: this.translate.instant('MENU_ITEMS.VISUALIZER.USER_DESTINATION'),\n              url: ['/admin/visualizer/userDestinationRelationship'],\n              activatedRegex: '^/admin/visualizer/userDestinationRelationship'\n            }\n          ],\n          showChildrenRegex: '/admin/visualizer'\n        }\n      ]\n    };\n  }\n\n  parseFacility(facility: Facility): SideMenuItem {\n    return {\n      label: facility.name,\n      baseLink: [`/facilities/${facility.id}`],\n      links: [\n        {\n          label: 'MENU_ITEMS.FACILITY.OVERVIEW',\n          url: [`/facilities/${facility.id}`],\n          activatedRegex: '/facilities/\\\\d+$'\n        },\n        {\n          label: 'MENU_ITEMS.FACILITY.RESOURCES',\n          url: [`/facilities/${facility.id}/resources`],\n          activatedRegex: '/facilities/\\\\d+/resources$'\n        },\n        {\n          label: 'MENU_ITEMS.FACILITY.ALLOWED_GROUPS',\n          url: [`/facilities/${facility.id}/allowed-groups`],\n          activatedRegex: '/facilities/\\\\d+/allowed-groups'\n        },\n        {\n          label: 'MENU_ITEMS.FACILITY.SETTINGS',\n          url: ['/facilities', facility.id, 'settings'],\n          activatedRegex: '/facilities/\\\\d+/settings$',\n          children: [\n            {\n              label: 'MENU_ITEMS.FACILITY.ATTRIBUTES',\n              url: ['/facilities', facility.id, 'settings', 'attributes'],\n              activatedRegex: '/facilities/\\\\d+/settings/attributes$'\n            }\n          ],\n          showChildrenRegex: '/facilities/\\\\d+/settings'\n        }\n      ],\n      colorClass: 'facility-item',\n      icon: 'manage_facility_white.svg',\n      // labelClass: 'facility-text',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links'\n    };\n  }\n\n  parseResource(resource: Resource): SideMenuItem {\n    return {\n      label: resource.name,\n      baseLink: ['/facilities', resource.facilityId, 'resources', resource.id],\n      links: [\n        {\n          label: 'MENU_ITEMS.RESOURCE.OVERVIEW',\n          url: ['/facilities', resource.facilityId, 'resources', resource.id],\n          activatedRegex: '/facilities/\\\\d+/resources/\\\\d+$'\n        },\n        {\n          label: 'MENU_ITEMS.RESOURCE.ASSIGNED_GROUPS',\n          url: [`/facilities/${resource.facilityId}/resources/${resource.id}/groups`],\n          activatedRegex: '/facilities/\\\\d+/resources/\\\\d+/groups$'\n        },\n        {\n          label: 'MENU_ITEMS.RESOURCE.SETTINGS',\n          url: [`/facilities/${resource.facilityId}/resources/${resource.id}/settings`],\n          activatedRegex: '/facilities/\\\\d+/resources/\\\\d+/settings$',\n          children: [\n            {\n              label: 'MENU_ITEMS.RESOURCE.ATTRIBUTES',\n              url: [`/facilities/${resource.facilityId}/resources/${resource.id}/settings/attributes`],\n              activatedRegex: '/facilities/\\\\d+/resources/\\\\d+/settings/attributes$'\n            }\n          ],\n          showChildrenRegex: '/facilities/\\\\d+/resources/\\\\d+/settings'\n        }\n      ],\n      colorClass: 'resource-item',\n      icon: 'manage_facility_white.svg',\n      // labelClass: 'resource-text',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links',\n    };\n  }\n\n  parseGroup(group: Group): SideMenuItem {\n    return {\n      label: group.name,\n      baseLink: [`/organizations/${group.voId}/groups/${group.id}`],\n      links: [\n        {\n          label: 'MENU_ITEMS.GROUP.OVERVIEW',\n          url: [`/organizations/${group.voId}/groups/${group.id}`],\n          activatedRegex: '/organizations/\\\\d+/groups/\\\\d+$'\n        },\n        {\n          label: 'MENU_ITEMS.GROUP.MEMBERS',\n          url: [`/organizations/${group.voId}/groups/${group.id}/members`],\n          activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/members$'\n        },\n        {\n          label: 'MENU_ITEMS.GROUP.SUBGROUPS',\n          url: [`/organizations/${group.voId}/groups/${group.id}/subgroups`],\n          activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/subgroups$'\n        },\n        {\n          label: 'MENU_ITEMS.GROUP.RESOURCES',\n          url: [`/organizations/${group.voId}/groups/${group.id}/resources`],\n          activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/resources$'\n        },\n        {\n          label: 'MENU_ITEMS.GROUP.APPLICATIONS',\n          url: [`/organizations/${group.voId}/groups/${group.id}/applications`],\n          activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/applications$'\n        },\n        {\n          label: 'MENU_ITEMS.GROUP.SETTINGS',\n          url: [`/organizations/${group.voId}/groups/${group.id}/settings`],\n          activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/settings$',\n          children: [\n            {\n              label: 'MENU_ITEMS.GROUP.ATTRIBUTES',\n              url: [`/organizations/${group.voId}/groups/${group.id}/settings/attributes`],\n              activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/settings/attributes$'\n            },\n            {\n              label: 'MENU_ITEMS.GROUP.EXPIRATION',\n              url: [`/organizations/${group.voId}/groups/${group.id}/settings/expiration`],\n              activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/settings/expiration$'\n            },\n            {\n              label: 'MENU_ITEMS.GROUP.MANAGERS',\n              url: [`/organizations/${group.voId}/groups/${group.id}/settings/managers`],\n              activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/settings/managers$'\n            },\n            {\n              label: 'MENU_ITEMS.GROUP.APPLICATION_FORM',\n              url: [`/organizations/${group.voId}/groups/${group.id}/settings/applicationForm`],\n              activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/settings/applicationForm$'\n            },\n            {\n              label: 'MENU_ITEMS.GROUP.NOTIFICATIONS',\n              url: [`/organizations/${group.voId}/groups/${group.id}/settings/notifications`],\n              activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/settings/notifications$'\n            },\n          ],\n          showChildrenRegex: '/organizations/\\\\d+/groups/\\\\d+/settings'\n        }\n      ],\n      colorClass: 'group-item',\n      icon: 'group-white.svg',\n      // labelClass: 'group-text',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links'\n    };\n  }\n\n  parseVo(vo: Vo): SideMenuItem {\n    return {\n      label: vo.name,\n      baseLink: [`/organizations/${vo.id}`],\n      links: this.getVoLinks(vo),\n      colorClass: 'vo-item',\n      icon: 'vo-white.svg',\n      // labelClass: 'vo-text',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links'\n    };\n  }\n\n  parseMember(member: RichMember): SideMenuItem {\n    return {\n      label: parseFullName(member.user),\n      baseLink: [`/organizations/${member.voId}/members/${member.id}`],\n      links: [\n        {\n          label: 'MENU_ITEMS.MEMBER.OVERVIEW',\n          url: [`/organizations/${member.voId}/members/${member.id}`],\n          activatedRegex: '/organizations/\\\\d+/members/\\\\d+$'\n        },\n        {\n          label: 'MENU_ITEMS.MEMBER.GROUPS',\n          url: [`//organizations/${member.voId}/members/${member.id}/groups`],\n          activatedRegex: '/organizations/\\\\d+/members/\\\\d+/groups'\n        },\n        {\n          label: 'MENU_ITEMS.MEMBER.SETTINGS',\n          url: [`/organizations/${member.voId}/members/${member.id}/settings`],\n          activatedRegex: '/organizations/\\\\d+/members/\\\\d+/settings$',\n          children: [\n            {\n              label: 'MENU_ITEMS.MEMBER.ATTRIBUTES',\n              url: [`/organizations/${member.voId}/members/${member.id}/settings/attributes`],\n              activatedRegex: '/organizations/\\\\d+/members/\\\\d+/settings/attributes$'\n            }\n          ],\n          showChildrenRegex: '/organizations/\\\\d+/members/\\\\d+/settings'\n        }\n      ],\n      colorClass: 'member-item',\n      icon: 'user-white.svg',\n      // labelClass: 'member-text',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links'\n    };\n  }\n\n  parseUser(user: User, path: string, regex: string): SideMenuItem {\n    return {\n      label: parseFullName(user),\n      baseLink: [path],\n      links: [\n        {\n          label: 'MENU_ITEMS.USER.OVERVIEW',\n          url: [path],\n          activatedRegex: `${regex}$`\n        },\n        {\n          label: 'MENU_ITEMS.USER.DETAIL',\n          url: [`${path}/detail`],\n          activatedRegex: `${regex}/detail`\n        },\n        {\n          label: 'MENU_ITEMS.USER.ORGANIZATIONS',\n          url: [`${path}/organizations`],\n          activatedRegex: `${regex}/organizations`\n        },\n        {\n          label: 'MENU_ITEMS.USER.GROUPS',\n          url: [`${path}/groups`],\n          activatedRegex: `${regex}/groups`\n        },\n        {\n          label: 'MENU_ITEMS.USER.SETTINGS',\n          url: [`${path}/settings`],\n          activatedRegex: `${regex}/settings$`,\n          children: [\n            {\n              label: 'MENU_ITEMS.MEMBER.ATTRIBUTES',\n              url: [`${path}/settings/attributes`],\n              activatedRegex: `${regex}/settings/attributes`\n            }\n          ],\n          showChildrenRegex: `${regex}/settings`\n        },\n      ],\n      colorClass: 'user-bg-color',\n      icon: 'user-white.svg',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links'\n    };\n  }\n\n  getVoLinks(vo: Vo): EntityMenuLink[] {\n    const links: EntityMenuLink[] = [];\n\n    // Overview\n    links.push({\n      label: 'MENU_ITEMS.VO.OVERVIEW',\n      url: [`/organizations/${vo.id}`],\n      activatedRegex: '/organizations/\\\\d+$'\n    });\n\n    // Members\n    if (this.authResolver.isThisVoAdminOrObserver(vo.id)) {\n      links.push({\n        label: 'MENU_ITEMS.VO.MEMBERS',\n        url: [`/organizations/${vo.id}/members`],\n        activatedRegex: '/organizations/\\\\d+/members$'\n      });\n    }\n\n    // Groups\n    if (this.authResolver.isThisVoAdminOrObserver(vo.id)\n      || this.authResolver.isGroupAdminInThisVo(vo.id)) {\n      links.push({\n        label: 'MENU_ITEMS.VO.GROUPS',\n        url: [`/organizations/${vo.id}/groups`],\n        activatedRegex: '/organizations/\\\\d+/groups$'\n      });\n    }\n\n    // Resource management\n    if (this.authResolver.isThisVoAdminOrObserver(vo.id)) {\n      links.push({\n        label: 'MENU_ITEMS.VO.RESOURCES',\n        url: [`/organizations/${vo.id}/resources`],\n        activatedRegex: '/organizations/\\\\d+/resources$',\n        children: [\n          {\n            label: 'MENU_ITEMS.VO.RESOURCE_PREVIEW',\n            url: [`/organizations/${vo.id}/resources/preview`],\n            activatedRegex: '/organizations/\\\\d+/resources/preview$'\n          },\n          {\n            label: 'MENU_ITEMS.VO.RESOURCE_TAGS',\n            url: [`/organizations/${vo.id}/resources/tags`],\n            activatedRegex: '/organizations/\\\\d+/resources/tags$'\n          },\n          {\n            label: 'MENU_ITEMS.VO.RESOURCE_STATES',\n            url: [`/organizations/${vo.id}/resources/states`],\n            activatedRegex: '/organizations/\\\\d+/resources/states$'\n          }\n        ],\n        showChildrenRegex: '/organizations/\\\\d+/resources'\n      });\n    }\n\n    // Applications\n    if (this.authResolver.isThisVoAdminOrObserver(vo.id)) {\n      links.push({\n        label: 'MENU_ITEMS.VO.APPLICATIONS',\n        url: [`/organizations/${vo.id}/applications`],\n        activatedRegex: '/organizations/\\\\d+/applications'\n      });\n    }\n\n    // Settings\n    if (this.authResolver.isThisVoAdminOrObserver(vo.id)) {\n      links.push({\n        label: 'MENU_ITEMS.VO.SETTINGS',\n        url: [`/organizations/${vo.id}/settings`],\n        activatedRegex: '/organizations/\\\\d+/settings$',\n        children: [\n          {\n            label: 'MENU_ITEMS.VO.ATTRIBUTES',\n            url: [`/organizations/${vo.id}/settings/attributes`],\n            activatedRegex: '/organizations/\\\\d+/settings/attributes$'\n          },\n          {\n            label: 'MENU_ITEMS.VO.EXPIRATION',\n            url: [`/organizations/${vo.id}/settings/expiration`],\n            activatedRegex: '/organizations/\\\\d+/settings/expiration$'\n          },\n          {\n            label: 'MENU_ITEMS.VO.MANAGERS',\n            url: [`/organizations/${vo.id}/settings/managers`],\n            activatedRegex: '/organizations/\\\\d+/settings/managers$'\n          },\n          {\n            label: 'MENU_ITEMS.VO.APPLICATION_FORM',\n            url: [`/organizations/${vo.id}/settings/applicationForm`],\n            activatedRegex: '/organizations/\\\\d+/settings/applicationForm$'\n          },\n          {\n            label: 'MENU_ITEMS.VO.NOTIFICATIONS',\n            url: [`/organizations/${vo.id}/settings/notifications`],\n            activatedRegex: '/organizations/\\\\d+/settings/notifications$'\n          },\n          {\n            label: 'MENU_ITEMS.VO.EXTSOURCES',\n            url: [`/organizations/${vo.id}/settings/extsources`],\n            activatedRegex: '/organizations/\\\\d+/settings/extsources$'\n          }\n        ],\n        showChildrenRegex: '/organizations/\\\\d+/settings'\n      });\n    }\n\n    return links;\n  }\n}\n","export default \".entity-menu-item {\\n  width: 300px;\\n}\\n\\n.side-entity-menu {\\n  background-color: #39444a;\\n}\\n\\n.side-entity-menu a {\\n  padding: 8px 8px 8px 40px;\\n  text-decoration: none;\\n  color: #ffffff;\\n  font-size: 1rem;\\n  display: block;\\n  transition: 0.2s;\\n}\\n\\n.activated {\\n  color: #313131 !important;\\n  border-right: 5px solid #313131;\\n}\\n\\n.entity-menu-item-header {\\n  padding: 5px 5px 5px 25px;\\n  cursor: pointer;\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-user-drag: none;\\n  -webkit-tap-highlight-color: transparent;\\n}\\n\\n.entity-menu-item-label {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  color: #ffffff;\\n}\\n\\n.entity-menu-item-label:hover {\\n  text-decoration: none;\\n}\\n\\n.entity-menu-item-link {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  color: #ffffff;\\n}\\n\\n.entity-menu-item-link:hover {\\n  text-decoration: none;\\n}\\n\\n.entity-menu-item-icon {\\n  height: 2rem;\\n}\\n\\n.entity-menu-item-sub-menu {\\n  overflow: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL3NpZGUtbWVudS9zaWRlLW1lbnUtaXRlbS9zaWRlLW1lbnUtaXRlbS5jb21wb25lbnQuc2NzcyIsImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL3NpZGUtbWVudS9zaWRlLW1lbnUtaXRlbS9zaWRlLW1lbnUtaXRlbS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUNDRjs7QURFQTtFQUNFLHlCQUFBO0FDQ0Y7O0FERUE7RUFDRSx5QkFBQTtFQUNBLHFCQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxjQUFBO0VBQ0EsZ0JBQUE7QUNDRjs7QURFQTtFQUNFLHlCQUFBO0VBQ0EsK0JBQUE7QUNDRjs7QURFQTtFQUNFLHlCQUFBO0VBQ0EsZUFBQTtFQUNBLHNCQUFBO0VBRUEseUJBQUE7RUFDQSxxQkFBQTtFQUNBLGlCQUFBO0VBRUEsdUJBQUE7RUFDQSx3Q0FBQTtBQ0FGOztBREdBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0FDQUY7O0FEQ0U7RUFDRSxxQkFBQTtBQ0NKOztBREdBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSw4QkFBQTtFQUNBLGNBQUE7QUNBRjs7QURFRTtFQUNFLHFCQUFBO0FDQUo7O0FESUE7RUFDRSxZQUFBO0FDREY7O0FESUE7RUFDRSxnQkFBQTtBQ0RGIiwiZmlsZSI6ImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL3NpZGUtbWVudS9zaWRlLW1lbnUtaXRlbS9zaWRlLW1lbnUtaXRlbS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lbnRpdHktbWVudS1pdGVtIHtcbiAgd2lkdGg6IDMwMHB4O1xufVxuXG4uc2lkZS1lbnRpdHktbWVudSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzOTQ0NGE7XG59XG5cbi5zaWRlLWVudGl0eS1tZW51IGEge1xuICBwYWRkaW5nOiA4cHggOHB4IDhweCA0MHB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBmb250LXNpemU6IDFyZW07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0cmFuc2l0aW9uOiAwLjJzO1xufVxuXG4uYWN0aXZhdGVkIHtcbiAgY29sb3I6ICMzMTMxMzEgIWltcG9ydGFudDtcbiAgYm9yZGVyLXJpZ2h0OiA1cHggc29saWQgIzMxMzEzMTtcbn1cblxuLmVudGl0eS1tZW51LWl0ZW0taGVhZGVyIHtcbiAgcGFkZGluZzogNXB4IDVweCA1cHggMjVweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xuICAta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG5cbiAgLXdlYmtpdC11c2VyLWRyYWc6IG5vbmU7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5lbnRpdHktbWVudS1pdGVtLWxhYmVsIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICNmZmZmZmY7XG4gICY6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxufVxuXG4uZW50aXR5LW1lbnUtaXRlbS1saW5rIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBjb2xvcjogI2ZmZmZmZjtcblxuICAmOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbn1cblxuLmVudGl0eS1tZW51LWl0ZW0taWNvbiB7XG4gIGhlaWdodDogMnJlbTtcbn1cblxuLmVudGl0eS1tZW51LWl0ZW0tc3ViLW1lbnUge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuIiwiLmVudGl0eS1tZW51LWl0ZW0ge1xuICB3aWR0aDogMzAwcHg7XG59XG5cbi5zaWRlLWVudGl0eS1tZW51IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM5NDQ0YTtcbn1cblxuLnNpZGUtZW50aXR5LW1lbnUgYSB7XG4gIHBhZGRpbmc6IDhweCA4cHggOHB4IDQwcHg7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRyYW5zaXRpb246IDAuMnM7XG59XG5cbi5hY3RpdmF0ZWQge1xuICBjb2xvcjogIzMxMzEzMSAhaW1wb3J0YW50O1xuICBib3JkZXItcmlnaHQ6IDVweCBzb2xpZCAjMzEzMTMxO1xufVxuXG4uZW50aXR5LW1lbnUtaXRlbS1oZWFkZXIge1xuICBwYWRkaW5nOiA1cHggNXB4IDVweCAyNXB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgLXdlYmtpdC11c2VyLWRyYWc6IG5vbmU7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5lbnRpdHktbWVudS1pdGVtLWxhYmVsIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG4uZW50aXR5LW1lbnUtaXRlbS1sYWJlbDpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmVudGl0eS1tZW51LWl0ZW0tbGluayB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG4uZW50aXR5LW1lbnUtaXRlbS1saW5rOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uZW50aXR5LW1lbnUtaXRlbS1pY29uIHtcbiAgaGVpZ2h0OiAycmVtO1xufVxuXG4uZW50aXR5LW1lbnUtaXRlbS1zdWItbWVudSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59Il19 */\"","import {Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {SideMenuItem} from '../side-menu.component';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {openClose, rollInOut} from '../../animations/Animations';\nimport {MatSidenav} from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-side-menu-item',\n  templateUrl: './side-menu-item.component.html',\n  styleUrls: ['./side-menu-item.component.scss'],\n  animations: [\n    openClose,\n    rollInOut\n  ]\n})\nexport class SideMenuItemComponent implements OnInit, OnChanges {\n\n  private currentUrl: string;\n\n  constructor(\n    private router: Router\n  ) {\n    this.currentUrl = router.url;\n\n    router.events.subscribe((_: NavigationEnd) => {\n      if (_ instanceof NavigationEnd) {\n        this.currentUrl = _.url;\n      }\n    });\n  }\n\n  @Input()\n  item: SideMenuItem;\n\n  @Input()\n  index: number;\n\n  @Input()\n  showOpen: boolean;\n\n  @ViewChild('collapse', { static: false }) collapseDiv: ElementRef;\n\n  expanded = true;\n\n  @Input()\n  sideNav: MatSidenav;\n\n  ngOnInit() {\n    // this.expanded = this.showOpen;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // this.expanded = this.showOpen;\n  }\n\n  toggle() {\n    if (this.item.baseLink !== undefined) {\n      this.navigate(this.item.baseLink);\n      // this.router.navigate(this.item.baseLink);\n      // this.closeOnSmallDevice();\n    } else {\n      // this.expanded = !this.expanded;\n    }\n  }\n\n  isActive(currentUrl: string, regexValue: string) {\n    const regexp = new RegExp(regexValue);\n\n    return regexp.test(currentUrl);\n  }\n\n  navigate(url) {\n    if (this.sideNav.mode === 'over') {\n      this.sideNav.close().then(() => this.router.navigate(url));\n    } else {\n      this.router.navigate(url);\n    }\n  }\n}\n","export default \".entity-menu-item {\\n  width: 300px;\\n}\\n\\n.side-entity-menu {\\n  background-color: #39444a;\\n}\\n\\n.side-entity-menu a {\\n  padding: 8px 8px 8px 32px;\\n  text-decoration: none;\\n  font-size: 1rem;\\n  color: #ffffff;\\n  display: block;\\n  transition: 0.2s;\\n}\\n\\n.activated {\\n  color: #313131 !important;\\n  border-right: 5px solid #313131;\\n}\\n\\n.side-entity-menu a:hover {\\n  background-color: rgba(255, 255, 255, 0.1);\\n}\\n\\n.entity-menu-item-header {\\n  transition: 0.5s;\\n  padding: 0.5rem 0.5rem 0.5rem 1rem;\\n  cursor: pointer;\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-user-drag: none;\\n  -webkit-tap-highlight-color: transparent;\\n}\\n\\n.entity-menu-item-label {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  color: #ffffff;\\n}\\n\\n.entity-menu-item-label:hover {\\n  text-decoration: none;\\n}\\n\\n.entity-menu-item-link {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  color: #ffffff;\\n}\\n\\n.entity-menu-item-link:hover {\\n  text-decoration: none;\\n}\\n\\n.entity-menu-item-icon {\\n  height: 2rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL3NpZGUtbWVudS9zaWRlLW1lbnUtcm9vdC1pdGVtL3NpZGUtbWVudS1yb290LWl0ZW0uY29tcG9uZW50LnNjc3MiLCJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9zaWRlLW1lbnUvc2lkZS1tZW51LXJvb3QtaXRlbS9zaWRlLW1lbnUtcm9vdC1pdGVtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQ0NGOztBREVBO0VBQ0UseUJBQUE7QUNDRjs7QURDQTtFQUNFLHlCQUFBO0VBQ0EscUJBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtBQ0VGOztBRENBO0VBQ0UseUJBQUE7RUFDQSwrQkFBQTtBQ0VGOztBRENBO0VBQ0UsMENBQUE7QUNFRjs7QURDQTtFQUNFLGdCQUFBO0VBQ0Esa0NBQUE7RUFDQSxlQUFBO0VBQ0Esc0JBQUE7RUFFQSx5QkFBQTtFQUNBLHFCQUFBO0VBQ0EsaUJBQUE7RUFFQSx1QkFBQTtFQUNBLHdDQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUNDRjs7QURBRTtFQUNFLHFCQUFBO0FDRUo7O0FERUE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtFQUNBLDhCQUFBO0VBQ0EsY0FBQTtBQ0NGOztBRENFO0VBQ0UscUJBQUE7QUNDSjs7QURHQTtFQUNFLFlBQUE7QUNBRiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9zaWRlLW1lbnUvc2lkZS1tZW51LXJvb3QtaXRlbS9zaWRlLW1lbnUtcm9vdC1pdGVtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVudGl0eS1tZW51LWl0ZW0ge1xuICB3aWR0aDogMzAwcHg7XG59XG5cbi5zaWRlLWVudGl0eS1tZW51IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM5NDQ0YTtcbn1cbi5zaWRlLWVudGl0eS1tZW51IGEge1xuICBwYWRkaW5nOiA4cHggOHB4IDhweCAzMnB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0cmFuc2l0aW9uOiAwLjJzO1xufVxuXG4uYWN0aXZhdGVkIHtcbiAgY29sb3I6ICMzMTMxMzEgIWltcG9ydGFudDtcbiAgYm9yZGVyLXJpZ2h0OiA1cHggc29saWQgIzMxMzEzMTtcbn1cblxuLnNpZGUtZW50aXR5LW1lbnUgYTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcbn1cblxuLmVudGl0eS1tZW51LWl0ZW0taGVhZGVyIHtcbiAgdHJhbnNpdGlvbjogLjVzO1xuICBwYWRkaW5nOiAwLjVyZW0gMC41cmVtIDAuNXJlbSAxcmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcblxuICAtd2Via2l0LXVzZXItZHJhZzogbm9uZTtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLmVudGl0eS1tZW51LWl0ZW0tbGFiZWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgJjpob3ZlciB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG59XG5cbi5lbnRpdHktbWVudS1pdGVtLWxpbmsge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGNvbG9yOiAjZmZmZmZmO1xuXG4gICY6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxufVxuXG4uZW50aXR5LW1lbnUtaXRlbS1pY29uIHtcbiAgaGVpZ2h0OiAycmVtXG59XG4iLCIuZW50aXR5LW1lbnUtaXRlbSB7XG4gIHdpZHRoOiAzMDBweDtcbn1cblxuLnNpZGUtZW50aXR5LW1lbnUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzk0NDRhO1xufVxuXG4uc2lkZS1lbnRpdHktbWVudSBhIHtcbiAgcGFkZGluZzogOHB4IDhweCA4cHggMzJweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBmb250LXNpemU6IDFyZW07XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBkaXNwbGF5OiBibG9jaztcbiAgdHJhbnNpdGlvbjogMC4ycztcbn1cblxuLmFjdGl2YXRlZCB7XG4gIGNvbG9yOiAjMzEzMTMxICFpbXBvcnRhbnQ7XG4gIGJvcmRlci1yaWdodDogNXB4IHNvbGlkICMzMTMxMzE7XG59XG5cbi5zaWRlLWVudGl0eS1tZW51IGE6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XG59XG5cbi5lbnRpdHktbWVudS1pdGVtLWhlYWRlciB7XG4gIHRyYW5zaXRpb246IDAuNXM7XG4gIHBhZGRpbmc6IDAuNXJlbSAwLjVyZW0gMC41cmVtIDFyZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgLWtodG1sLXVzZXItc2VsZWN0OiBub25lO1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICAtd2Via2l0LXVzZXItZHJhZzogbm9uZTtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLmVudGl0eS1tZW51LWl0ZW0tbGFiZWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cbi5lbnRpdHktbWVudS1pdGVtLWxhYmVsOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uZW50aXR5LW1lbnUtaXRlbS1saW5rIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cbi5lbnRpdHktbWVudS1pdGVtLWxpbms6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5lbnRpdHktbWVudS1pdGVtLWljb24ge1xuICBoZWlnaHQ6IDJyZW07XG59Il19 */\"","import {Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {SideMenuItem} from '../side-menu.component';\nimport { openClose, rollInOut } from '../../animations/Animations';\nimport {MatSidenav} from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-side-menu-root-item',\n  templateUrl: './side-menu-root-item.component.html',\n  styleUrls: ['./side-menu-root-item.component.scss'],\n  animations: [\n    openClose,\n    rollInOut\n  ]\n})\nexport class SideMenuRootItemComponent implements OnInit, OnChanges {\n\n  private currentUrl: string;\n\n  constructor(\n    private router: Router\n  ) {\n    this.currentUrl = router.url;\n\n    router.events.subscribe((_: NavigationEnd) => {\n      if (_ instanceof NavigationEnd) {\n        this.currentUrl = _.url;\n      }\n    });\n  }\n\n  @Input()\n  item: SideMenuItem;\n\n  @Input()\n  index: number;\n\n  @Input()\n  showOpen: boolean;\n\n  @ViewChild('collapse', { static: false }) collapseDiv: ElementRef;\n\n  expanded = false;\n\n  @Input()\n  sideNav: MatSidenav;\n  ngOnInit() {\n    this.expanded = this.showOpen;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.expanded = this.showOpen;\n  }\n\n  toggle() {\n    if (this.item.baseLink !== undefined) {\n      this.navigate(this.item.baseLink);\n    } else {\n      this.expanded = !this.expanded;\n    }\n  }\n\n  isActive(currentUrl: string, regexValue: string) {\n    const regexp = new RegExp(regexValue);\n\n    return regexp.test(currentUrl);\n  }\n\n  getBgClass() {\n    if (this.item.baseColorClass) {\n      return this.isActive(this.currentUrl, this.item.baseColorClassRegex) ? this.item.colorClass : this.item.baseColorClass;\n    } else {\n      return this.item.colorClass;\n    }\n  }\n\n  navigate(url) {\n    if (this.sideNav.mode === 'over') {\n      this.sideNav.close().then(() => this.router.navigate(url));\n    } else {\n      this.router.navigate(url);\n    }\n  }\n}\n","export default \".entity-menu-item-label {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n}\\n\\n.entity-menu-item-link {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  color: #ffffff;\\n}\\n\\n.entity-menu-item-link:hover {\\n  text-decoration: none;\\n}\\n\\n.entity-menu-item-icon {\\n  height: 2rem;\\n}\\n\\n.entity-menu-accordion {\\n  background-color: #f4f4f4;\\n}\\n\\n#sideMenuAccordion {\\n  width: 300px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvc2hhcmVkL3NpZGUtbWVudS9zaWRlLW1lbnUuY29tcG9uZW50LnNjc3MiLCJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9zaWRlLW1lbnUvc2lkZS1tZW51LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7QUNDRjs7QURFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0VBQ0EsOEJBQUE7RUFDQSxjQUFBO0FDQ0Y7O0FEQ0U7RUFDRSxxQkFBQTtBQ0NKOztBREdBO0VBQ0UsWUFBQTtBQ0FGOztBREdBO0VBQ0UseUJBQUE7QUNBRjs7QURHQTtFQUNFLFlBQUE7QUNBRiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3NoYXJlZC9zaWRlLW1lbnUvc2lkZS1tZW51LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVudGl0eS1tZW51LWl0ZW0tbGFiZWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZW50aXR5LW1lbnUtaXRlbS1saW5rIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBjb2xvcjogI2ZmZmZmZjtcblxuICAmOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbn1cblxuLmVudGl0eS1tZW51LWl0ZW0taWNvbiB7XG4gIGhlaWdodDogMnJlbVxufVxuXG4uZW50aXR5LW1lbnUtYWNjb3JkaW9ue1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xufVxuXG4jc2lkZU1lbnVBY2NvcmRpb24ge1xuICB3aWR0aDogMzAwcHg7XG59XG4iLCIuZW50aXR5LW1lbnUtaXRlbS1sYWJlbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5lbnRpdHktbWVudS1pdGVtLWxpbmsge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuLmVudGl0eS1tZW51LWl0ZW0tbGluazpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmVudGl0eS1tZW51LWl0ZW0taWNvbiB7XG4gIGhlaWdodDogMnJlbTtcbn1cblxuLmVudGl0eS1tZW51LWFjY29yZGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7XG59XG5cbiNzaWRlTWVudUFjY29yZGlvbiB7XG4gIHdpZHRoOiAzMDBweDtcbn0iXX0= */\"","import {Component, HostListener, Input, OnInit} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {SideMenuService} from '../../core/services/common/side-menu.service';\nimport {AppComponent} from '../../app.component';\nimport {SideMenuItemService} from './side-menu-item.service';\nimport {AuthResolverService} from '../../core/services/common/auth-resolver.service';\nimport {rollInOut} from '../animations/Animations';\nimport { StoreService } from '../../core/services/common/store.service';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.scss'],\n  animations: [\n    rollInOut\n  ]\n})\nexport class SideMenuComponent implements OnInit {\n\n  constructor(\n    private sideMenuService: SideMenuService,\n    private sideMenuItemService: SideMenuItemService,\n    public authResolver: AuthResolverService,\n    private store: StoreService\n  ) { }\n\n  accessItems: SideMenuItem[] = [];\n  facilityItems: SideMenuItem[] = [];\n  adminItems: SideMenuItem[] = [];\n  userItems: SideMenuItem[] = [];\n\n  accessItem = this.sideMenuItemService.getAccessManagementItem();\n  adminItem = this.sideMenuItemService.getAdminItem();\n  facilityItem = this.sideMenuItemService.getFacilitiesManagementItem();\n  userItem = this.sideMenuItemService.getUserItem(this.store.getPerunPrincipal().user);\n\n  @Input()\n  sideNav: MatSidenav;\n\n  mobileView = true;\n  adminItemOpened = false;\n  userItemOpened = false;\n\n  ngOnInit(): void {\n    this.mobileView = window.innerWidth <= AppComponent.minWidth;\n    if (this.mobileView) {\n      this.sideNav.close();\n    } else {\n      this.sideNav.open();\n    }\n\n    this.sideMenuService.facilityItemsChange.subscribe(items => {\n      this.setFacilityItems(items);\n    });\n    this.sideMenuService.accessItemsChange.subscribe(items => {\n      this.setAccessItems(items);\n    });\n    this.sideMenuService.adminItemsChange.subscribe(items => {\n      this.setAdminItems(items);\n    });\n    this.sideMenuService.userItemsChange.subscribe(items => {\n      this.setUserItems(items);\n    });\n    this.sideMenuService.resetChange.subscribe(() => {\n      this.reset();\n    });\n  }\n\n  private reset(): void {\n      this.adminItemOpened = false;\n      this.userItemOpened = false;\n      this.setNewItems(this.userItems, []);\n      this.setNewItems(this.adminItems, []);\n      this.setNewItems(this.accessItems, []);\n      this.setNewItems(this.facilityItems, []);\n  }\n\n  private resetExceptFacility(): void {\n      this.adminItemOpened = false;\n      this.userItemOpened = false;\n      this.setNewItems(this.userItems, []);\n      this.setNewItems(this.adminItems, []);\n      this.setNewItems(this.accessItems, []);\n  }\n\n  private resetExceptAccess(): void {\n      this.adminItemOpened = false;\n      this.userItemOpened = false;\n      this.setNewItems(this.userItems, []);\n      this.setNewItems(this.adminItems, []);\n      this.setNewItems(this.facilityItems, []);\n  }\n\n  private resetExceptAdmin(): void {\n      this.userItemOpened = false;\n      this.setNewItems(this.userItems, []);\n      this.setNewItems(this.accessItems, []);\n      this.setNewItems(this.facilityItems, []);\n  }\n\n  private resetExceptUser(): void {\n    this.adminItemOpened = false;\n    this.setNewItems(this.accessItems, []);\n    this.setNewItems(this.facilityItems, []);\n    this.setNewItems(this.adminItems, []);\n  }\n\n  private setFacilityItems(items: SideMenuItem[]) {\n      this.resetExceptFacility();\n      this.setNewItems(this.facilityItems, items);\n  }\n\n  private setAccessItems(items: SideMenuItem[]) {\n    this.resetExceptAccess();\n    this.setNewItems(this.accessItems, items);\n  }\n\n  private setUserItems(items: SideMenuItem[]) {\n    this.userItemOpened = true;\n    this.resetExceptUser();\n    this.setNewItems(this.userItems, items);\n  }\n\n  private setAdminItems(items: SideMenuItem[]) {\n    this.adminItemOpened = true;\n    this.resetExceptAdmin();\n    this.setNewItems(this.adminItems, items);\n  }\n\n  /**\n   * This method is used to set new sideMenuItems to an existing array of items.\n   *\n   * The method replaces only items that were not int the origin array.\n   * If the new array has smaller size, excessive items are removed from the origin array.\n   * This method is used because of animations. Without this, they do not work properly.\n   *\n   * @param originItems origin array\n   * @param newItems new items\n   */\n  private setNewItems(originItems: SideMenuItem[], newItems: SideMenuItem[]) {\n    const maxLength = originItems.length > newItems.length ? originItems.length : newItems.length;\n\n    for (let i = 0; i < maxLength; i ++) {\n      if (i > originItems.length - 1) {\n        originItems.push(newItems[i]);\n      } else if (i > newItems.length - 1) {\n        const originItemsLength = originItems.length;\n        for (let j = 0; j < originItemsLength - i; j++) {\n          originItems.pop();\n        }\n        break;\n      } else if (!this.areSameItems(originItems[i], newItems[i])) {\n        originItems[i] = newItems[i];\n      }\n      // items are same, dont switch\n    }\n  }\n\n  private areSameItems(item1: SideMenuItem, item2: SideMenuItem) {\n    return item1.label === item2.label && item1.labelClass === item2.labelClass;\n  }\n}\n\nexport interface SideMenuItem {\n  label: string;\n  labelClass?: string;\n  colorClass: string;\n  activatedClass?: string;\n  links: EntityMenuLink[];\n  icon: string;\n  baseLink?: any[];\n  expandable?: boolean;\n  baseColorClass?: string;\n  baseColorClassRegex?: string;\n  linksClass?: string;\n}\n\nexport interface EntityMenuLink {\n  label: string;\n  url:  any[] | string;\n  activatedRegex: string;\n  children?: EntityMenuLink[];\n  showChildrenRegex?: string;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3Zvcy9wYWdlcy9ncm91cC1kZXRhaWwtcGFnZS9ncm91cC1hcHBsaWNhdGlvbnMvZ3JvdXAtYXBwbGljYXRpb25zLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { GroupService, RegistrarService } from '@perun-web-apps/perun/services';\nimport { Application, Group } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-group-applications',\n  templateUrl: './group-applications.component.html',\n  styleUrls: ['./group-applications.component.scss']\n})\nexport class GroupApplicationsComponent implements OnInit {\n\n  static id = 'GroupApplicationsComponent';\n\n  // used for router animation\n  @HostBinding('class.router-component') true;\n\n  constructor(private groupService: GroupService,\n              private registarService: RegistrarService,\n              protected route: ActivatedRoute) { }\n\n  state = 'pending';\n  loading = false;\n  applications: Application[] = [];\n  group: Group;\n  displayedColumns: string[] = ['id', 'createdAt', 'type', 'state', 'user', 'extSourceLoa', 'modifiedBy'];\n  filterValue = '';\n\n  ngOnInit() {\n    this.loading = true;\n    this.route.parent.params.subscribe(parentParams => {\n      const groupId = parentParams['groupId'];\n      this.groupService.getGroupById(groupId).subscribe( group => {\n        this.group = group;\n        this.setData(['NEW', 'VERIFIED']);\n      });\n    });\n  }\n\n\n  setData(state: string[]) {\n    this.registarService.getApplicationsForGroupWithState(this.group.id, state).subscribe(applications => {\n      this.applications = applications;\n      this.loading = false;\n    });\n  }\n\n  select() {\n    this.loading = true;\n    switch (this.state) {\n      case 'approved': {\n        this.setData(['APPROVED']);\n        break;\n      }\n      case 'rejected': {\n        this.setData(['REJECTED']);\n        break;\n      }\n      case 'wfmv': {\n        this.setData(['NEW']);\n        break;\n      }\n      case 'submited': {\n        this.setData(['VERIFIED']);\n        break;\n      }\n      case 'pending': {\n        this.setData(['NEW', 'VERIFIED']);\n        break;\n      }\n      case 'all': {\n        this.registarService.getApplicationsForGroup(this.group.id).subscribe(applications => {\n          this.applications = applications;\n          this.loading = false;\n        });\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3Zvcy9wYWdlcy9ncm91cC1kZXRhaWwtcGFnZS9ncm91cC1tZW1iZXJzL2dyb3VwLW1lbWJlcnMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { GroupService, MembersService } from '@perun-web-apps/perun/services';\nimport { Group, RichMember } from '@perun-web-apps/perun/models';\nimport { Urns } from '@perun-web-apps/perun/urns';\nimport { AddMemberDialogComponent } from '../../../../shared/components/dialogs/add-member-dialog/add-member-dialog.component';\nimport { MatDialog } from '@angular/material';\nimport { RemoveMembersDialogComponent } from '../../../../shared/components/dialogs/remove-members-dialog/remove-members-dialog.component';\n\n@Component({\n  selector: 'app-group-members',\n  templateUrl: './group-members.component.html',\n  styleUrls: ['./group-members.component.scss']\n})\nexport class GroupMembersComponent implements OnInit {\n\n  static id = 'GroupMembersComponent';\n\n  // used for router animation\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private membersService: MembersService,\n    private groupService: GroupService,\n    protected route: ActivatedRoute,\n    protected router: Router,\n    private dialog: MatDialog\n  ) { }\n\n  group: Group;\n\n  members: RichMember[] = null;\n  selection: SelectionModel<RichMember>;\n\n  searchString = '';\n  firstSearchDone = false;\n\n  loading = false;\n  data: 'search' | 'all';\n\n  private attrNames = [\n    Urns.MEMBER_DEF_ORGANIZATION,\n    Urns.MEMBER_DEF_MAIL,\n    Urns.USER_DEF_ORGANIZATION,\n    Urns.USER_DEF_PREFERRED_MAIL\n  ];\n\n  ngOnInit() {\n    this.selection = new SelectionModel<RichMember>(true, []);\n    this.route.parent.params.subscribe(parentParams => {\n      const groupId = parentParams['groupId'];\n\n      this.groupService.getGroupById(groupId).subscribe(group => {\n        this.group = group;\n      });\n    });\n  }\n\n  onSearchByString() {\n    this.data = 'search';\n    this.firstSearchDone = true;\n\n    this.refreshTable();\n  }\n\n  onListAll() {\n    this.data = 'all';\n    this.firstSearchDone = true;\n\n   this.refreshTable();\n  }\n\n  onAddMember() {\n    const dialogRef = this.dialog.open(AddMemberDialogComponent, {\n      width: '1000px',\n      data: {\n        voId: this.group.voId,\n        group: this.group,\n        entityId: this.group.id,\n        theme: 'group-theme',\n        type: 'group',\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      if (this.firstSearchDone) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  onKeyInput(event: KeyboardEvent) {\n    if (event.key === 'Enter' && this.searchString.length > 0) {\n      this.onSearchByString();\n    }\n  }\n\n  onRemoveMembers() {\n    const dialogRef = this.dialog.open(RemoveMembersDialogComponent, {\n      width: '450px',\n      data: {\n        groupId: this.group.id,\n        members: this.selection.selected\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(wereMembersDeleted => {\n      if (wereMembersDeleted) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.selection.clear();\n    switch (this.data) {\n      case 'all': {\n        this.membersService.getCompleteRichMembersForGroup(this.group.id, this.attrNames).subscribe(\n          members => {\n            this.members = members;\n            this.loading = false;\n          },\n          () => this.loading = false\n        );\n        break;\n      }\n      case 'search': {\n        this.membersService.findCompleteRichMembersForGroup(this.group.id, this.searchString, this.attrNames).subscribe(\n          members => {\n            this.members = members;\n            this.loading = false;\n          },\n          () => this.loading = false\n        );\n        break;\n      }\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3Zvcy9wYWdlcy9ncm91cC1kZXRhaWwtcGFnZS9ncm91cC1yZXNvdXJjZXMvZ3JvdXAtcmVzb3VyY2VzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { GroupService, ResourcesService } from '@perun-web-apps/perun/services';\nimport { Group, RichResource } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-group-resources',\n  templateUrl: './group-resources.component.html',\n  styleUrls: ['./group-resources.component.scss']\n})\nexport class GroupResourcesComponent implements OnInit {\n\n  static id = 'GroupResourcesComponent';\n\n  // used for router animation\n  @HostBinding('class.router-component') true;\n\n  constructor(private resourcesService: ResourcesService,\n              private groupService: GroupService,\n              private route: ActivatedRoute) {\n  }\n\n  group: Group;\n  resources: RichResource[] = null;\n  selected = new SelectionModel<RichResource>(true, []);\n\n  loading: boolean;\n  filterValue = '';\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(parentParams => {\n      const groupId = parentParams['groupId'];\n\n      this.groupService.getGroupById(groupId).subscribe(group => {\n        this.group = group;\n\n        this.refreshTable();\n      });\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.resourcesService.getResourcesByGroup(this.group.id).subscribe(resources => {\n      this.resources = resources;\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3Zvcy9wYWdlcy9ncm91cC1kZXRhaWwtcGFnZS9ncm91cC1zdWJncm91cHMvZ3JvdXAtc3ViZ3JvdXBzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnInit, ViewChild} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {CreateGroupDialogComponent} from '../../../../shared/components/dialogs/create-group-dialog/create-group-dialog.component';\nimport {ActivatedRoute} from '@angular/router';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {DeleteGroupDialogComponent} from '../../../../shared/components/dialogs/delete-group-dialog/delete-group-dialog.component';\nimport {MatCheckbox} from '@angular/material';\nimport {applyFilter} from '@perun-web-apps/perun/utils';\nimport { GroupService } from '@perun-web-apps/perun/services';\nimport { Group } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-group-subgroups',\n  templateUrl: './group-subgroups.component.html',\n  styleUrls: ['./group-subgroups.component.scss']\n})\nexport class GroupSubgroupsComponent implements OnInit {\n\n  static id = 'GroupSubgroupsComponent';\n\n  // used for router animation\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private dialog: MatDialog,\n    private groupService: GroupService,\n    private route: ActivatedRoute\n  ) {\n  }\n  group: Group;\n\n  groups: Group[] = [];\n\n  filteredGroups: Group[] = [];\n\n  filteredTreeGroups: Group[] = [];\n\n  selected = new SelectionModel<Group>(true, []);\n\n  showGroupList = false;\n\n  loading: boolean;\n\n  filtering = false;\n\n  @ViewChild('checkbox', {static: true})\n  checkbox: MatCheckbox;\n\n  onCreateGroup() {\n    const dialogRef = this.dialog.open(CreateGroupDialogComponent, {\n      width: '350px',\n      data: {parentGroup: this.group}\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.ngOnInit();\n    });\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('preferedValue') === 'list') {\n      this.checkbox.toggle();\n      this.selected.clear();\n      this.showGroupList = true;\n    }\n    this.checkbox.change.subscribe(() => {\n      const value = this.checkbox.checked ? 'list' : 'tree';\n      localStorage.setItem('preferedValue', value);\n    });\n\n    this.route.parent.params.subscribe(parentParams => {\n      const groupId = parentParams['groupId'];\n      this.groupService.getGroupById(groupId).subscribe(group => {\n        this.group = group;\n\n        this.refreshTable();\n      });\n    });\n  }\n\n  deleteGroup() {\n    const dialogRef = this.dialog.open(DeleteGroupDialogComponent, {\n      width: '450px',\n      data: {voId: this.group.id, groups: this.selected.selected}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.groupService.getAllRichSubGroupsWithAttributesByNames(this.group.id).subscribe(groups => {\n      this.groups = groups;\n      this.filteredTreeGroups = this.groups;\n      this.filteredGroups = this.groups;\n      this.selected.clear();\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    const results = applyFilter(filterValue, this.groups);\n    this.filteredGroups = results[0];\n    this.filteredTreeGroups = results[1];\n    this.filtering = filterValue !== '';\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3Zvcy9wYWdlcy9tZW1iZXItZGV0YWlsLXBhZ2UvbWVtYmVyLWdyb3Vwcy9tZW1iZXItZ3JvdXBzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { GroupService } from '@perun-web-apps/perun/services';\nimport { Group } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-member-groups',\n  templateUrl: './member-groups.component.html',\n  styleUrls: ['./member-groups.component.scss']\n})\nexport class MemberGroupsComponent implements OnInit {\n\n  static id = 'MemberGroupsComponent';\n\n  // used for router animation\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private groupsService: GroupService,\n    private route: ActivatedRoute\n  ) { }\n\n  groups: Group[];\n  memberId: number;\n  loading: boolean;\n\n  filterValue = '';\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(parentParams => {\n      this.memberId = parentParams['memberId'];\n\n      this.refreshTable();\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.groupsService.getMemberGroups(this.memberId).subscribe(groups => {\n      this.groups = groups;\n      this.loading = false;\n    }, () => this.loading = false);\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3Zvcy9wYWdlcy92by1kZXRhaWwtcGFnZS92by1hcHBsaWNhdGlvbnMvdm8tYXBwbGljYXRpb25zLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { RegistrarService, VoService } from '@perun-web-apps/perun/services';\nimport { Application, Vo } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-vo-applications',\n  templateUrl: './vo-applications.component.html',\n  styleUrls: ['./vo-applications.component.scss']\n})\nexport class VoApplicationsComponent implements OnInit {\n\n  static id = 'VoApplicationsComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(private voService: VoService,\n              private registrarService: RegistrarService,\n              protected route: ActivatedRoute) { }\n\n  state = 'pending';\n  loading = false;\n  applications: Application[] = [];\n  vo: Vo;\n  displayedColumns: string[] = ['id', 'createdAt', 'type', 'state', 'user', 'extSourceLoa', 'group', 'modifiedBy'];\n  firstSearchDone: boolean;\n  filterValue = '';\n\n  ngOnInit() {\n    this.loading = true;\n    this.route.parent.params.subscribe(parentParams => {\n      const voId = parentParams['voId'];\n      this.voService.getVoById(voId).subscribe(vo => {\n        this.vo = vo;\n        this.setData(['NEW', 'VERIFIED']);\n      });\n    });\n  }\n\n\n  setData(state: string[]) {\n    this.registrarService.getApplicationsForVoWithState(this.vo.id, state).subscribe(applications => {\n      this.applications = applications;\n      this.loading = false;\n    });\n  }\n\n  select() {\n    this.loading = true;\n    switch (this.state) {\n      case 'approved': {\n        this.setData(['APPROVED']);\n        break;\n      }\n      case 'rejected': {\n        this.setData(['REJECTED']);\n        break;\n      }\n      case 'wfmv': {\n        this.setData(['NEW']);\n        break;\n      }\n      case 'submited': {\n        this.setData(['VERIFIED']);\n        break;\n      }\n      case 'pending': {\n        this.setData(['NEW', 'VERIFIED']);\n        break;\n      }\n      case 'all': {\n        this.registrarService.getApplicationsForVo(this.vo.id).subscribe(applications => {\n          this.applications = applications;\n          this.loading = false;\n        });\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3Zvcy9wYWdlcy92by1kZXRhaWwtcGFnZS92by1ncm91cHMvdm8tZ3JvdXBzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, HostBinding, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateGroupDialogComponent } from '../../../../shared/components/dialogs/create-group-dialog/create-group-dialog.component';\nimport { SideMenuService } from '../../../../core/services/common/side-menu.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { DeleteGroupDialogComponent } from '../../../../shared/components/dialogs/delete-group-dialog/delete-group-dialog.component';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { GroupFlatNode } from '../../../components/groups-tree/groups-tree.component';\nimport { MoveGroupDialogComponent } from '../../../../shared/components/dialogs/move-group-dialog/move-group-dialog.component';\nimport { MatCheckbox } from '@angular/material';\nimport { applyFilter } from '@perun-web-apps/perun/utils';\nimport { GroupService, VoService } from '@perun-web-apps/perun/services';\nimport { Group, Vo } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-vo-groups',\n  templateUrl: './vo-groups.component.html',\n  styleUrls: ['./vo-groups.component.scss']\n})\nexport class VoGroupsComponent implements OnInit {\n\n  static id = 'VoGroupsComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private dialog: MatDialog,\n    private groupService: GroupService,\n    private sideMenuService: SideMenuService,\n    private voService: VoService,\n    private route: ActivatedRoute,\n  ) { }\n\n  @Input()\n  vo: Vo;\n\n  groups: Group[] = [];\n\n  filteredGroups: Group[] = [];\n\n  filteredTreeGroups: Group[] = [];\n\n  showGroupList = false;\n\n  selected = new SelectionModel<Group>(true, []);\n\n  loading: boolean;\n\n  filtering = false;\n\n  @ViewChild('checkbox', {static: true})\n  checkbox: MatCheckbox;\n\n  onCreateGroup() {\n    const dialogRef = this.dialog.open(CreateGroupDialogComponent, {\n      width: '350px',\n      data: {voId: this.vo.id, parentGroup: null}\n    });\n\n    dialogRef.afterClosed().subscribe((success) => {\n      if (success) {\n        this.loadAllGroups();\n      }\n    });\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('preferedValue') === 'list') {\n      this.checkbox.toggle();\n      this.selected.clear();\n      this.showGroupList = true;\n    }\n    this.checkbox.change.subscribe(() => {\n      const value = this.checkbox.checked ? 'list' : 'tree';\n      localStorage.setItem('preferedValue', value);\n    });\n\n    this.route.parent.params.subscribe(parentParams => {\n      const voId = parentParams['voId'];\n\n      this.voService.getVoById(voId).subscribe(vo => {\n        this.vo = vo;\n\n        this.loadAllGroups();\n      });\n    });\n  }\n\n  deleteGroup() {\n    const dialogRef = this.dialog.open(DeleteGroupDialogComponent, {\n      width: '450px',\n      data: {voId: this.vo.id, groups: this.selected.selected}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loadAllGroups();\n      }\n    });\n  }\n\n  removeAllGroups() {\n    this.selected.clear();\n  }\n\n  onMoveGroup(group: GroupFlatNode | Group) {\n    console.log('Vo - ' + group);\n    const dialogRef = this.dialog.open(MoveGroupDialogComponent, {\n      width: '550px',\n      data: {\n        group: group,\n        theme: 'vo-theme'\n      },\n    });\n    dialogRef.afterClosed().subscribe(groupMoved => {\n      if (groupMoved) {\n        this.loadAllGroups();\n      }\n    });\n  }\n\n  loadAllGroups() {\n    this.loading = true;\n    this.groupService.getAllGroups(this.vo.id).subscribe(groups => {\n      this.groups = groups;\n      this.filteredGroups = groups;\n      this.filteredTreeGroups = groups;\n      this.selected.clear();\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    const results = applyFilter(filterValue, this.groups);\n    this.filteredGroups = results[0];\n    this.filteredTreeGroups = results[1];\n    this.filtering = filterValue !== '';\n  }\n}\n","export default \".search-field {\\n  width: 300px;\\n}\\n\\n.align-elements {\\n  display: flex;\\n  align-items: center;\\n  flex-wrap: wrap;\\n}\\n\\n.fix-select {\\n  margin-top: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZlY3RvdW4vZ2l0L3BlcnVuLXdlYi1hcHBzL2FwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvdm9zL3BhZ2VzL3ZvLWRldGFpbC1wYWdlL3ZvLW1lbWJlcnMvdm8tbWVtYmVycy5jb21wb25lbnQuc2NzcyIsImFwcHMvYWRtaW4tZ3VpL3NyYy9hcHAvdm9zL3BhZ2VzL3ZvLWRldGFpbC1wYWdlL3ZvLW1lbWJlcnMvdm8tbWVtYmVycy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUNDRjs7QURFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7QUNDRjs7QURFQTtFQUNFLGVBQUE7QUNDRiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3Zvcy9wYWdlcy92by1kZXRhaWwtcGFnZS92by1tZW1iZXJzL3ZvLW1lbWJlcnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VhcmNoLWZpZWxkIHtcbiAgd2lkdGg6IDMwMHB4O1xufVxuXG4uYWxpZ24tZWxlbWVudHN7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cblxuLmZpeC1zZWxlY3R7XG4gIG1hcmdpbi10b3A6IDhweFxufVxuIiwiLnNlYXJjaC1maWVsZCB7XG4gIHdpZHRoOiAzMDBweDtcbn1cblxuLmFsaWduLWVsZW1lbnRzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4uZml4LXNlbGVjdCB7XG4gIG1hcmdpbi10b3A6IDhweDtcbn0iXX0= */\"","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { SideMenuService } from '../../../../core/services/common/side-menu.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatDialog } from '@angular/material';\nimport { RemoveMembersDialogComponent } from '../../../../shared/components/dialogs/remove-members-dialog/remove-members-dialog.component';\nimport { AddMemberDialogComponent } from '../../../../shared/components/dialogs/add-member-dialog/add-member-dialog.component';\nimport { MembersService, VoService } from '@perun-web-apps/perun/services';\nimport { RichMember, Vo } from '@perun-web-apps/perun/models';\nimport { Urns } from '@perun-web-apps/perun/urns';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-vo-members',\n  templateUrl: './vo-members.component.html',\n  styleUrls: ['./vo-members.component.scss']\n})\nexport class VoMembersComponent implements OnInit {\n\n  static id = 'VoMembersComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private membersService: MembersService,\n    private sideMenuService: SideMenuService,\n    private voService: VoService,\n    private route: ActivatedRoute,\n    private notificator: NotificatorService,\n    private translate: TranslateService,\n    private dialog: MatDialog\n  ) { }\n\n  vo: Vo;\n\n  members: RichMember[] = null;\n\n  selection = new SelectionModel<RichMember>(true, []);\n  searchString = '';\n  firstSearchDone = false;\n\n  loading = false;\n\n  private attrNames = [\n    Urns.MEMBER_DEF_ORGANIZATION,\n    Urns.MEMBER_DEF_MAIL,\n    Urns.USER_DEF_ORGANIZATION,\n    Urns.USER_DEF_PREFERRED_MAIL\n  ];\n\n  statuses = new FormControl();\n  statusList = ['VALID', 'INVALID', 'SUSPENDED', 'EXPIRED', 'DISABLED'];\n  selectedStatuses: string[] = ['VALID', 'INVALID', 'SUSPENDED', 'EXPIRED', 'DISABLED'];\n\n  ngOnInit() {\n    this.statuses.setValue(this.statusList);\n    this.route.parent.params.subscribe(parentParams => {\n      const voId = parentParams['voId'];\n\n      this.voService.getVoById(voId).subscribe(vo => {\n        this.vo = vo;\n      });\n    });\n  }\n\n  onSearchByString() {\n    this.loading = true;\n    this.firstSearchDone = true;\n\n    this.selection.clear();\n\n    this.membersService.findCompleteRichMembers(this.vo.id, this.searchString, this.attrNames, this.selectedStatuses).subscribe(\n      members => {\n        this.members = members;\n        this.loading = false;\n      },\n      () => this.loading = false\n    );\n  }\n\n  onListAll() {\n    this.loading = true;\n    this.firstSearchDone = true;\n\n    this.selection.clear();\n    this.membersService.getCompleteRichMembers(this.vo.id, this.attrNames, this.selectedStatuses).subscribe(\n      members => {\n        this.members = members;\n        this.loading = false;\n      },\n      () => this.loading = false\n    );\n  }\n\n  onAddMember() {\n    const dialogRef = this.dialog.open(AddMemberDialogComponent, {\n      width: '1000px',\n      data: {\n        entityId: this.vo.id,\n        theme: 'vo-theme',\n        type: 'vo'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      if (this.firstSearchDone) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  onKeyInput(event: KeyboardEvent) {\n    if (event.key === 'Enter' && this.searchString.length > 0) {\n      this.onSearchByString();\n    }\n  }\n\n  onRemoveMembers() {\n    const dialogRef = this.dialog.open(RemoveMembersDialogComponent, {\n      width: '450px',\n      data: { members: this.selection.selected }\n    });\n\n    dialogRef.afterClosed().subscribe(wereMembersDeleted => {\n      if (wereMembersDeleted) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  refreshTable() {\n    if (this.searchString.trim().length > 0) {\n      this.onSearchByString();\n    } else {\n      this.onListAll();\n    }\n  }\n\n  displaySelectedStatuses(): string {\n    if(this.selectedStatuses.length === this.statusList.length){\n      return 'ALL';\n    }\n    if(this.statuses.value){\n      return `${this.statuses.value[0]}  ${this.statuses.value.length > 1 ? ('(+' + (this.statuses.value.length - 1) +' '+ (this.statuses.value.length === 2 ? 'other)' : 'others)')) : ''}`;\n    }\n    return '';\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3Zvcy9wYWdlcy92by1kZXRhaWwtcGFnZS92by1yZXNvdXJjZXMvdm8tcmVzb3VyY2VzLXByZXZpZXcvdm8tcmVzb3VyY2VzLXByZXZpZXcuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { ResourcesService, VoService } from '@perun-web-apps/perun/services';\nimport { RichResource, Vo } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-vo-resources-preview',\n  templateUrl: './vo-resources-preview.component.html',\n  styleUrls: ['./vo-resources-preview.component.scss']\n})\nexport class VoResourcesPreviewComponent implements OnInit {\n\n  static id = 'VoResourcesPreviewComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(private resourcesService: ResourcesService,\n              private voService: VoService,\n              private route: ActivatedRoute) {\n  }\n\n  vo: Vo;\n  resources: RichResource[] = [];\n  selected = new SelectionModel<RichResource>(true, []);\n\n  loading: boolean;\n  filterValue = '';\n\n  ngOnInit() {\n    this.route.parent.parent.params.subscribe(parentParams => {\n      const voId = parentParams['voId'];\n\n      this.voService.getVoById(voId).subscribe(vo => {\n        this.vo = vo;\n\n        this.refreshTable();\n      });\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.resourcesService.getResourcesByVo(this.vo.id).subscribe(resources => {\n      this.resources = resources;\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FkbWluLWd1aS9zcmMvYXBwL3Zvcy9wYWdlcy92by1kZXRhaWwtcGFnZS92by1yZXNvdXJjZXMvdm8tcmVzb3VyY2VzLXN0YXRlcy92by1yZXNvdXJjZXMtc3RhdGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {CustomIconService} from '../../../../../core/services/api/custom-icon.service';\nimport { PropagationStatsReaderService } from '@perun-web-apps/perun/services';\nimport { ResourceState } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-vo-resources-states',\n  templateUrl: './vo-resources-states.component.html',\n  styleUrls: ['./vo-resources-states.component.scss']\n})\nexport class VoResourcesStatesComponent implements OnInit {\n\n  static id = 'VoResourcesStatesComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(private route: ActivatedRoute,\n              private propagationStatsReader: PropagationStatsReaderService,\n              private customIconService: CustomIconService) { }\n\n  loading = false;\n  okPropagation: ResourceState[];\n  errorPropagation: ResourceState[];\n  resourceStates: ResourceState[] = [];\n\n  voId: number;\n  selectedIndex = 0;\n\n  ngOnInit() {\n    this.customIconService.registerPerunRefreshIcon();\n    this.loading = true;\n    this.route.parent.parent.params.subscribe(parentParams => {\n      this.voId = parentParams['voId'];\n      this.refreshTable();\n    });\n  }\n\n  refreshTable() {\n    console.log(this.selectedIndex);\n    this.loading = true;\n    this.propagationStatsReader.getAllResourcesState(this.voId).subscribe( resourceStates => {\n      this.resourceStates = resourceStates;\n      this.okPropagation = [];\n      this.errorPropagation = [];\n\n      for (const resourceState of resourceStates) {\n        let indicator = true;\n        for (const task of resourceState.taskList) {\n          if (task.status === 'ERROR' || task.status === 'GENERROR' || task.status === 'SENDERROR') {\n            indicator = false;\n            break;\n          }\n        }\n        if (indicator) {\n          this.okPropagation.push(resourceState);\n        } else {\n          this.errorPropagation.push(resourceState);\n        }\n      }\n      this.loading = false;\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}