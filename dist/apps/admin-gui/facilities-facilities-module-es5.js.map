{"version":3,"sources":["webpack:///home/vectoun/git/perun-web-apps/libs/perun/facility-services-config/src/index.ts","webpack:///home/vectoun/git/perun-web-apps/libs/perun/facility-services-config/src/lib/perun-facility-services-config.module.ts","webpack:///home/vectoun/git/perun-web-apps/libs/perun/facility-services-config/src/lib/service-configurator/service-configurator.component.ts","webpack:///home/vectoun/git/perun-web-apps/libs/perun/facility-services-config/src/lib/service-configurator/service-configurator.component.html","webpack:///home/vectoun/git/perun-web-apps/libs/ui/material/src/index.ts","webpack:///home/vectoun/git/perun-web-apps/libs/ui/material/src/lib/ui-material.module.ts","webpack:///home/vectoun/git/perun-web-apps/node_modules/@angular/material/__ivy_ngcc__/fesm2015/grid-list.js","webpack:///src/app/facilities/facilities-routing.module.ts","webpack:///src/app/facilities/facilities.module.ts","webpack:///src/app/facilities/pages/facility-detail-page/facility-detail-page.component.ts","webpack:///src/app/facilities/pages/facility-detail-page/facility-detail-page.component.html","webpack:///src/app/facilities/pages/facility-detail-page/facility-hosts/facility-hosts-detail/facility-hosts-detail.component.ts","webpack:///src/app/facilities/pages/facility-detail-page/facility-hosts/facility-hosts-detail/facility-hosts-detail.component.html","webpack:///src/app/facilities/pages/facility-detail-page/facility-hosts/facility-hosts.component.ts","webpack:///src/app/facilities/pages/facility-detail-page/facility-hosts/facility-hosts.component.html","webpack:///src/app/facilities/pages/facility-detail-page/facility-overview/facility-overview.component.ts","webpack:///src/app/facilities/pages/facility-detail-page/facility-overview/facility-overview.component.html","webpack:///src/app/facilities/pages/facility-detail-page/facility-security-teams/facility-security-teams.component.ts","webpack:///src/app/facilities/pages/facility-detail-page/facility-security-teams/facility-security-teams.component.html","webpack:///src/app/facilities/pages/facility-detail-page/facility-service-config/facility-service-config.component.ts","webpack:///src/app/facilities/pages/facility-detail-page/facility-service-config/facility-service-config.component.html","webpack:///src/app/facilities/pages/facility-detail-page/facility-services-destinations/facility-services-destinations.component.ts","webpack:///src/app/facilities/pages/facility-detail-page/facility-services-destinations/facility-services-destinations.component.html","webpack:///src/app/facilities/pages/facility-detail-page/facility-settings/facility-settings-attributes/facility-settings-attributes.component.ts","webpack:///src/app/facilities/pages/facility-detail-page/facility-settings/facility-settings-attributes/facility-settings-attributes.component.html","webpack:///src/app/facilities/pages/facility-detail-page/facility-settings/facility-settings-blacklist/facility-settings-blacklist.component.ts","webpack:///src/app/facilities/pages/facility-detail-page/facility-settings/facility-settings-blacklist/facility-settings-blacklist.component.html","webpack:///src/app/facilities/pages/facility-detail-page/facility-settings/facility-settings-managers/facility-settings-managers.component.ts","webpack:///src/app/facilities/pages/facility-detail-page/facility-settings/facility-settings-managers/facility-settings-managers.component.html","webpack:///src/app/facilities/pages/facility-detail-page/facility-settings/facility-settings-overview/facility-settings-overview.component.ts","webpack:///src/app/facilities/pages/facility-detail-page/facility-settings/facility-settings-overview/facility-settings-overview.component.html","webpack:///src/app/facilities/pages/facility-detail-page/facility-settings/facility-settings-owners/facility-settings-owners.component.ts","webpack:///src/app/facilities/pages/facility-detail-page/facility-settings/facility-settings-owners/facility-settings-owners.component.html","webpack:///src/app/facilities/pages/facility-detail-page/facility-settings/facility-settings.component.ts","webpack:///src/app/facilities/pages/facility-detail-page/facility-settings/facility-settings.component.html","webpack:///src/app/facilities/pages/facility-select-page/facility-select-page.component.ts","webpack:///src/app/facilities/pages/facility-select-page/facility-select-page.component.html","webpack:///src/app/facilities/pages/resource-detail-page/resource-detail-page.component.ts","webpack:///src/app/facilities/pages/resource-detail-page/resource-detail-page.component.html","webpack:///src/app/facilities/pages/resource-detail-page/resource-groups/resource-groups.component.ts","webpack:///src/app/facilities/pages/resource-detail-page/resource-groups/resource-groups.component.html","webpack:///src/app/facilities/pages/resource-detail-page/resource-overview/resource-overview.component.ts","webpack:///src/app/facilities/pages/resource-detail-page/resource-overview/resource-overview.component.html","webpack:///src/app/facilities/pages/resource-detail-page/resource-settings/resource-settings-attributes/resource-settings-attributes.component.ts","webpack:///src/app/facilities/pages/resource-detail-page/resource-settings/resource-settings-attributes/resource-settings-attributes.component.html","webpack:///src/app/facilities/pages/resource-detail-page/resource-settings/resource-settings-overview/resource-settings-overview.component.ts","webpack:///src/app/facilities/pages/resource-detail-page/resource-settings/resource-settings-overview/resource-settings-overview.component.html","webpack:///src/app/facilities/pages/resource-detail-page/resource-settings/resource-settings.component.ts","webpack:///src/app/facilities/pages/resource-detail-page/resource-settings/resource-settings.component.html"],"names":["PerunFacilityServicesConfigModule","imports","declarations","exports","ServiceConfiguratorComponent","attributesManager","tableConfigService","dialog","selectionFacility","selectionResource","selectionGroup","selectionMember","showTab","tableId","pageSize","getTablePageSize","loadFacilityAttributes","changes","reloadAll","currentValue","undefined","resourceAttributes","loadResourceAttributes","groupAttributes","getGroupAttributes","group","id","subscribe","attrs","memberAttributes","getMemberAttributes","member","service","getResourceAttributes","resource","getRequiredAttributesResource","getRequiredAttributesResourceService","getFacilityAttributes","facility","facilityAttributes","getRequiredAttributesFacility","getRequiredAttributesFacilityService","event","setTablePageSize","config","width","data","entityId","entity","notEmptyAttributes","style","dialogRef","open","afterClosed","result","facilityAlist","updateMapAttributes","attributes","selected","clear","ngOnInit","resourceAList","groupAList","memberAList","onAddAttFacility","onSaveFacility","selector","templateUrl","styleUrls","UiMaterialModule","_c0","_c1","_c2","MAT_GRID_LIST","MatGridListBase","MatGridTile","_element","_gridList","_rowspan","_colspan","property","value","nativeElement","Math","round","ɵfac","MatGridTile_Factory","t","ɵcmp","type","selectors","hostAttrs","hostVars","hostBindings","MatGridTile_HostBindings","rf","ctx","rowspan","colspan","inputs","exportAs","ngContentSelectors","decls","vars","consts","template","MatGridTile_Template","styles","encapsulation","changeDetection","ctorParameters","decorators","args","propDecorators","host","None","OnPush","MatGridTileText","_lines","MatGridTileText_Factory","contentQueries","MatGridTileText_ContentQueries","dirIndex","_t","MatGridTileText_Template","descendants","MatGridAvatarCssMatStyler","MatGridAvatarCssMatStyler_Factory","ɵdir","MatGridTileHeaderCssMatStyler","MatGridTileHeaderCssMatStyler_Factory","MatGridTileFooterCssMatStyler","MatGridTileFooterCssMatStyler_Factory","Tile","TileCoordinator","columnIndex","rowIndex","numColumns","tiles","tracker","Array","fill","length","positions","map","tile","_trackTile","gapStartIndex","_findMatchingGap","_markTilePosition","TilePosition","tileCols","Error","gapEndIndex","_nextRow","indexOf","_findGapEndIndex","max","i","start","lastRowMax","rowCount","row","col","cssCalcAllowedValue","TileStyler","_rows","gutterSize","cols","direction","_gutterSize","normalizeUnits","_cols","_direction","sizePercent","gutterFraction","baseSize","offset","calc","span","colIndex","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","getBaseTileSize","side","_setStyle","getTilePosition","getTileSize","tileHeight","FixedTileStyler","fixedRowHeight","test","getTileSpan","getGutterSpan","list","_setListStyle","_tiles","forEach","RatioTileStyler","_parseRatio","percentHeightPerTile","rowHeightRatio","baseTileHeight","ratioParts","split","parseFloat","FitTileStyler","gutterHeightPerTile","exp","match","MAT_FIT_MODE","MatGridList","_dir","_gutter","_checkCols","_checkRowHeight","_layoutTiles","_rowHeight","_setTileStyler","rowHeight","_tileStyler","reset","_tileCoordinator","filter","update","init","index","pos","setStyle","getComputedHeight","newValue","MatGridList_Factory","MatGridList_ContentQueries","MatGridList_HostBindings","features","provide","useExisting","MatGridList_Template","providers","MatGridListModule","ɵmod","ɵinj","factory","MatGridListModule_Factory","ngJitMode","routes","path","component","children","animation","FacilitiesRoutingModule","forChild","FacilitiesModule","FacilityDetailPageComponent","facilityManager","route","sideMenuService","sideMenuItemService","params","facilityId","getFacilityById","facilityItem","parseFacility","setFacilityMenuItems","animations","FacilityHostsDetailComponent","beanName","hostId","getHostById","refreshTable","loading","getHostAttributes","addAttribute","onSave","removeAttribute","FacilityHostsComponent","facilitiesManager","hosts","filterValue","parent","parentParams","getHosts","facilityName","name","theme","addHost","removeHost","applyFilter","FacilityOverviewComponent","navItems","initItems","cssIcon","url","label","FacilitySecurityTeamsComponent","securityTeams","getAssignedSecurityTeams","FacilityServiceConfigComponent","resourceManager","serviceManager","membersManager","namePipe","translate","selectedService","attrNames","serviceField","resourceField","groupField","memberField","get","serviceAllTranslation","serviceNotSelectedTranslation","getAssignedResourcesForFacility","resources","getAssignedServices","services","filteredServices","valueChanges","pipe","_filterServices","filteredResources","_filterResources","filteredGroups","_filterGroups","filteredMembers","_filterMembers","s","r","selectedResource","getAssignedGroups","groups","selectedGroup","selectedMember","checked","g","getCompleteRichMembersForGroup","members","m","toString","toLowerCase","normalize","replace","includes","transform","user","e","target","FacilityServicesDestinationsComponent","servicesManager","notificator","displayedColumns","getAllRichDestinationsForFacility","destinations","successMessage","showSuccess","deleteDestinations","console","log","destinationsForDelete","destination","removeDestination","shift","addDestination","FacilitySettingsAttributesComponent","selection","saveSuccessMessage","deleteSuccessMessage","onCreate","onDelete","FacilitySettingsBlacklistComponent","usersManager","bansOnFacilitiesWithUsers","parentParentParams","getBansForFacility","bansOnFacility","listOfBans","ban","getUserById","userId","subscriptionUser","push","FacilitySettingsManagersComponent","facilityService","availableRoles","FACILITYADMIN","FacilitySettingsOverviewComponent","items","FacilitySettingsOwnersComponent","facilitiesManagerService","owners","getFacilityOwners","forbiddenOwners","owner","response","onRemove","FacilitySettingsComponent","FacilitySelectPageComponent","facilities","recentIds","getRichFacilities","ResourceDetailPageComponent","resourcesManager","resourceId","getResourceById","resourceItem","parseResource","ResourceGroupsComponent","assignedGroups","loadAllGroups","success","option","addGroup","removeGroups","ResourceOverviewComponent","ResourceSettingsAttributesComponent","ResourceSettingsOverviewComponent","ResourceSettingsComponent"],"mappings":"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","file":"facilities-facilities-module-es5.js","sourcesContent":["export * from './lib/perun-facility-services-config.module';\nexport * from './lib/service-configurator/service-configurator.component';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ServiceConfiguratorComponent } from './service-configurator/service-configurator.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { PerunSharedComponentsModule } from '@perun-web-apps/perun/components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { UiMaterialModule } from '@perun-web-apps/ui/material';\n\n@NgModule({\n  imports: [CommonModule, MatTabsModule, PerunSharedComponentsModule, TranslateModule, UiMaterialModule],\n  declarations: [ServiceConfiguratorComponent],\n  exports: [ServiceConfiguratorComponent]\n})\nexport class PerunFacilityServicesConfigModule {}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport {\n  Attribute,\n  AttributesManagerService,\n  Facility,\n  Group,\n  Resource,\n  RichMember,\n  Service\n} from '@perun-web-apps/perun/openapi';\nimport {\n  TABLE_ATTRIBUTES_SETTINGS,\n  TableConfigService\n} from '@perun-web-apps/config/table-config';\nimport { PageEvent } from '@angular/material/paginator';\nimport {\n  AttributesListComponent,\n  CreateAttributeDialogComponent,\n  EditAttributeDialogComponent\n} from '@perun-web-apps/perun/components';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getDefaultDialogConfig } from '@perun-web-apps/perun/utils';\n\nexport type ServiceSelectValue = 'ALL' | 'NOT_SELECTED';\n\n@Component({\n  selector: 'perun-web-apps-service-configurator',\n  templateUrl: './service-configurator.component.html',\n  styleUrls: ['./service-configurator.component.scss']\n})\nexport class ServiceConfiguratorComponent implements OnInit, OnChanges {\n\n  constructor(\n    private attributesManager: AttributesManagerService,\n    private tableConfigService: TableConfigService,\n    private dialog: MatDialog\n  ) {\n  }\n\n  @Input()\n  facility: Facility;\n\n  @Input()\n  service: Service | ServiceSelectValue;\n\n  @Input()\n  resource: Resource;\n\n  @Input()\n  group: Group;\n\n  @Input()\n  member: RichMember;\n\n  @ViewChild('FacilityAList')\n  facilityAlist: AttributesListComponent;\n  @ViewChild('ResourceAList')\n  resourceAList: AttributesListComponent;\n  @ViewChild('GroupAList')\n  groupAList: AttributesListComponent;\n  @ViewChild('MemberAList')\n  memberAList: AttributesListComponent;\n\n\n  selectionFacility = new SelectionModel<Attribute>(true, []);\n  selectionResource = new SelectionModel<Attribute>(true, []);\n  selectionGroup = new SelectionModel<Attribute>(true, []);\n  selectionMember = new SelectionModel<Attribute>(true, []);\n\n\n  showTab = 0;\n\n  facilityAttributes: Attribute[];\n  resourceAttributes: Attribute[];\n  groupAttributes: Attribute[];\n  memberAttributes: Attribute[];\n\n  tableId = TABLE_ATTRIBUTES_SETTINGS;\n  pageSize: number;\n\n  ngOnInit() {\n    this.pageSize = this.tableConfigService.getTablePageSize(this.tableId);\n    this.loadFacilityAttributes();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['service']) {\n      this.reloadAll();\n      return;\n    }\n    if (changes['resource']) {\n      if (changes['resource'].currentValue === undefined) {\n        this.resourceAttributes = undefined;\n        this.showTab = 0;\n      } else {\n        this.showTab = 1;\n        this.loadResourceAttributes();\n      }\n    } else if (changes['group']) {\n      if (changes['group'].currentValue === undefined) {\n        this.groupAttributes = undefined;\n        this.showTab = 1;\n      } else {\n        this.showTab = 2;\n        this.attributesManager.getGroupAttributes(this.group.id).subscribe(attrs => this.groupAttributes = attrs);\n      }\n    } else if (changes['member']) {\n      if (changes['member'].currentValue === undefined) {\n        this.memberAttributes = undefined;\n        this.showTab = 2;\n      } else {\n        this.showTab = 3;\n        this.attributesManager.getMemberAttributes(this.member.id).subscribe(attrs => this.memberAttributes = attrs);\n      }\n    }\n\n  }\n\n  loadResourceAttributes() {\n    if (this.service === 'NOT_SELECTED') {\n      this.attributesManager\n        .getResourceAttributes(this.resource.id)\n        .subscribe(attrs => this.resourceAttributes = attrs);\n    } else if (this.service === 'ALL') {\n      this.attributesManager\n        .getRequiredAttributesResource(this.resource.id)\n        .subscribe(attrs => this.resourceAttributes = attrs);\n    } else {\n      this.attributesManager\n        .getRequiredAttributesResourceService(this.service.id, this.resource.id)\n        .subscribe(attrs => this.resourceAttributes = attrs);\n    }\n  }\n\n  loadFacilityAttributes() {\n    if (this.service === 'NOT_SELECTED') {\n      this.attributesManager\n        .getFacilityAttributes(this.facility.id)\n        .subscribe(attrs => this.facilityAttributes = attrs);\n    } else if (this.service === 'ALL') {\n      this.attributesManager\n        .getRequiredAttributesFacility(this.facility.id)\n        .subscribe(attrs => this.facilityAttributes = attrs);\n    } else {\n      this.attributesManager\n        .getRequiredAttributesFacilityService(this.service.id, this.facility.id)\n        .subscribe(attrs => this.facilityAttributes = attrs);\n    }\n  }\n\n  private reloadAll() {\n    this.loadFacilityAttributes();\n    if (this.resource !== undefined) {\n      this.loadResourceAttributes();\n    }\n  }\n\n  pageChanged(event: PageEvent) {\n    this.pageSize = event.pageSize;\n    this.tableConfigService.setTablePageSize(this.tableId, event.pageSize);\n  }\n\n  onAddAttFacility() {\n    const config = getDefaultDialogConfig();\n    config.width = '1050px';\n    config.data = {\n      entityId: this.facility.id,\n      entity: 'facility',\n      notEmptyAttributes: this.facilityAttributes,\n      style: 'facility-theme'\n    };\n\n    const dialogRef = this.dialog.open(CreateAttributeDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'saved') {\n        this.reloadAll();\n      }\n    });\n  }\n\n  onSaveFacility() {\n    this.facilityAlist.updateMapAttributes();\n\n    const dialogRef = this.dialog.open(EditAttributeDialogComponent, {\n      width: '450px',\n      data: {\n        entityId: this.facility.id,\n        entity: 'facility',\n        attributes: this.selectionFacility.selected\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.selectionFacility.clear()\n        this.ngOnInit()\n      }\n    });\n  }\n\n  onAddAttResource() {\n    const config = getDefaultDialogConfig();\n    config.width = '1050px';\n    config.data = {\n      entityId: this.resource.id,\n      entity: 'resource',\n      notEmptyAttributes: this.resourceAttributes,\n      style: 'facility-theme'\n    };\n\n    const dialogRef = this.dialog.open(CreateAttributeDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'saved') {\n        this.reloadAll();\n      }\n    });\n  }\n\n  onSaveResource() {\n    this.resourceAList.updateMapAttributes();\n\n    const dialogRef = this.dialog.open(EditAttributeDialogComponent, {\n      width: '450px',\n      data: {\n        entityId: this.resource.id,\n        entity: 'resource',\n        attributes: this.selectionResource.selected\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.selectionResource.clear()\n        this.ngOnInit()\n      }\n    });\n  }\n\n  onAddAttGroup() {\n    const config = getDefaultDialogConfig();\n    config.width = '1050px';\n    config.data = {\n      entityId: this.group.id,\n      entity: 'group',\n      notEmptyAttributes: this.groupAttributes,\n      style: 'facility-theme'\n    };\n\n    const dialogRef = this.dialog.open(CreateAttributeDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'saved') {\n        this.reloadAll();\n      }\n    });\n  }\n\n  onSaveGroup() {\n    this.groupAList.updateMapAttributes();\n\n    const dialogRef = this.dialog.open(EditAttributeDialogComponent, {\n      width: '450px',\n      data: {\n        entityId: this.group.id,\n        entity: 'group',\n        attributes: this.selectionGroup.selected\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.selectionGroup.clear()\n        this.ngOnInit()\n      }\n    });\n  }\n\n  onAddAttMember() {\n    const config = getDefaultDialogConfig();\n    config.width = '1050px';\n    config.data = {\n      entityId: this.member.id,\n      entity: 'member',\n      notEmptyAttributes: this.memberAttributes,\n      style: 'facility-theme'\n    };\n\n    const dialogRef = this.dialog.open(CreateAttributeDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'saved') {\n        this.reloadAll();\n      }\n    });\n  }\n\n  onSaveMember() {\n    this.memberAList.updateMapAttributes();\n\n    const dialogRef = this.dialog.open(EditAttributeDialogComponent, {\n      width: '450px',\n      data: {\n        entityId: this.member.id,\n        entity: 'member',\n        attributes: this.selectionMember.selected\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.selectionMember.clear()\n        this.ngOnInit()\n      }\n    });\n  }\n}\n","<!--The min-height is a hack to prevent page scrolling on tab switching-->\n<div style=\"min-height: 500px\">\n  <mat-tab-group [dynamicHeight]=\"true\" [(selectedIndex)]=\"showTab\">\n    <mat-tab [label]=\"facility.name + ' (facility)'\">\n\n      <button mat-flat-button class=\"mr-2 mt-3\" color=\"accent\" (click)=\"onAddAttFacility()\">\n        {{'SHARED_LIB.PERUN.SERVICES_CONFIGURATIONS.ADD' | translate}}\n      </button>\n\n      <button mat-flat-button class=\"mr-2 mt-3\" color=\"accent\" (click)=\"onSaveFacility()\" [disabled]=\"selectionFacility.selected.length === 0\">\n        {{'SHARED_LIB.PERUN.SERVICES_CONFIGURATIONS.SAVE' | translate}}\n      </button>\n\n      <perun-web-apps-attributes-list\n        #FacilityAList\n        (page)=\"pageChanged($event)\"\n        [pageSize]=\"pageSize\"\n        *ngIf=\"!!facilityAttributes\"\n        [attributes]=\"facilityAttributes\"\n        [selection]=\"selectionFacility\">\n      </perun-web-apps-attributes-list>\n    </mat-tab>\n    <mat-tab [label]=\"resource.name + ' (resource)'\" *ngIf=\"!!resource\">\n\n      <button mat-flat-button class=\"mr-2 mt-3\" color=\"accent\" (click)=\"onAddAttResource()\">\n        {{'SHARED_LIB.PERUN.SERVICES_CONFIGURATIONS.ADD' | translate}}\n      </button>\n\n      <button mat-flat-button class=\"mr-2 mt-3\" color=\"accent\" (click)=\"onSaveResource()\" [disabled]=\"selectionResource.selected.length === 0\">\n        {{'SHARED_LIB.PERUN.SERVICES_CONFIGURATIONS.SAVE' | translate}}\n      </button>\n\n      <perun-web-apps-attributes-list\n        #ResourceAList\n        (page)=\"pageChanged($event)\"\n        [pageSize]=\"pageSize\"\n        *ngIf=\"!!resourceAttributes\"\n        [attributes]=\"resourceAttributes\"\n        [selection]=\"selectionResource\">\n      </perun-web-apps-attributes-list>\n    </mat-tab>\n    <mat-tab [label]=\"group.name + ' (group)'\" *ngIf=\"!!group\">\n\n      <button mat-flat-button class=\"mr-2 mt-3\" color=\"accent\" (click)=\"onAddAttGroup()\">\n        {{'SHARED_LIB.PERUN.SERVICES_CONFIGURATIONS.ADD' | translate}}\n      </button>\n\n      <button mat-flat-button class=\"mr-2 mt-3\" color=\"accent\" (click)=\"onSaveGroup()\" [disabled]=\"selectionGroup.selected.length === 0\">\n        {{'SHARED_LIB.PERUN.SERVICES_CONFIGURATIONS.SAVE' | translate}}\n      </button>\n\n      <perun-web-apps-attributes-list\n        #GroupAList\n        (page)=\"pageChanged($event)\"\n        [pageSize]=\"pageSize\"\n        *ngIf=\"!!groupAttributes\"\n        [attributes]=\"groupAttributes\"\n        [selection]=\"selectionGroup\">\n      </perun-web-apps-attributes-list>\n    </mat-tab>\n    <mat-tab [label]=\"member.user.firstName + ' ' + member.user.lastName + ' (member)'\" *ngIf=\"!!member\">\n\n      <button mat-flat-button class=\"mr-2 mt-3\" color=\"accent\" (click)=\"onAddAttMember()\">\n        {{'SHARED_LIB.PERUN.SERVICES_CONFIGURATIONS.ADD' | translate}}\n      </button>\n\n      <button mat-flat-button class=\"mr-2 mt-3\" color=\"accent\" (click)=\"onSaveMember()\" [disabled]=\"selectionMember.selected.length === 0\">\n        {{'SHARED_LIB.PERUN.SERVICES_CONFIGURATIONS.SAVE' | translate}}\n      </button>\n\n      <perun-web-apps-attributes-list\n          #MemberAList\n          (page)=\"pageChanged($event)\"\n          [pageSize]=\"pageSize\"\n          *ngIf=\"!!memberAttributes\"\n          [attributes]=\"memberAttributes\"\n          [selection]=\"selectionMember\">\n      </perun-web-apps-attributes-list>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n","export * from './lib/ui-material.module';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatTableModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ScrollingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatStepperModule,\n  ],\n  exports: [\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatTableModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ScrollingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatStepperModule,\n  ]\n})\nexport class UiMaterialModule {}\n","import { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n/**\n * Base interface for a `MatGridList`.\n * \\@docs-private\n * @record\n */\nfunction MatGridListBase() { }\nif (false) {\n    /** @type {?} */\n    MatGridListBase.prototype.cols;\n    /** @type {?} */\n    MatGridListBase.prototype.gutterSize;\n    /** @type {?} */\n    MatGridListBase.prototype.rowHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-tile.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridTile {\n    /**\n     * @param {?} _element\n     * @param {?=} _gridList\n     */\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /**\n     * Amount of rows that the grid tile takes up.\n     * @return {?}\n     */\n    get rowspan() { return this._rowspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Amount of columns that the grid tile takes up.\n     * @return {?}\n     */\n    get colspan() { return this._colspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    _setStyle(property, value) {\n        ((/** @type {?} */ (this._element.nativeElement.style)))[property] = value;\n    }\n}\nMatGridTile.ɵfac = function MatGridTile_Factory(t) { return new (t || MatGridTile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_GRID_LIST, 8)); };\nMatGridTile.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTile, selectors: [[\"mat-grid-tile\"]], hostAttrs: [1, \"mat-grid-tile\"], hostVars: 2, hostBindings: function MatGridTile_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"rowspan\", ctx.rowspan)(\"colspan\", ctx.colspan);\n    } }, inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, exportAs: [\"matGridTile\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-figure\"]], template: function MatGridTile_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"figure\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridTile.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n];\nMatGridTile.propDecorators = {\n    rowspan: [{ type: Input }],\n    colspan: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTile, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile',\n                    // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                    // the DOM. This is needed for the grid-tile harness.\n                    '[attr.rowspan]': 'rowspan',\n                    '[attr.colspan]': 'colspan'\n                },\n                template: \"<!-- TODO(kara): Revisit why this is a figure.-->\\n<figure class=\\\"mat-figure\\\">\\n  <ng-content></ng-content>\\n</figure>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_GRID_LIST]\n            }] }]; }, { rowspan: [{\n            type: Input\n        }], colspan: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridTile.ngAcceptInputType_rowspan;\n    /** @type {?} */\n    MatGridTile.ngAcceptInputType_colspan;\n    /** @type {?} */\n    MatGridTile.prototype._rowspan;\n    /** @type {?} */\n    MatGridTile.prototype._colspan;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridTile.prototype._element;\n    /** @type {?} */\n    MatGridTile.prototype._gridList;\n}\nclass MatGridTileText {\n    /**\n     * @param {?} _element\n     */\n    constructor(_element) {\n        this._element = _element;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.ɵfac = function MatGridTileText_Factory(t) { return new (t || MatGridTileText)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatGridTileText.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTileText, selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]], contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, ngContentSelectors: _c2, decls: 4, vars: 0, consts: [[1, \"mat-grid-list-text\"]], template: function MatGridTileText_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridTileText.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatGridTileText.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileText, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridTileText.prototype._lines;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridTileText.prototype._element;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.ɵfac = function MatGridAvatarCssMatStyler_Factory(t) { return new (t || MatGridAvatarCssMatStyler)(); };\nMatGridAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridAvatarCssMatStyler, selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], hostAttrs: [1, \"mat-grid-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.ɵfac = function MatGridTileHeaderCssMatStyler_Factory(t) { return new (t || MatGridTileHeaderCssMatStyler)(); };\nMatGridTileHeaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileHeaderCssMatStyler, selectors: [[\"mat-grid-tile-header\"]], hostAttrs: [1, \"mat-grid-tile-header\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileHeaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.ɵfac = function MatGridTileFooterCssMatStyler_Factory(t) { return new (t || MatGridTileFooterCssMatStyler)(); };\nMatGridTileFooterCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileFooterCssMatStyler, selectors: [[\"mat-grid-tile-footer\"]], hostAttrs: [1, \"mat-grid-tile-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileFooterCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/tile-coordinator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface describing a tile.\n * \\@docs-private\n * @record\n */\nfunction Tile() { }\nif (false) {\n    /**\n     * Amount of rows that the tile takes up.\n     * @type {?}\n     */\n    Tile.prototype.rowspan;\n    /**\n     * Amount of columns that the tile takes up.\n     * @type {?}\n     */\n    Tile.prototype.colspan;\n}\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * \\@docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /**\n         * Index at which the search for the next gap will start.\n         */\n        this.columnIndex = 0;\n        /**\n         * The current row index.\n         */\n        this.rowIndex = 0;\n    }\n    /**\n     * Gets the total number of rows occupied by tiles\n     * @return {?}\n     */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     * @return {?}\n     */\n    get rowspan() {\n        /** @type {?} */\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param {?} numColumns Amount of columns in the grid.\n     * @param {?} tiles Tiles to be positioned.\n     * @return {?}\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => this._trackTile(tile)));\n    }\n    /**\n     * Calculates the row and col position of a tile.\n     * @private\n     * @param {?} tile\n     * @return {?}\n     */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        /** @type {?} */\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /**\n     * Finds the next available space large enough to fit the tile.\n     * @private\n     * @param {?} tileCols\n     * @return {?}\n     */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        /** @type {?} */\n        let gapStartIndex = -1;\n        /** @type {?} */\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /**\n     * Move \"down\" to the next row.\n     * @private\n     * @return {?}\n     */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @private\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @private\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\nif (false) {\n    /**\n     * Tracking array (see class description).\n     * @type {?}\n     */\n    TileCoordinator.prototype.tracker;\n    /**\n     * Index at which the search for the next gap will start.\n     * @type {?}\n     */\n    TileCoordinator.prototype.columnIndex;\n    /**\n     * The current row index.\n     * @type {?}\n     */\n    TileCoordinator.prototype.rowIndex;\n    /**\n     * The computed (row, col) position of each tile (the output).\n     * @type {?}\n     */\n    TileCoordinator.prototype.positions;\n}\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nclass TilePosition {\n    /**\n     * @param {?} row\n     * @param {?} col\n     */\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\nif (false) {\n    /** @type {?} */\n    TilePosition.prototype.row;\n    /** @type {?} */\n    TilePosition.prototype.col;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/tile-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n * @type {?}\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n * @abstract\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        /** @type {?} */\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        /** @type {?} */\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        /** @type {?} */\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        /** @type {?} */\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    getComputedHeight() { return null; }\n}\nif (false) {\n    /** @type {?} */\n    TileStyler.prototype._gutterSize;\n    /** @type {?} */\n    TileStyler.prototype._rows;\n    /** @type {?} */\n    TileStyler.prototype._rowspan;\n    /** @type {?} */\n    TileStyler.prototype._cols;\n    /** @type {?} */\n    TileStyler.prototype._direction;\n    /**\n     * Sets the vertical placement of the tile in the list.\n     * This method will be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @abstract\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    TileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) { };\n    /**\n     * Called when the tile styler is swapped out with a different one. To be used for cleanup.\n     * \\@docs-private\n     * @abstract\n     * @param {?} list Grid list that the styler was attached to.\n     * @return {?}\n     */\n    TileStyler.prototype.reset = function (list) { };\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * \\@docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    /**\n     * @param {?} fixedRowHeight\n     */\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    FixedTileStyler.prototype.fixedRowHeight;\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * \\@docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    /**\n     * @param {?} value\n     */\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        /** @type {?} */\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _parseRatio(value) {\n        /** @type {?} */\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\nif (false) {\n    /**\n     * Ratio width:height given by user to determine row height.\n     * @type {?}\n     */\n    RatioTileStyler.prototype.rowHeightRatio;\n    /** @type {?} */\n    RatioTileStyler.prototype.baseTileHeight;\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * \\@docs-private\n */\nclass FitTileStyler extends TileStyler {\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        /** @type {?} */\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        /** @type {?} */\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        /** @type {?} */\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\n/** @type {?} */\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    /**\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * The amount of space between tiles. This will be something like '5px' or '2em'.\n         */\n        this._gutter = '1px';\n    }\n    /**\n     * Amount of columns in the grid list.\n     * @return {?}\n     */\n    get cols() { return this._cols; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /**\n     * Size of the grid list's gutter in pixels.\n     * @return {?}\n     */\n    get gutterSize() { return this._gutter; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n    /**\n     * Set internal representation of row height from the user-provided value.\n     * @return {?}\n     */\n    get rowHeight() { return this._rowHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowHeight(value) {\n        /** @type {?} */\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /**\n     * Throw a friendly error if cols property is missing\n     * @private\n     * @return {?}\n     */\n    _checkCols() {\n        if (!this.cols) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` +\n                `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /**\n     * Default to equal width:height if rowHeight property is missing\n     * @private\n     * @return {?}\n     */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @private\n     * @param {?} rowHeight\n     * @return {?}\n     */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @private\n     * @return {?}\n     */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        /** @type {?} */\n        const tracker = this._tileCoordinator;\n        /** @type {?} */\n        const tiles = this._tiles.filter((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => !tile._gridList || tile._gridList === this));\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((/**\n         * @param {?} tile\n         * @param {?} index\n         * @return {?}\n         */\n        (tile, index) => {\n            /** @type {?} */\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        }));\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    _setListStyle(style) {\n        if (style) {\n            ((/** @type {?} */ (this._element.nativeElement.style)))[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.ɵfac = function MatGridList_Factory(t) { return new (t || MatGridList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nMatGridList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridList, selectors: [[\"mat-grid-list\"]], contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatGridTile, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tiles = _t);\n    } }, hostAttrs: [1, \"mat-grid-list\"], hostVars: 1, hostBindings: function MatGridList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"cols\", ctx.cols);\n    } }, inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, exportAs: [\"matGridList\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList\n            }])], ngContentSelectors: _c0, decls: 2, vars: 0, template: function MatGridList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatGridList.propDecorators = {\n    _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n    cols: [{ type: Input }],\n    gutterSize: [{ type: Input }],\n    rowHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div>\\n  <ng-content></ng-content>\\n</div>\",\n                host: {\n                    'class': 'mat-grid-list',\n                    // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                    // needed for the grid-list harness.\n                    '[attr.cols]': 'cols'\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { cols: [{\n            type: Input\n        }], gutterSize: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], _tiles: [{\n            type: ContentChildren,\n            args: [MatGridTile, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridList.ngAcceptInputType_cols;\n    /**\n     * Number of columns being rendered.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._cols;\n    /**\n     * Used for determiningthe position of each tile in the grid.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._tileCoordinator;\n    /**\n     * Row height value passed in by user. This can be one of three types:\n     * - Number value (ex: \"100px\"):  sets a fixed row height to that value\n     * - Ratio value (ex: \"4:3\"): sets the row height based on width:height ratio\n     * - \"Fit\" mode (ex: \"fit\"): sets the row height to total height divided by number of rows\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._rowHeight;\n    /**\n     * The amount of space between tiles. This will be something like '5px' or '2em'.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._gutter;\n    /**\n     * Sets position and size styles for a tile\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._tileStyler;\n    /**\n     * Query list of tiles that are being rendered.\n     * @type {?}\n     */\n    MatGridList.prototype._tiles;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridListModule {\n}\nMatGridListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatGridListModule });\nMatGridListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatGridListModule_Factory(t) { return new (t || MatGridListModule)(); }, imports: [[MatLineModule, MatCommonModule],\n        MatLineModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatGridListModule, { declarations: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; }, imports: function () { return [MatLineModule, MatCommonModule]; }, exports: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatLineModule,\n        MatCommonModule,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, TileCoordinator as ɵTileCoordinator, MAT_GRID_LIST as ɵangular_material_src_material_grid_list_grid_list_a };\n\n//# sourceMappingURL=grid-list.js.map","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {FacilitySelectPageComponent} from './pages/facility-select-page/facility-select-page.component';\nimport {FacilityDetailPageComponent} from './pages/facility-detail-page/facility-detail-page.component';\nimport {FacilityOverviewComponent} from './pages/facility-detail-page/facility-overview/facility-overview.component';\nimport {FacilityResourcesComponent} from './pages/facility-detail-page/facility-resources/facility-resources.component';\nimport {FacilityAllowedGroupsComponent} from './pages/facility-detail-page/facility-allowed-groups/facility-allowed-groups.component';\nimport {ResourceDetailPageComponent} from './pages/resource-detail-page/resource-detail-page.component';\nimport {ResourceOverviewComponent} from './pages/resource-detail-page/resource-overview/resource-overview.component';\nimport {FacilitySettingsComponent} from './pages/facility-detail-page/facility-settings/facility-settings.component';\nimport {\n  FacilitySettingsOverviewComponent\n} from './pages/facility-detail-page/facility-settings/facility-settings-overview/facility-settings-overview.component';\nimport {\n  FacilitySettingsAttributesComponent\n} from './pages/facility-detail-page/facility-settings/facility-settings-attributes/facility-settings-attributes.component';\nimport {ResourceSettingsComponent} from './pages/resource-detail-page/resource-settings/resource-settings.component';\nimport {\n  ResourceSettingsOverviewComponent\n} from './pages/resource-detail-page/resource-settings/resource-settings-overview/resource-settings-overview.component';\nimport {\n  ResourceSettingsAttributesComponent\n} from './pages/resource-detail-page/resource-settings/resource-settings-attributes/resource-settings-attributes.component';\nimport { ResourceGroupsComponent } from './pages/resource-detail-page/resource-groups/resource-groups.component';\nimport { FacilityServiceConfigComponent } from './pages/facility-detail-page/facility-service-config/facility-service-config.component';\nimport { FacilitySettingsManagersComponent } from './pages/facility-detail-page/facility-settings/facility-settings-managers/facility-settings-managers.component';\nimport { FacilityServicesDestinationsComponent } from './pages/facility-detail-page/facility-services-destinations/facility-services-destinations.component';\nimport { FacilitySettingsOwnersComponent } from './pages/facility-detail-page/facility-settings/facility-settings-owners/facility-settings-owners.component';\nimport { FacilityHostsComponent } from './pages/facility-detail-page/facility-hosts/facility-hosts.component';\nimport { FacilitySettingsBlacklistComponent } from './pages/facility-detail-page/facility-settings/facility-settings-blacklist/facility-settings-blacklist.component';\nimport { FacilityHostsDetailComponent } from './pages/facility-detail-page/facility-hosts/facility-hosts-detail/facility-hosts-detail.component';\nimport { FacilitySecurityTeamsComponent } from './pages/facility-detail-page/facility-security-teams/facility-security-teams.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FacilitySelectPageComponent\n  },\n  {\n    path: ':facilityId',\n    component: FacilityDetailPageComponent,\n    children: [\n      {\n        path: '',\n        component: FacilityOverviewComponent,\n        data: {animation: 'FacilityOverviewPage'}\n      },\n      {\n        path: 'resources',\n        component: FacilityResourcesComponent,\n        data: {animation: 'FacilityResourcesPage'}\n      },\n      {\n        path: 'allowed-groups',\n        component: FacilityAllowedGroupsComponent,\n        data: {animation: 'FacilityAllowedGroupsPage'}\n      },\n      {\n        path: 'service-config',\n        component: FacilityServiceConfigComponent,\n        data: {animation: 'FacilityServiceConfigPage'}\n      },{\n        path: 'services-destinations',\n        component: FacilityServicesDestinationsComponent,\n        data: {animation: 'FacilityServicesDestinationsPage'}\n      },\n      {\n        path: 'hosts',\n        component: FacilityHostsComponent,\n        data: {animation: 'FacilityHostsPage'}\n      },\n      {\n        path: 'hosts/:hostId',\n        component: FacilityHostsDetailComponent,\n        data: {animation: 'FacilityHostsDetailPage'}\n      },\n      {\n        path: 'security-teams',\n        component: FacilitySecurityTeamsComponent,\n        data: {animation: 'FacilitySecurityTeamsPage'}\n      },\n      {\n        path: 'settings',\n        component: FacilitySettingsComponent,\n        children: [\n          {\n            path: '',\n            component: FacilitySettingsOverviewComponent,\n            data: {animation: 'FacilitySettingsOverviewPage'}\n          },\n          {\n            path: 'attributes',\n            component: FacilitySettingsAttributesComponent,\n            data: {animation: 'FacilitySettingsAttributesPage'}\n          },\n          {\n            path: 'owners',\n            component: FacilitySettingsOwnersComponent,\n            data: {animation: 'FacilitySettingOwnersPage'}\n          },\n          {\n            path: 'managers',\n            component: FacilitySettingsManagersComponent,\n            data: {animation: 'FacilitySettingsManagersPage'}\n          },\n          {\n            path: 'blacklist',\n            component: FacilitySettingsBlacklistComponent,\n            data: {animation: 'FacilitySettingsBlackListPage'}\n          }\n        ]\n      }\n    ]\n  },\n  {\n    path: ':facilityId/resources/:resourceId',\n    component: ResourceDetailPageComponent,\n    children: [\n      {\n        path: '',\n        component: ResourceOverviewComponent,\n        data: {animation: 'ResourceOverviewPage'}\n      },\n      {\n        path: 'groups',\n        component: ResourceGroupsComponent,\n        data: {animation: 'ResourceGroupsComponent'}\n      },\n      {\n        path: 'settings',\n        component: ResourceSettingsComponent,\n        children: [\n          {\n            path: '',\n            component: ResourceSettingsOverviewComponent,\n            data: {animation: 'ResourceSettingsOverviewPage'}\n          },\n          {\n            path: 'attributes',\n            component: ResourceSettingsAttributesComponent,\n            data: {animation: 'ResourceSettingsAttributesPage'}\n          }\n        ]\n      },\n    ]\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FacilitiesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FacilitiesRoutingModule } from './facilities-routing.module';\nimport { FacilitySelectPageComponent } from './pages/facility-select-page/facility-select-page.component';\nimport {SharedModule} from '../shared/shared.module';\nimport { FacilityDetailPageComponent } from './pages/facility-detail-page/facility-detail-page.component';\nimport { FacilityOverviewComponent } from './pages/facility-detail-page/facility-overview/facility-overview.component';\nimport { FacilityResourcesComponent } from './pages/facility-detail-page/facility-resources/facility-resources.component';\nimport {FacilityAllowedGroupsComponent} from './pages/facility-detail-page/facility-allowed-groups/facility-allowed-groups.component';\nimport { ResourceDetailPageComponent } from './pages/resource-detail-page/resource-detail-page.component';\nimport { ResourceOverviewComponent } from './pages/resource-detail-page/resource-overview/resource-overview.component';\nimport { FacilitySettingsComponent } from './pages/facility-detail-page/facility-settings/facility-settings.component';\nimport {\n  FacilitySettingsOverviewComponent\n} from './pages/facility-detail-page/facility-settings/facility-settings-overview/facility-settings-overview.component';\nimport {\n  FacilitySettingsAttributesComponent\n} from './pages/facility-detail-page/facility-settings/facility-settings-attributes/facility-settings-attributes.component';\nimport { ResourceSettingsComponent } from './pages/resource-detail-page/resource-settings/resource-settings.component';\nimport {\n  ResourceSettingsOverviewComponent\n} from './pages/resource-detail-page/resource-settings/resource-settings-overview/resource-settings-overview.component';\nimport {\n  ResourceSettingsAttributesComponent\n} from './pages/resource-detail-page/resource-settings/resource-settings-attributes/resource-settings-attributes.component';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { UiAlertsModule } from '@perun-web-apps/ui/alerts';\nimport { ResourceGroupsComponent } from './pages/resource-detail-page/resource-groups/resource-groups.component';\nimport { PerunSharedComponentsModule } from '@perun-web-apps/perun/components';\nimport { FacilityServiceConfigComponent } from './pages/facility-detail-page/facility-service-config/facility-service-config.component';\nimport { PerunFacilityServicesConfigModule } from '@perun-web-apps/perun/facility-services-config';\nimport { FacilitySettingsManagersComponent } from './pages/facility-detail-page/facility-settings/facility-settings-managers/facility-settings-managers.component';\nimport { FacilityServicesDestinationsComponent } from './pages/facility-detail-page/facility-services-destinations/facility-services-destinations.component';\nimport { FacilitySettingsOwnersComponent } from './pages/facility-detail-page/facility-settings/facility-settings-owners/facility-settings-owners.component';\nimport { FacilityHostsComponent } from './pages/facility-detail-page/facility-hosts/facility-hosts.component';\nimport { FacilitySettingsBlacklistComponent } from './pages/facility-detail-page/facility-settings/facility-settings-blacklist/facility-settings-blacklist.component';\nimport { FacilityHostsDetailComponent } from './pages/facility-detail-page/facility-hosts/facility-hosts-detail/facility-hosts-detail.component';\nimport { FacilitySecurityTeamsComponent } from './pages/facility-detail-page/facility-security-teams/facility-security-teams.component';\nimport { PerunPipesModule, UserFullNamePipe } from '@perun-web-apps/perun/pipes';\n\n@NgModule({\n  declarations: [\n    FacilitySelectPageComponent,\n    FacilityDetailPageComponent,\n    FacilityOverviewComponent,\n    FacilityResourcesComponent,\n    FacilityAllowedGroupsComponent,\n    ResourceDetailPageComponent,\n    ResourceOverviewComponent,\n    FacilitySettingsComponent,\n    FacilitySettingsOverviewComponent,\n    FacilitySettingsAttributesComponent,\n    ResourceSettingsComponent,\n    ResourceSettingsOverviewComponent,\n    ResourceSettingsAttributesComponent,\n    ResourceGroupsComponent,\n    FacilityServiceConfigComponent,\n    FacilitySettingsManagersComponent,\n    FacilityServicesDestinationsComponent,\n    FacilitySettingsOwnersComponent,\n    FacilityHostsComponent,\n    FacilitySettingsBlacklistComponent,\n    FacilityHostsDetailComponent,\n    FacilitySecurityTeamsComponent\n  ],\n  imports: [\n    CommonModule,\n    FacilitiesRoutingModule,\n    MatTableExporterModule,\n    SharedModule,\n    UiAlertsModule,\n    PerunSharedComponentsModule,\n    PerunFacilityServicesConfigModule,\n    PerunPipesModule\n  ],\n  providers: [\n    UserFullNamePipe\n  ]\n})\nexport class FacilitiesModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { fadeIn } from '@perun-web-apps/perun/animations';\nimport { SideMenuService } from '../../../core/services/common/side-menu.service';\nimport { SideMenuItemService } from '../../../shared/side-menu/side-menu-item.service';\nimport { FacilitiesManagerService, Facility } from '@perun-web-apps/perun/openapi';\nimport { addRecentlyVisited } from '@perun-web-apps/perun/utils';\n\n@Component({\n  selector: 'app-facility-detail-page',\n  templateUrl: './facility-detail-page.component.html',\n  styleUrls: ['./facility-detail-page.component.scss'],\n  animations: [\n    fadeIn\n  ]\n})\nexport class FacilityDetailPageComponent implements OnInit {\n\n  constructor(\n    private facilityManager: FacilitiesManagerService,\n    private route: ActivatedRoute,\n    private sideMenuService: SideMenuService,\n    private sideMenuItemService: SideMenuItemService\n  ) { }\n\n  facility: Facility;\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const facilityId = params['facilityId'];\n\n      this.facilityManager.getFacilityById(facilityId).subscribe(facility => {\n        this.facility = facility;\n        const facilityItem = this.sideMenuItemService.parseFacility(facility);\n\n        this.sideMenuService.setFacilityMenuItems([facilityItem]);\n\n        addRecentlyVisited('facilities', this.facility);\n      });\n    });\n  }\n}\n","<div class=\"container-fluid pl-xl-5 pr-xl-5 facility-theme\" *ngIf=\"facility !== undefined\">\n  <perun-web-apps-back-button>\n  </perun-web-apps-back-button>\n  <h1 class=\"page-title\">\n    {{'FACILITY_DETAIL.TITLE' | translate}}\n    <a class=\"facility-link\" [routerLink]=\"['/facilities', facility.id]\">{{facility.name}}</a>\n    <span class=\"text-muted\">\n      &nbsp;#{{facility.id}}\n    </span>\n  </h1>\n  <app-animated-router-outlet></app-animated-router-outlet>\n</div>\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Attribute, AttributesManagerService, FacilitiesManagerService, Host } from '@perun-web-apps/perun/openapi';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TABLE_ATTRIBUTES_SETTINGS, TableConfigService } from '@perun-web-apps/config/table-config';\nimport { ActivatedRoute } from '@angular/router';\nimport { PageEvent } from '@angular/material/paginator';\nimport { filterCoreAttributes, getDefaultDialogConfig } from '@perun-web-apps/perun/utils';\nimport { AttributesListComponent, EditAttributeDialogComponent } from '@perun-web-apps/perun/components';\nimport { DeleteAttributeDialogComponent } from '../../../../../shared/components/dialogs/delete-attribute-dialog/delete-attribute-dialog.component';\nimport { CreateAttributeDialogComponent } from '../../../../../shared/components/dialogs/create-attribute-dialog/create-attribute-dialog.component';\n\n@Component({\n  selector: 'app-facility-hosts-detail',\n  templateUrl: './facility-hosts-detail.component.html',\n  styleUrls: ['./facility-hosts-detail.component.scss']\n})\nexport class FacilityHostsDetailComponent implements OnInit {\n\n  constructor(private dialog: MatDialog,\n              private attributesManager: AttributesManagerService,\n              private facilityManager: FacilitiesManagerService,\n              private tableConfigService: TableConfigService,\n              private route: ActivatedRoute) {\n  }\n\n  @ViewChild('list')\n  list: AttributesListComponent;\n\n  attributes: Attribute[] = [];\n  selected = new SelectionModel<Attribute>(true, []);\n  hostId: number;\n  host: Host = { beanName: '', id: 0 };\n  loading: boolean;\n  tableId = TABLE_ATTRIBUTES_SETTINGS;\n  pageSize: number;\n\n  ngOnInit(): void {\n    this.pageSize = this.tableConfigService.getTablePageSize(this.tableId);\n    this.route.params.subscribe(params => {\n      this.hostId = params['hostId'];\n      this.facilityManager.getHostById(this.hostId).subscribe(host => {\n        this.host = host;\n      });\n      this.refreshTable();\n    });\n  }\n\n  refreshTable(){\n    this.loading = true;\n    this.attributesManager.getHostAttributes(this.hostId).subscribe(attributes => {\n      this.attributes = filterCoreAttributes(attributes);\n      this.selected.clear();\n      this.loading = false;\n    });\n  }\n\n  onSave() {\n    this.list.updateMapAttributes();\n\n    const config = getDefaultDialogConfig();\n    config.width = '450px';\n    config.data = {\n      entityId: this.hostId,\n      entity: 'host',\n      attributes: this.selected.selected\n    };\n\n    const dialogRef = this.dialog.open(EditAttributeDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  addAttribute(){\n    const config = getDefaultDialogConfig();\n    config.width = '1050px';\n    config.data = {\n      entityId: this.hostId,\n      entity: 'host',\n      notEmptyAttributes: this.attributes,\n      style: 'facility-theme'\n    };\n\n    const dialogRef = this.dialog.open(CreateAttributeDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'saved') {\n        this.refreshTable();\n      }\n    });\n  }\n\n  removeAttribute(){\n    const config = getDefaultDialogConfig();\n    config.width = '450px';\n    config.data = {\n      entityId: this.hostId,\n      entity: 'host',\n      attributes: this.selected.selected\n    };\n\n    const dialogRef = this.dialog.open(DeleteAttributeDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  pageChanged(event: PageEvent) {\n    this.pageSize = event.pageSize;\n    this.tableConfigService.setTablePageSize(this.tableId, event.pageSize);\n  }\n\n}\n","<div>\n  <h1 class=\"page-subtitle\">\n    {{'FACILITY_DETAIL.HOSTS.HOSTS_DETAIL.TITLE' | translate}} {{host.hostname}}</h1>\n  <perun-web-apps-refresh-button (refresh)=\"refreshTable()\"></perun-web-apps-refresh-button>\n  <button mat-flat-button class=\"mr-2\" color=\"accent\" (click)=\"addAttribute()\">\n    {{'FACILITY_DETAIL.HOSTS.HOSTS_DETAIL.ADD' | translate}}\n  </button>\n  <button mat-flat-button class=\"mr-2\" color=\"accent\" (click)=\"onSave()\" [disabled]=\"selected.selected.length === 0\">\n    {{'FACILITY_DETAIL.HOSTS.HOSTS_DETAIL.SAVE' | translate}}\n  </button>\n  <button mat-flat-button color=\"warn\" class=\"ml-2\"  [disabled]=\"selected.selected.length === 0\" (click)=\"removeAttribute()\">\n    {{'FACILITY_DETAIL.HOSTS.HOSTS_DETAIL.REMOVE' | translate}}\n  </button>\n  <perun-web-apps-attributes-list\n    (page)=\"pageChanged($event)\"\n    [pageSize]=\"pageSize\"\n    #list\n    *ngIf=\"!loading\"\n    [attributes]=\"attributes\"\n    [selection]=\"selected\">\n  </perun-web-apps-attributes-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FacilitiesManagerService, Facility, Host } from '@perun-web-apps/perun/openapi';\nimport {\n  TABLE_FACILITY_HOSTS_LIST,\n  TableConfigService\n} from '@perun-web-apps/config/table-config';\nimport { ActivatedRoute } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { PageEvent } from '@angular/material/paginator';\nimport { getDefaultDialogConfig } from '@perun-web-apps/perun/utils';\nimport { AddHostDialogComponent } from '../../../../shared/components/dialogs/add-host-dialog/add-host-dialog.component';\nimport { RemoveHostDialogComponent } from '../../../../shared/components/dialogs/remove-host-dialog/remove-host-dialog.component';\n\n@Component({\n  selector: 'app-facility-hosts',\n  templateUrl: './facility-hosts.component.html',\n  styleUrls: ['./facility-hosts.component.scss']\n})\n\nexport class FacilityHostsComponent implements OnInit {\n\n  constructor(private dialog: MatDialog,\n              private facilitiesManager: FacilitiesManagerService,\n              private tableConfigService: TableConfigService,\n              private route: ActivatedRoute) {\n\n  }\n\n  facility: Facility;\n  facilityId: number\n  hosts: Host[] = [];\n  selected = new SelectionModel<Host>(true, []);\n  loading: boolean;\n  filterValue = '';\n  pageSize: number;\n  tableId = TABLE_FACILITY_HOSTS_LIST;\n\n  ngOnInit(): void {\n    this.pageSize = this.tableConfigService.getTablePageSize(this.tableId);\n    this.route.parent.params.subscribe(parentParams => {\n      this.facilityId = parentParams['facilityId'];\n      this.facilitiesManager.getFacilityById(this.facilityId).subscribe(facility => {\n        this.facility = facility;\n        this.refreshTable();\n      });\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.facilitiesManager.getHosts(this.facilityId).subscribe(hosts => {\n      this.hosts = hosts;\n      this.selected.clear();\n      this.loading = false;\n    });\n  }\n\n  addHost() {\n    const config = getDefaultDialogConfig();\n    config.width = '600px';\n    config.data = {\n      facilityId: this.facility.id,\n      facilityName: this.facility.name,\n      theme: 'facility-theme'\n    };\n\n    const dialogRef = this.dialog.open(AddHostDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable()\n      }\n    });\n  }\n\n  removeHost() {\n    const config = getDefaultDialogConfig();\n    config.width = '600px';\n    config.data = {\n      facilityId: this.facility.id,\n      theme: 'facility-theme',\n      hosts: this.selected.selected\n    };\n\n    const dialogRef = this.dialog.open(RemoveHostDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable()\n      }\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n\n  pageChanged(event: PageEvent) {\n    this.pageSize = event.pageSize;\n    this.tableConfigService.setTablePageSize(this.tableId, event.pageSize);\n  }\n\n}\n","<div>\n  <h1 class=\"page-subtitle\">{{'FACILITY_DETAIL.HOSTS.TITLE' | translate}}</h1>\n  <perun-web-apps-refresh-button (refresh)=\"refreshTable()\"></perun-web-apps-refresh-button>\n  <button mat-flat-button color=\"accent\" (click)=\"addHost()\">\n    {{'FACILITY_DETAIL.HOSTS.ADD' | translate}}\n  </button>\n  <button mat-flat-button color=\"warn\" class=\"ml-2\"  [disabled]=\"selected.selected.length === 0\" (click)=\"removeHost()\">\n    {{'FACILITY_DETAIL.HOSTS.REMOVE' | translate}}\n  </button>\n  <perun-web-apps-immediate-filter\n    [placeholder]=\"'FACILITY_DETAIL.HOSTS.FILTER'\"\n    (filter)=\"applyFilter($event)\"></perun-web-apps-immediate-filter>\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n  <app-hosts-list\n    [pageSize]=\"pageSize\"\n    (page)=\"pageChanged($event)\"\n    *ngIf=\"!loading\"\n    [filterValue]=\"filterValue\"\n    [hosts]=\"hosts\"\n    [selection]=\"selected\"\n    [facilityId]=\"facilityId\">\n  </app-hosts-list>\n</div>\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MenuItem } from '@perun-web-apps/perun/models';\nimport { FacilitiesManagerService, Facility } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-facility-overview',\n  templateUrl: './facility-overview.component.html',\n  styleUrls: ['./facility-overview.component.scss']\n})\nexport class FacilityOverviewComponent implements OnInit {\n\n  // class used for animation\n  @HostBinding('class.router-component') true;\n  navItems: MenuItem[] = [];\n  facility: Facility;\n\n  constructor(\n    private facilityManager: FacilitiesManagerService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const facilityId = params['facilityId'];\n\n      this.facilityManager.getFacilityById(facilityId).subscribe(facility => {\n        this.facility = facility;\n\n        this.initItems();\n      });\n    });\n  }\n\n  private initItems() {\n    this.navItems = [\n      {\n        cssIcon: 'perun-manage-facility',\n        url: `/facilities/${this.facility.id}/resources`,\n        label: 'MENU_ITEMS.FACILITY.RESOURCES',\n        style: 'facility-btn'\n      },\n      {\n        cssIcon: 'perun-group',\n        url: `/facilities/${this.facility.id}/allowed-groups`,\n        label: 'MENU_ITEMS.FACILITY.ALLOWED_GROUPS',\n        style: 'facility-btn'\n      },\n      {\n        cssIcon: 'perun-settings2',\n        url: `/facilities/${this.facility.id}/service-config`,\n        label: 'MENU_ITEMS.FACILITY.SERVICE_CONFIG',\n        style: 'facility-btn'\n      },\n      {\n        cssIcon: 'perun-service_destination',\n        url: `/facilities/${this.facility.id}/services-destinations`,\n        label: 'MENU_ITEMS.FACILITY.SERVICES_DESTINATIONS',\n        style: 'facility-btn'\n      },\n      {\n        cssIcon: 'perun-hosts',\n        url: `/facilities/${this.facility.id}/hosts`,\n        label: 'MENU_ITEMS.FACILITY.HOSTS',\n        style: 'facility-btn'\n      },\n      {\n        cssIcon: 'perun-security-teams',\n        url: `/facilities/${this.facility.id}/security-teams`,\n        label: 'MENU_ITEMS.FACILITY.SECURITY_TEAMS',\n        style: 'facility-btn'\n      },\n      {\n        cssIcon: 'perun-settings2',\n        url: `/facilities/${this.facility.id}/settings`,\n        label: 'MENU_ITEMS.FACILITY.SETTINGS',\n        style: 'facility-btn'\n      }\n    ];\n  }\n}\n","<div>\n  <perun-web-apps-menu-buttons-field [items]=\"navItems\" [size]=\"'small'\"></perun-web-apps-menu-buttons-field>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FacilitiesManagerService, Facility, SecurityTeam } from '@perun-web-apps/perun/openapi';\nimport {\n  TABLE_FACILITY_SECURITY_TEAMS_LIST,\n  TableConfigService\n} from '@perun-web-apps/config/table-config';\nimport { ActivatedRoute } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-facility-security-teams',\n  templateUrl: './facility-security-teams.component.html',\n  styleUrls: ['./facility-security-teams.component.scss']\n})\nexport class FacilitySecurityTeamsComponent implements OnInit {\n\n  constructor(private dialog: MatDialog,\n              private facilitiesManager: FacilitiesManagerService,\n              private tableConfigService: TableConfigService,\n              private route: ActivatedRoute) { }\n\n  facility: Facility;\n  securityTeams: SecurityTeam[]= []\n  selected = new SelectionModel<SecurityTeam>(true, []);\n\n  filterValue = '';\n\n  loading: boolean;\n  pageSize: number;\n  tableId = TABLE_FACILITY_SECURITY_TEAMS_LIST;\n\n\n  ngOnInit() {\n    this.pageSize = this.tableConfigService.getTablePageSize(this.tableId);\n\n    this.route.parent.params.subscribe(parentParams => {\n      const facilityId = parentParams['facilityId'];\n\n      this.facilitiesManager.getFacilityById(facilityId).subscribe(facility => {\n        this.facility = facility;\n\n        this.refreshTable();\n      });\n    });\n  }\n\n  refreshTable(){\n    this.loading = true;\n    this.facilitiesManager.getAssignedSecurityTeams(this.facility.id).subscribe(securityTeams => {\n      this.securityTeams = securityTeams;\n      this.selected.clear();\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n\n  addSecurityTeam(){\n    //TODO\n  }\n\n  removeSecurityTeam(){\n    //TODO\n  }\n\n  pageChanged(event: PageEvent) {\n    this.pageSize = event.pageSize;\n    this.tableConfigService.setTablePageSize(this.tableId, event.pageSize);\n  }\n}\n\n\n\n","<div>\n  <h1 class=\"page-subtitle\">{{'FACILITY_DETAIL.SECURITY_TEAMS.TITLE' | translate}}</h1>\n  <perun-web-apps-refresh-button (refresh)=\"refreshTable()\"></perun-web-apps-refresh-button>\n<!--  <button mat-flat-button color=\"accent\" (click)=\"addSecurityTeam()\">-->\n<!--    {{'FACILITY_DETAIL.SECURITY_TEAMS.ADD'| translate}}-->\n<!--  </button>-->\n<!--  <button mat-flat-button color=\"warn\" class=\"ml-2\"  [disabled]=\"selected.selected.length === 0\" (click)=\"removeSecurityTeam()\">-->\n<!--    {{'FACILITY_DETAIL.SECURITY_TEAMS.REMOVE'| translate}}-->\n<!--  </button>-->\n  <perun-web-apps-immediate-filter\n    [placeholder]=\"'FACILITY_DETAIL.SECURITY_TEAMS.FILTER'\"\n    (filter)=\"applyFilter($event)\"></perun-web-apps-immediate-filter>\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n  <app-security-teams-list\n    [pageSize]=\"pageSize\"\n    (page)=\"pageChanged($event)\"\n    *ngIf=\"!loading\"\n    [filterValue]=\"filterValue\"\n    [securityTeams]=\"securityTeams\"\n    [selection]=\"selected\">\n  </app-security-teams-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  FacilitiesManagerService,\n  Facility,\n  Group,\n  Resource,\n  ResourcesManagerService, RichMember, Service, ServicesManagerService, Vo\n} from '@perun-web-apps/perun/openapi';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { MembersService } from '@perun-web-apps/perun/services';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { UserFullNamePipe } from '@perun-web-apps/perun/pipes';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport type ServiceSelectValue = 'ALL' | 'NOT_SELECTED';\n\n@Component({\n  selector: 'app-facility-service-config',\n  templateUrl: './facility-service-config.component.html',\n  styleUrls: ['./facility-service-config.component.scss']\n})\nexport class FacilityServiceConfigComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private facilityManager: FacilitiesManagerService,\n    private resourceManager: ResourcesManagerService,\n    private serviceManager: ServicesManagerService,\n    private membersManager: MembersService,\n    private namePipe: UserFullNamePipe,\n    private translate: TranslateService\n  ) {\n    this.translate.get('FACILITY_DETAIL.SERVICE_CONFIG.ALL').subscribe(value => this.serviceAllTranslation = value);\n    this.translate.get('FACILITY_DETAIL.SERVICE_CONFIG.NOT_SELECTED').subscribe(value => this.serviceNotSelectedTranslation = value);\n  }\n\n  facility: Facility;\n  serviceId: number;\n\n  services: Service[];\n  resources: Resource[];\n  groups: Group[];\n  vos: Vo[];\n  members: RichMember[];\n\n  selectedService: Service | ServiceSelectValue = 'NOT_SELECTED';\n  selectedResource: Resource;\n  selectedGroup: Group;\n  selectedVo: Vo;\n  selectedMember: RichMember;\n\n  private attrNames = [];\n\n  serviceField = new FormControl();\n  resourceField = new FormControl();\n  groupField = new FormControl();\n  memberField = new FormControl();\n\n  filteredServices: Observable<Service[] | ServiceSelectValue[]>;\n  filteredResources: Observable<Resource[]>;\n  filteredGroups: Observable<Group[]>;\n  filteredMembers: Observable<RichMember[]>;\n\n  serviceAllTranslation: String;\n  serviceNotSelectedTranslation: String;\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(parentParams => {\n      const facilityId = parentParams['facilityId'];\n\n      this.facilityManager.getFacilityById(facilityId).subscribe(facility => {\n        this.facility = facility;\n\n        this.facilityManager.getAssignedResourcesForFacility(facility.id)\n          .subscribe(resources => this.resources = resources);\n\n        this.serviceManager.getAssignedServices(facility.id).subscribe(services => this.services = services);\n      });\n    });\n    this.filteredServices = this.serviceField.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filterServices(value))\n      );\n    this.filteredResources = this.resourceField.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filterResources(value))\n      );\n    this.filteredGroups = this.groupField.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filterGroups(value))\n      );\n    this.filteredMembers = this.memberField.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filterMembers(value))\n      );\n  }\n\n  onSelectedService(s: Service | ServiceSelectValue) {\n    this.selectedService = s;\n  }\n\n  onSelectedResource(r: Resource) {\n    this.selectedResource = r;\n    if (this.selectedResource !== undefined) {\n      this.resourceManager.getAssignedGroups(this.selectedResource.id).subscribe(groups => this.groups = groups);\n      this.selectedGroup = undefined;\n      this.selectedMember = undefined;\n    } else {\n      this.groups = undefined;\n    }\n  }\n\n  onOfferAllServices(event: MatCheckboxChange) {\n    if (!event.checked) {\n      this.serviceManager.getAssignedServices(this.facility.id).subscribe(services => this.services = services);\n    }\n  }\n\n  onSelectedGroup(g: Group) {\n    this.selectedGroup = g;\n    if (this.selectedGroup !== undefined) {\n      this.membersManager.getCompleteRichMembersForGroup(this.selectedGroup.id, this.attrNames).subscribe(members => this.members = members);\n      this.selectedMember = undefined;\n    } else {\n      this.members = undefined;\n    }\n  }\n\n  onSelectedMember(m: RichMember) {\n    this.selectedMember = m;\n  }\n\n  private _filterServices(value: String): Service[] | ServiceSelectValue[] {\n    const filterValue = value.toString().toLowerCase();\n\n    return this.services.filter(service => service.name.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').includes(filterValue));\n  }\n\n  private _filterResources(value: String): Resource[] {\n    const filterValue = value.toString().toLowerCase();\n\n    return this.resources.filter(resource => resource.name.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').includes(filterValue));\n  }\n\n  private _filterGroups(value: String): Group[] {\n    const filterValue = value.toString().toLowerCase();\n\n    return this.groups.filter(group => group.name.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').includes(filterValue));\n  }\n\n  private _filterMembers(value: String): RichMember[] {\n    const filterValue = value.toString().toLowerCase();\n    return this.members.filter(member => this.namePipe.transform(member.user).toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').includes(filterValue));\n  }\n\n  serviceDisplayFn(service) {\n    if (service !== null) {\n      if (service === 'ALL') {\n        return this.serviceAllTranslation;\n      }\n      if (service === 'NOT_SELECTED') {\n        return this.serviceNotSelectedTranslation;\n      }\n      return service.name;\n    }\n  }\n\n  resourceDisplayFn(resource) {\n    if (resource !== null) {\n      return resource.name;\n    }\n  }\n\n  groupDisplayFn(group) {\n    if (group !== null) {\n      return group.name;\n    }\n  }\n\n  memberDisplayFn(member) {\n    if (member !== null) {\n      return this.namePipe.transform(member.user);\n    }\n  }\n\n  updatedSerVal(e) {\n    if (e.target.value === '') {\n      this.selectedService = \"NOT_SELECTED\";\n    }\n  }\n\n  updatedResVal(e) {\n    if (e.target.value === '') {\n      this.groups = undefined;\n      this.members = undefined;\n    }\n  }\n\n  updatedGroupVal(e) {\n    if (e.target.value === '') {\n      this.members = undefined;\n    }\n  }\n\n\n  updatedMemVal(e) {\n    if (e.target.value === '') {\n    }\n  }\n}\n","<div>\n  <h1 class=\"page-subtitle\">{{'FACILITY_DETAIL.SERVICE_CONFIG.TITLE' | translate}}</h1>\n  <div class=\"col-12 col-lg-6 mb-2\" *ngIf=\"!!facility\">\n    <mat-form-field *ngIf=\"(services !== undefined)\" class=\"w-100\">\n      <input type=\"text\"\n             placeholder=\"{{'FACILITY_DETAIL.SERVICE_CONFIG.SERVICE_SELECT' | translate}}\"\n             matInput\n             [formControl]=\"serviceField\"\n             [matAutocomplete]=\"auto\"\n             (keyup)=\"updatedSerVal($event)\">\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"serviceDisplayFn.bind(this)\">\n        <mat-option [value]=\"'NOT_SELECTED'\" (onSelectionChange)=\"onSelectedService('NOT_SELECTED')\">\n          {{'FACILITY_DETAIL.SERVICE_CONFIG.NOT_SELECTED' | translate}}\n        </mat-option>\n        <mat-option [value]=\"'ALL'\" (onSelectionChange)=\"onSelectedService('ALL')\">\n          {{'FACILITY_DETAIL.SERVICE_CONFIG.ALL' | translate}}\n        </mat-option>\n        <mat-option *ngFor=\"let s of filteredServices | async\" [value]=\"s\" (onSelectionChange)=\"onSelectedService(s)\">\n          {{s.name}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    <mat-checkbox (change)=\"onOfferAllServices($event)\">\n      {{'FACILITY_DETAIL.SERVICE_CONFIG.ALL_SERVICES' | translate}}\n    </mat-checkbox>\n    <mat-form-field *ngIf=\"(resources !== undefined) && (resources.length != 0)\" class=\"w-100\">\n      <input type=\"text\"\n             placeholder=\"{{'FACILITY_DETAIL.SERVICE_CONFIG.RES_SELECT' | translate}}\"\n             matInput\n             [matAutocomplete]=\"auto\"\n             [formControl]=\"resourceField\"\n             (keyup)=\"updatedResVal($event)\">\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"resourceDisplayFn.bind(this)\">\n        <mat-option *ngFor=\"let r of filteredResources | async\" [value]=\"r\" (onSelectionChange)=\"onSelectedResource(r)\">\n          {{r.name}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    <mat-form-field *ngIf=\"(selectedResource !== undefined) && (groups !== undefined) && (groups.length != 0)\"\n                    class=\"w-100\">\n      <input type=\"text\"\n             placeholder=\"{{'FACILITY_DETAIL.SERVICE_CONFIG.GROUP_SELECT' | translate}}\"\n             matInput\n             [matAutocomplete]=\"auto\"\n             [formControl]=\"groupField\"\n             (keyup)=\"updatedGroupVal($event)\">\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [ngClass]=\"\" [displayWith]=\"groupDisplayFn.bind(this)\">\n        <mat-option *ngFor=\"let g of filteredGroups | async\" [value]=\"g\" (onSelectionChange)=\"onSelectedGroup(g)\">\n          {{g.name}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    <!--    <mat-form-field class=\"w-100\">-->\n    <!--      <mat-label>{{'FACILITY_DETAIL.SERVICE_CONFIG.VO_SELECT' | translate}}</mat-label>-->\n    <!--      <mat-select [(value)]=\"voId\" [disabled]=\"selectedResource === undefined\">-->\n    <!--        <mat-option [value]=\"-1\" *ngIf=\"!!vos\">-->\n    <!--          {{'FACILITY_DETAIL.SERVICE_CONFIG.VO_SELECT_DEFAULT' | translate}}-->\n    <!--        </mat-option>-->\n    <!--      </mat-select>-->\n    <!--    </mat-form-field>-->\n    <mat-form-field *ngIf=\"(selectedGroup !== undefined) && (members !== undefined) && (members.length !== 0)\"\n                    class=\"w-100\">\n      <input type=\"text\"\n             placeholder=\"{{'FACILITY_DETAIL.SERVICE_CONFIG.MEMBER_SELECT' | translate}}\"\n             matInput\n             [formControl]=\"memberField\"\n             [matAutocomplete]=\"auto\">\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"memberDisplayFn.bind(this)\">\n        <mat-option *ngFor=\"let m of filteredMembers | async\" [value]=\"m\" (onSelectionChange)=\"onSelectedMember(m)\">\n          {{m.user | userFullName}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </div>\n  <perun-web-apps-service-configurator\n    *ngIf=\"!!facility\"\n    [facility]=\"facility\"\n    [resource]=\"selectedResource\"\n    [group]=\"selectedGroup\"\n    [service]=\"selectedService\"\n    [member]=\"selectedMember\">\n  </perun-web-apps-service-configurator>\n</div>\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  FacilitiesManagerService,\n  Facility, RichDestination,\n  RichResource,\n  ServicesManagerService\n} from '@perun-web-apps/perun/openapi';\nimport {\n  TABLE_FACILITY_SERVICES_DESTINATION_LIST,\n  TableConfigService\n} from '@perun-web-apps/config/table-config';\nimport { ActivatedRoute } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { PageEvent } from '@angular/material/paginator';\nimport { RemoveDestinationDialogComponent } from '../../../../shared/components/dialogs/remove-destination-dialog/remove-destination-dialog.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificatorService } from '@perun-web-apps/perun/services';\nimport { AddServicesDestinationDialogComponent } from '../../../../shared/components/dialogs/add-services-destination-dialog/add-services-destination-dialog.component';\nimport { getDefaultDialogConfig } from '@perun-web-apps/perun/utils';\n\n@Component({\n  selector: 'app-perun-web-apps-facility-services-destinations',\n  templateUrl: './facility-services-destinations.component.html',\n  styleUrls: ['./facility-services-destinations.component.scss']\n})\nexport class FacilityServicesDestinationsComponent implements OnInit {\n\n  static id = 'FacilityServicesDestinationsComponent';\n\n  // class used for animation\n  @HostBinding('class.router-component') true;\n\n  constructor(private dialog: MatDialog,\n              private facilitiesManager: FacilitiesManagerService,\n              private servicesManager: ServicesManagerService,\n              private tableConfigService: TableConfigService,\n              private translate: TranslateService,\n              private notificator: NotificatorService,\n              private route: ActivatedRoute) { }\n\n  facility: Facility;\n  destinations: RichDestination[];\n  selected = new SelectionModel<RichResource>(true, []);\n  displayedColumns: string[] = ['select', 'destinationId', 'service', 'destination', 'type', 'propagationType'];\n\n  filterValue = '';\n\n  loading: boolean;\n  pageSize: number;\n  tableId = TABLE_FACILITY_SERVICES_DESTINATION_LIST;\n\n  ngOnInit() {\n\n    this.pageSize = this.tableConfigService.getTablePageSize(this.tableId);\n    this.loading = true;\n    this.route.parent.params.subscribe(parentParams => {\n      const facilityId = parentParams['facilityId'];\n\n      this.facilitiesManager.getFacilityById(facilityId).subscribe(facility => {\n        this.facility = facility;\n\n        this.refreshTable();\n      });\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.servicesManager.getAllRichDestinationsForFacility(this.facility.id).subscribe( destinations => {\n      this.destinations = destinations;\n      this.selected.clear();\n      this.loading = false;\n    });\n  }\n\n  addDestination() {\n    const config = getDefaultDialogConfig();\n    config.width = '600px';\n    config.data = {facility: this.facility, theme: 'facility-theme'};\n\n    const dialogRef = this.dialog.open(AddServicesDestinationDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.translate.get('FACILITY_DETAIL.SERVICES_DESTINATIONS.ADD_SUCCESS').subscribe(successMessage => {\n          this.refreshTable();\n          this.notificator.showSuccess(successMessage);\n        });\n      }\n    });\n  }\n\n  removeDestination() {\n    const config = getDefaultDialogConfig();\n    config.width = '600px';\n    config.data = {destinations: this.selected.selected, theme: 'facility-theme'};\n\n    const dialogRef = this.dialog.open(RemoveDestinationDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loading = true;\n        this.deleteDestinations(this.selected.selected);\n      }\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n\n  pageChanged(event: PageEvent) {\n    console.log(event.pageSize);\n    this.pageSize = event.pageSize;\n    this.tableConfigService.setTablePageSize(this.tableId, event.pageSize);\n  }\n\n  deleteDestinations(destinationsForDelete: RichDestination[]) {\n    if (destinationsForDelete.length === 0) {\n      this.translate.get('FACILITY_DETAIL.SERVICES_DESTINATIONS.REMOVE_SUCCESS').subscribe(successMessage => {\n        this.refreshTable();\n        this.notificator.showSuccess(successMessage);\n      });\n    } else {\n      const destination = destinationsForDelete[0];\n      this.servicesManager.removeDestination(destination.service.id,\n                                            destination.facility.id,\n                                            destination.destination,\n                                            destination.type).subscribe( () => {\n        destinationsForDelete.shift();\n        this.deleteDestinations(destinationsForDelete);\n      });\n    }\n  }\n}\n","<div>\n  <h1 class=\"page-subtitle\">{{'FACILITY_DETAIL.SERVICES_DESTINATIONS.TITLE' | translate}}</h1>\n  <perun-web-apps-refresh-button (refresh)=\"refreshTable()\"></perun-web-apps-refresh-button>\n  <button mat-flat-button color=\"accent\" (click)=\"addDestination()\">\n    {{'FACILITY_DETAIL.SERVICES_DESTINATIONS.ADD' | translate}}\n  </button>\n  <button mat-flat-button color=\"warn\" class=\"ml-2\" [disabled]=\"selected.selected.length === 0\"  (click)=\"removeDestination()\">\n    {{'FACILITY_DETAIL.SERVICES_DESTINATIONS.REMOVE' | translate}}\n  </button>\n  <perun-web-apps-immediate-filter\n    [placeholder]=\"'FACILITY_DETAIL.SERVICES_DESTINATIONS.FILTER'\"\n    (filter)=\"applyFilter($event)\"></perun-web-apps-immediate-filter>\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n  <app-perun-web-apps-destination-list\n    [pageSize]=\"pageSize\"\n    (page)=\"pageChanged($event)\"\n    *ngIf=\"!loading\"\n    [filterValue]=\"filterValue\"\n    [destinations]=\"destinations\"\n    [selection]=\"selected\"\n    [displayedColumns]=\"displayedColumns\">\n  </app-perun-web-apps-destination-list>\n</div>\n","import {Component, HostBinding, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport {NotificatorService} from '@perun-web-apps/perun/services';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AttributesListComponent} from '@perun-web-apps/perun/components';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {\n  DeleteAttributeDialogComponent\n} from '../../../../../shared/components/dialogs/delete-attribute-dialog/delete-attribute-dialog.component';\nimport {\n  CreateAttributeDialogComponent\n} from '../../../../../shared/components/dialogs/create-attribute-dialog/create-attribute-dialog.component';\nimport { getDefaultDialogConfig } from '@perun-web-apps/perun/utils';\nimport { Attribute, AttributesManagerService } from '@perun-web-apps/perun/openapi';\nimport { EditAttributeDialogComponent } from '@perun-web-apps/perun/components';\nimport { PageEvent } from '@angular/material/paginator';\nimport {\n  TABLE_ATTRIBUTES_SETTINGS,\n  TableConfigService\n} from '@perun-web-apps/config/table-config';\n\n@Component({\n  selector: 'app-facility-settings-attributes',\n  templateUrl: './facility-settings-attributes.component.html',\n  styleUrls: ['./facility-settings-attributes.component.scss']\n})\nexport class FacilitySettingsAttributesComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor(private attributesManager: AttributesManagerService,\n              private route: ActivatedRoute,\n              private dialog: MatDialog,\n              private notificator: NotificatorService,\n              private tableConfigService: TableConfigService,\n              private translate: TranslateService) {\n    this.translate.get('FACILITY_DETAIL.SETTINGS.ATTRIBUTES.SUCCESS_SAVE').subscribe(value => this.saveSuccessMessage = value);\n    this.translate.get('FACILITY_DETAIL.SETTINGS.ATTRIBUTES.SUCCESS_DELETE').subscribe(value => this.deleteSuccessMessage = value);\n  }\n\n  @ViewChild('list')\n  list: AttributesListComponent;\n\n  attributes: Attribute[] = [];\n  selection = new SelectionModel<Attribute>(true, []);\n  facilityId: number;\n  saveSuccessMessage: string;\n  deleteSuccessMessage: string;\n\n  loading: boolean;\n  filterValue = '';\n  pageSize: number;\n  tableId = TABLE_ATTRIBUTES_SETTINGS;\n\n  ngOnInit() {\n    this.pageSize = this.tableConfigService.getTablePageSize(this.tableId);\n    this.route.parent.parent.params.subscribe(params => {\n      this.facilityId = params['facilityId'];\n      this.refreshTable();\n    });\n  }\n\n  onDelete() {\n    const config = getDefaultDialogConfig();\n    config.width = '450px';\n    config.data = {\n      entityId: this.facilityId,\n      entity: 'facility',\n      attributes: this.selection.selected\n    };\n\n    const dialogRef = this.dialog.open(DeleteAttributeDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  onSave() {\n    // have to use this to update attribute with map in it, before saving it\n    this.list.updateMapAttributes();\n\n    const config = getDefaultDialogConfig();\n    config.width = '450px';\n    config.data = {\n      entityId: this.facilityId,\n      entity: 'facility',\n      attributes: this.selection.selected\n    };\n\n    const dialogRef = this.dialog.open(EditAttributeDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  onCreate() {\n    const config = getDefaultDialogConfig();\n    config.width = '1050px';\n    config.data = {\n      entityId: this.facilityId,\n      entity: 'facility',\n      notEmptyAttributes: this.attributes,\n      style: 'facility-theme'\n    };\n\n    const dialogRef = this.dialog.open(CreateAttributeDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'saved') {\n        this.refreshTable();\n      }\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.attributesManager.getFacilityAttributes(this.facilityId).subscribe(attributes => {\n      this.attributes = attributes;\n      this.selection.clear();\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n\n  pageChanged(event: PageEvent) {\n    this.pageSize = event.pageSize;\n    this.tableConfigService.setTablePageSize(this.tableId, event.pageSize);\n  }\n}\n","<div>\n  <h1 class=\"page-subtitle\">{{'FACILITY_DETAIL.SETTINGS.ATTRIBUTES.TITLE' | translate}}</h1>\n  <perun-web-apps-refresh-button (refresh)=\"refreshTable()\"></perun-web-apps-refresh-button>\n  <button mat-flat-button class=\"mr-2\" color=\"accent\" (click)=\"onCreate()\">\n    {{'FACILITY_DETAIL.SETTINGS.ATTRIBUTES.CREATE' | translate}}\n  </button>\n\n  <button mat-flat-button class=\"mr-2\" color=\"accent\" (click)=\"onSave()\" [disabled]=\"selection.selected.length === 0\">\n    {{'FACILITY_DETAIL.SETTINGS.ATTRIBUTES.SAVE' | translate}}\n  </button>\n\n  <button mat-flat-button color=\"warn\" (click)=\"onDelete()\" [disabled]=\"selection.selected.length === 0\">\n    {{'FACILITY_DETAIL.SETTINGS.ATTRIBUTES.DELETE' | translate}}\n  </button>\n  <perun-web-apps-immediate-filter (filter)=\"applyFilter($event)\" [placeholder]=\"'SHARED_LIB.PERUN.COMPONENTS.ATTRIBUTES_LIST.FILTER' | translate\"></perun-web-apps-immediate-filter>\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n  <perun-web-apps-attributes-list\n    #list\n    *ngIf=\"!loading\"\n    (page)=\"pageChanged($event)\"\n    [pageSize]=\"pageSize\"\n    [filterValue]=\"filterValue\"\n    [attributes]=\"attributes\"\n    [selection]=\"selection\">\n  </perun-web-apps-attributes-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  BanOnFacility,\n  FacilitiesManagerService,\n  Facility,\n  User,\n  UsersManagerService\n} from '@perun-web-apps/perun/openapi';\nimport { TABLE_FACILITY_BLACKLIST_LIST, TableConfigService } from '@perun-web-apps/config/table-config';\nimport { ActivatedRoute } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-perun-web-apps-facility-settings-blacklist',\n  templateUrl: './facility-settings-blacklist.component.html',\n  styleUrls: ['./facility-settings-blacklist.component.scss']\n})\nexport class FacilitySettingsBlacklistComponent implements OnInit {\n\n  constructor(private facilitiesManager: FacilitiesManagerService,\n              private usersManager: UsersManagerService,\n              private tableConfigService: TableConfigService,\n              private route: ActivatedRoute) {\n  }\n\n  bansOnFacilitiesWithUsers: [BanOnFacility, User][] = [];\n  selected = new SelectionModel<[BanOnFacility, User]>(true, []);\n  filterValue = '';\n  loading: boolean;\n  pageSize: number;\n  tableId = TABLE_FACILITY_BLACKLIST_LIST;\n\n\n  ngOnInit(): void {\n    this.pageSize = this.tableConfigService.getTablePageSize(this.tableId);\n    this.refreshTable();\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.route.parent.parent.params.subscribe(parentParentParams => {\n      const facilityId = parentParentParams['facilityId'];\n\n      this.facilitiesManager.getBansForFacility(facilityId).subscribe(bansOnFacility => {\n        const listOfBans: BanOnFacility[] = bansOnFacility;\n        for (const ban of listOfBans) {\n          let user: User;\n          this.usersManager.getUserById(ban.userId).subscribe(subscriptionUser => {\n            user = subscriptionUser;\n          });\n          this.bansOnFacilitiesWithUsers.push([ban, user]);\n        }\n        this.selected.clear();\n        this.loading = false;\n      });\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n\n  pageChanged(event: PageEvent) {\n    this.pageSize = event.pageSize;\n    this.tableConfigService.setTablePageSize(this.tableId, event.pageSize);\n  }\n}\n","<div>\n  <h1 class=\"page-subtitle\">{{'FACILITY_DETAIL.SETTINGS.BLACKLIST.TITLE' | translate}}</h1>\n  <perun-web-apps-refresh-button (refresh)=\"refreshTable()\"></perun-web-apps-refresh-button>\n  <perun-web-apps-immediate-filter (filter)=\"applyFilter($event)\" [placeholder]=\"'FACILITY_DETAIL.SETTINGS.BLACKLIST.FILTER' | translate\"></perun-web-apps-immediate-filter>\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n  <app-perun-web-apps-blacklist-list\n    [pageSize]=\"pageSize\"\n    (page)=\"pageChanged($event)\"\n    *ngIf=\"!loading\"\n    [filterValue]=\"filterValue\"\n    [bansOnFacilitiesWithUsers]=\"bansOnFacilitiesWithUsers\"\n    [selection]=\"selected\">\n  </app-perun-web-apps-blacklist-list>\n</div>\n\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { FacilitiesManagerService, Facility } from '@perun-web-apps/perun/openapi';\nimport { ActivatedRoute } from '@angular/router';\nimport { Role } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-perun-web-apps-facility-settings-managers',\n  templateUrl: './facility-settings-managers.component.html',\n  styleUrls: ['./facility-settings-managers.component.scss']\n})\nexport class FacilitySettingsManagersComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private facilityService: FacilitiesManagerService,\n    private route: ActivatedRoute\n  ) { }\n\n  facility: Facility;\n\n  availableRoles: Role[] = [ Role.FACILITYADMIN ];\n\n  selected = 'user';\n\n  type = 'Facility';\n\n  theme = 'facility-theme';\n\n  ngOnInit() {\n    this.route.parent.parent.params.subscribe(parentParentParams => {\n      const facilityId = parentParentParams ['facilityId'];\n\n      this.facilityService.getFacilityById(facilityId).subscribe( facility => {\n        this.facility = facility;\n      });\n    });\n  }\n\n}\n","<app-managers-page *ngIf=\"facility\"\n                   [complementaryObject]=\"facility\"\n                   [complementaryObjectType]=\"type\"\n                   [theme]=\"theme\"\n                   [availableRoles]=\"availableRoles\"\n></app-managers-page>\n","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {MenuItem} from '@perun-web-apps/perun/models';\nimport {ActivatedRoute} from '@angular/router';\nimport { FacilitiesManagerService, Facility } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-facility-settings-overview',\n  templateUrl: './facility-settings-overview.component.html',\n  styleUrls: ['./facility-settings-overview.component.scss']\n})\nexport class FacilitySettingsOverviewComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private facilityManager: FacilitiesManagerService\n  ) { }\n\n  items: MenuItem[] = [];\n  facility: Facility;\n\n  ngOnInit() {\n    this.route.parent.parent.params.subscribe(parentParams => {\n      const facilityId = parentParams['facilityId'];\n\n      this.facilityManager.getFacilityById(facilityId).subscribe(facility => {\n        this.facility = facility;\n\n        this.initItems();\n      });\n    });\n  }\n\n  private initItems() {\n    this.items = [\n      {\n        cssIcon: 'perun-attributes',\n        url: `/facilities/${this.facility.id}/settings/attributes`,\n        label: 'MENU_ITEMS.FACILITY.ATTRIBUTES',\n        style: 'facility-btn'\n      },\n      {\n        cssIcon: 'perun-user',\n        url: `/facilities/${this.facility.id}/settings/owners`,\n        label: 'MENU_ITEMS.FACILITY.OWNERS',\n        style: 'facility-btn'\n      },\n      {\n        cssIcon: 'perun-manager',\n        url: `/facilities/${this.facility.id}/settings/managers`,\n        label: 'MENU_ITEMS.FACILITY.MANAGERS',\n        style: 'facility-btn'\n      },\n      {\n        cssIcon: 'perun-black-list',\n        url: `/facilities/${this.facility.id}/settings/blacklist`,\n        label: 'MENU_ITEMS.FACILITY.BLACKLIST',\n        style: 'facility-btn'\n      }\n    ];\n  }\n}\n","<div>\n  <perun-web-apps-menu-buttons-field [items]=\"items\" [size]=\"'small'\"></perun-web-apps-menu-buttons-field>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FacilitiesManagerService, Owner } from '@perun-web-apps/perun/openapi';\nimport { ActivatedRoute } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddFacilityOwnerDialogComponent } from '../../../../../shared/components/dialogs/add-facility-owner-dialog/add-facility-owner-dialog.component';\nimport { getDefaultDialogConfig } from '@perun-web-apps/perun/utils';\nimport { RemoveFacilityOwnerDialogComponent } from '../../../../../shared/components/dialogs/remove-facility-owner-dialog/remove-facility-owner-dialog.component';\n\n@Component({\n  selector: 'app-facility-settings-owners',\n  templateUrl: './facility-settings-owners.component.html',\n  styleUrls: ['./facility-settings-owners.component.scss']\n})\nexport class FacilitySettingsOwnersComponent implements OnInit {\n\n  facilityId: number;\n  owners: Owner[] = [];\n  selection = new SelectionModel<Owner>(true, []);\n  loading: boolean;\n  filterValue: string;\n\n  constructor(private facilitiesManagerService: FacilitiesManagerService,\n              private route: ActivatedRoute,\n              private dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    this.route.parent.parent.params.subscribe(params => {\n      this.facilityId = params['facilityId'];\n\n      this.refreshTable();\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.selection.clear();\n    this.facilitiesManagerService.getFacilityOwners(this.facilityId).subscribe(owners => {\n      this.owners = owners;\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n\n  onCreate() {\n    const config = getDefaultDialogConfig();\n    config.width = '800px';\n    config.data = { theme: 'facility-theme', facilityId: this.facilityId, forbiddenOwners: this.owners.map(owner => owner.id) };\n\n    const dialogRef = this.dialog.open(AddFacilityOwnerDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe((response)=> {\n      if(response){\n        this.refreshTable();\n      }\n    });\n  }\n\n  onRemove() {\n    const config = getDefaultDialogConfig();\n    config.width = '600px';\n    config.data = { theme: 'facility-theme', owners: this.selection.selected, facilityId: this.facilityId };\n\n    const dialogRef = this.dialog.open(RemoveFacilityOwnerDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe((response)=> {\n      if(response){\n        this.refreshTable();\n      }\n    });\n  }\n}\n","<h1 class=\"page-subtitle\">{{'FACILITY_DETAIL.SETTINGS.OWNERS.TITLE' | translate}}</h1>\n<perun-web-apps-refresh-button (refresh)=\"refreshTable()\" *ngIf=\"!loading\"></perun-web-apps-refresh-button>\n<button (click)=\"onCreate()\" class=\"mr-2\" color=\"accent\" mat-flat-button>\n  {{'FACILITY_DETAIL.SETTINGS.OWNERS.ADD' | translate}}\n</button>\n<button (click)=\"onRemove()\" [disabled]=\"selection.selected.length === 0\" class=\"mr-2\" color=\"warn\" mat-flat-button>\n  {{'FACILITY_DETAIL.SETTINGS.OWNERS.DELETE' | translate}}\n</button>\n<perun-web-apps-immediate-filter (filter)=\"applyFilter($event)\" *ngIf=\"!loading\" [placeholder]=\"'VO_MANAGEMENT.FILTER_PLACEHOLDER'\"></perun-web-apps-immediate-filter>\n<mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\"></mat-spinner>\n<app-owners-list *ngIf=\"!loading\" [filterValue]=\"filterValue\" [owners]=\"owners\" [selection]=\"selection\"></app-owners-list>\n\n\n","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {fadeIn} from '@perun-web-apps/perun/animations';\n\n@Component({\n  selector: 'app-facility-settings',\n  templateUrl: './facility-settings.component.html',\n  styleUrls: ['./facility-settings.component.scss'],\n  animations: [\n    fadeIn\n  ]\n})\nexport class FacilitySettingsComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","<app-animated-router-outlet></app-animated-router-outlet>\n","import {Component, OnInit} from '@angular/core';\nimport {SideMenuService} from '../../../core/services/common/side-menu.service';\nimport { FacilitiesManagerService, RichFacility } from '@perun-web-apps/perun/openapi';\nimport { getRecentlyVisited, getRecentlyVisitedIds } from '@perun-web-apps/perun/utils';\nimport {\n  TABLE_FACILITY_SELECT,\n  TableConfigService\n} from '@perun-web-apps/config/table-config';\nimport { PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-facility-select-page',\n  templateUrl: './facility-select-page.component.html',\n  styleUrls: ['./facility-select-page.component.scss']\n})\nexport class FacilitySelectPageComponent implements OnInit {\n\n  constructor(\n    private facilityManager: FacilitiesManagerService,\n    private sideMenuService: SideMenuService,\n    private tableConfigService: TableConfigService\n  ) { }\n\n  facilities: RichFacility[] = [];\n  recentIds: number[] = [];\n  loading: boolean;\n  filterValue = '';\n  pageSize: number;\n  tableId = TABLE_FACILITY_SELECT;\n\n  ngOnInit() {\n    this.pageSize = this.tableConfigService.getTablePageSize(this.tableId);\n    this.sideMenuService.setFacilityMenuItems([]);\n\n    this.refreshTable();\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.facilityManager.getRichFacilities().subscribe(facilities => {\n      this.facilities = getRecentlyVisited('facilities', facilities);\n      this.recentIds = getRecentlyVisitedIds('facilities');\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n\n  pageChanged(event: PageEvent) {\n    this.pageSize = event.pageSize;\n    this.tableConfigService.setTablePageSize(this.tableId, event.pageSize);\n  }\n}\n","<div class=\"container-fluid pl-xl-5 pr-xl-5 facility-theme\">\n  <perun-web-apps-back-button>\n  </perun-web-apps-back-button>\n\n  <h1 class=\"page-title\">{{'FACILITY_MANAGEMENT.TITLE' | translate}}</h1>\n  <perun-web-apps-refresh-button (refresh)=\"refreshTable()\" *ngIf=\"!loading\"></perun-web-apps-refresh-button>\n  <perun-web-apps-immediate-filter (filter)=\"applyFilter($event)\" *ngIf=\"!loading\" [placeholder]=\"'FACILITY_MANAGEMENT.FILTER_PLACEHOLDER'\"></perun-web-apps-immediate-filter>\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n  <app-facility-select-table\n    [pageSize]=\"pageSize\"\n    (page)=\"pageChanged($event)\"\n    *ngIf=\"!loading\"\n    [filterValue]=\"filterValue\"\n    [facilities]=\"facilities\"\n    [recentIds]=\"recentIds\">\n  </app-facility-select-table>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {fadeIn} from '@perun-web-apps/perun/animations';\nimport {SideMenuService} from '../../../core/services/common/side-menu.service';\nimport {SideMenuItemService} from '../../../shared/side-menu/side-menu-item.service';\nimport { FacilitiesManagerService, Resource, ResourcesManagerService } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-resource-detail-page',\n  templateUrl: './resource-detail-page.component.html',\n  styleUrls: ['./resource-detail-page.component.scss'],\n  animations: [\n    fadeIn\n  ]\n})\nexport class ResourceDetailPageComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private facilityManager: FacilitiesManagerService,\n    private resourcesManager: ResourcesManagerService,\n    private sideMenuService: SideMenuService,\n    private sideMenuItemService: SideMenuItemService\n  ) { }\n\n  resource: Resource;\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const resourceId = params['resourceId'];\n\n      this.resourcesManager.getResourceById(resourceId).subscribe(resource => {\n        this.resource = resource;\n\n        this.facilityManager.getFacilityById(resource.facilityId).subscribe(facility => {\n          const facilityItem = this.sideMenuItemService.parseFacility(facility);\n          const resourceItem = this.sideMenuItemService.parseResource(resource);\n\n          this.sideMenuService.setFacilityMenuItems([facilityItem, resourceItem]);\n        });\n      });\n    });\n  }\n}\n","<div class=\"container-fluid pl-xl-5 pr-xl-5 resource-theme\" *ngIf=\"resource !== undefined\">\n  <perun-web-apps-back-button>\n  </perun-web-apps-back-button>\n  <h1 class=\"page-title\">\n    {{'RESOURCE_DETAIL.TITLE' | translate}}\n    <a class=\"resource-link\" [routerLink]=\"['/facilities', resource.facilityId, 'resources', resource.id]\">\n      {{resource.name}}\n    </a>\n    <span class=\"text-muted\">\n      &nbsp;#{{resource.id}}\n    </span>\n  </h1>\n  <app-animated-router-outlet></app-animated-router-outlet>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Group, ResourcesManagerService } from '@perun-web-apps/perun/openapi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RemoveGroupFromResourceDialogComponent } from '../../../../shared/components/dialogs/remove-group-from-resource-dialog/remove-group-from-resource-dialog.component';\nimport { AssignGroupToResourceDialogComponent } from '../../../../shared/components/dialogs/assign-group-to-resource-dialog/assign-group-to-resource-dialog.component';\nimport {\n  TABLE_RESOURCE_ALLOWED_GROUPS,\n  TableConfigService\n} from '@perun-web-apps/config/table-config';\nimport { PageEvent } from '@angular/material/paginator';\nimport { getDefaultDialogConfig } from '@perun-web-apps/perun/utils';\n\n@Component({\n  selector: 'app-perun-web-apps-resource-groups',\n  templateUrl: './resource-groups.component.html',\n  styleUrls: ['./resource-groups.component.scss']\n})\nexport class ResourceGroupsComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute,\n              private resourcesManager: ResourcesManagerService,\n              private tableConfigService: TableConfigService,\n              private dialog: MatDialog) { }\n\n  resourceId: number;\n  assignedGroups: Group[] = [];\n  selected = new SelectionModel<Group>(true, []);\n  loading: boolean;\n  filteredGroups: Group[] = [];\n\n  tableId = TABLE_RESOURCE_ALLOWED_GROUPS;\n  pageSize: number;\n\n  @ViewChild('checkbox', {static: true})\n  checkbox: MatCheckbox;\n\n  ngOnInit() {\n    this.pageSize = this.tableConfigService.getTablePageSize(this.tableId);\n    this.loading = true;\n    this.route.parent.params.subscribe(parentParams => {\n      this.resourceId = parentParams['resourceId'];\n        this.loadAllGroups();\n    });\n  }\n\n  loadAllGroups() {\n    this.loading = true;\n    this.resourcesManager.getAssignedGroups(this.resourceId).subscribe( assignedGroups => {\n      this.assignedGroups = assignedGroups;\n      this.filteredGroups = assignedGroups;\n      this.selected.clear();\n      this.loading = false;\n    });\n  }\n\n  addGroup() {\n    const config = getDefaultDialogConfig();\n    config.width = '800px';\n    config.data = {theme: 'resource-theme', resourceId: this.resourceId};\n\n    const dialogRef = this.dialog.open(AssignGroupToResourceDialogComponent, config);\n    dialogRef.afterClosed().subscribe((success) => {\n      if (success) {\n        this.loadAllGroups();\n      }\n    });\n  }\n\n  removeGroups() {\n    const config = getDefaultDialogConfig();\n    config.width = '500px';\n    config.data = {resourceId: this.resourceId, groups: this.selected.selected};\n\n    const dialogRef = this.dialog.open(RemoveGroupFromResourceDialogComponent, config);\n    dialogRef.afterClosed().subscribe((success) => {\n      if (success) {\n        this.loadAllGroups();\n      }\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filteredGroups = this.assignedGroups.filter( option => option.name.toLowerCase().includes(filterValue.toLowerCase()));\n  }\n\n  pageChanged(event: PageEvent) {\n    this.pageSize = event.pageSize;\n    this.tableConfigService.setTablePageSize(this.tableId, event.pageSize);\n  }\n}\n","<h1 class=\"page-subtitle\">{{'RESOURCE_DETAIL.ASSIGNED_GROUPS.TITLE' | translate}}</h1>\n<perun-web-apps-refresh-button (refresh)=\"loadAllGroups()\"></perun-web-apps-refresh-button>\n<button mat-flat-button color=\"accent\" (click)=\"addGroup()\">\n  {{'RESOURCE_DETAIL.ASSIGNED_GROUPS.ADD_GROUP' | translate}}\n</button>\n<button mat-flat-button color=\"warn\" class=\"ml-2\" [disabled]=\"selected.selected.length === 0\" (click)=\"removeGroups()\">\n  {{'RESOURCE_DETAIL.ASSIGNED_GROUPS.REMOVE_GROUP' | translate}}\n</button>\n<app-debounce-filter\n  [placeholder]=\"'RESOURCE_DETAIL.ASSIGNED_GROUPS.FILTER_GROUPS'\"\n  (filter)=\"applyFilter($event)\">\n</app-debounce-filter>\n<mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n<div class=\"mt-3\" *ngIf=\"!loading && assignedGroups.length !== 0\">\n  <perun-web-apps-groups-list\n    (page)=\"pageChanged($event)\"\n    [pageSize]=\"pageSize\"\n    [groups]=\"filteredGroups\"\n    [selection]=\"selected\"\n    [disableMembers]=\"false\"\n    [hideColumns]=\"['vo', 'menu']\">\n  </perun-web-apps-groups-list>\n</div>\n<app-alert *ngIf=\"assignedGroups.length === 0 && !loading\" color=\"warn\">\n  {{'RESOURCE_DETAIL.ASSIGNED_GROUPS.NO_GROUPS' | translate}}\n</app-alert>\n","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {MenuItem} from '@perun-web-apps/perun/models';\nimport { Resource, ResourcesManagerService } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-resource-overview',\n  templateUrl: './resource-overview.component.html',\n  styleUrls: ['./resource-overview.component.scss']\n})\nexport class ResourceOverviewComponent implements OnInit {\n\n  // class used for animation\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private resourcesManager: ResourcesManagerService,\n    private route: ActivatedRoute,\n  ) { }\n\n  navItems: MenuItem[] = [];\n  resource: Resource;\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const resourceId = params['resourceId'];\n\n      this.resourcesManager.getResourceById(resourceId).subscribe(resource => {\n        this.resource = resource;\n\n        this.initItems();\n      });\n    });\n  }\n\n  private initItems() {\n    this.navItems = [\n      {\n        cssIcon: 'perun-group',\n        url: `/facilities/${this.resource.facilityId}/resources/${this.resource.id}/groups`,\n        label: 'MENU_ITEMS.RESOURCE.ASSIGNED_GROUPS',\n        style: 'resource-btn'\n      },\n      {\n        cssIcon: 'perun-settings2',\n        url: `/facilities/${this.resource.facilityId}/resources/${this.resource.id}/settings`,\n        label: 'MENU_ITEMS.RESOURCE.SETTINGS',\n        style: 'resource-btn'\n      }\n    ];\n  }\n}\n","<div>\n  <perun-web-apps-menu-buttons-field [items]=\"navItems\" [size]=\"'small'\"></perun-web-apps-menu-buttons-field>\n</div>\n","import {Component, HostBinding, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport {NotificatorService} from '@perun-web-apps/perun/services';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AttributesListComponent} from '@perun-web-apps/perun/components';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {\n  DeleteAttributeDialogComponent\n} from '../../../../../shared/components/dialogs/delete-attribute-dialog/delete-attribute-dialog.component';\nimport {\n  CreateAttributeDialogComponent\n} from '../../../../../shared/components/dialogs/create-attribute-dialog/create-attribute-dialog.component';\nimport { getDefaultDialogConfig } from '@perun-web-apps/perun/utils';\nimport { Attribute, AttributesManagerService } from '@perun-web-apps/perun/openapi';\nimport { EditAttributeDialogComponent } from '@perun-web-apps/perun/components';\nimport { PageEvent } from '@angular/material/paginator';\nimport {\n  TABLE_ATTRIBUTES_SETTINGS,\n  TableConfigService\n} from '@perun-web-apps/config/table-config';\n\n@Component({\n  selector: 'app-resource-settings-attributes',\n  templateUrl: './resource-settings-attributes.component.html',\n  styleUrls: ['./resource-settings-attributes.component.scss']\n})\nexport class ResourceSettingsAttributesComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor(private attributesManager: AttributesManagerService,\n              private route: ActivatedRoute,\n              private dialog: MatDialog,\n              private notificator: NotificatorService,\n              private tableConfigService: TableConfigService,\n              private translate: TranslateService) {\n    this.translate.get('RESOURCE_DETAIL.SETTINGS.ATTRIBUTES.SUCCESS_SAVE').subscribe(value => this.saveSuccessMessage = value);\n    this.translate.get('RESOURCE_DETAIL.SETTINGS.ATTRIBUTES.SUCCESS_DELETE').subscribe(value => this.deleteSuccessMessage = value);\n  }\n\n  @ViewChild('list')\n  list: AttributesListComponent;\n\n  attributes: Attribute[] = [];\n  selection = new SelectionModel<Attribute>(true, []);\n  resourceId: number;\n  saveSuccessMessage: string;\n  deleteSuccessMessage: string;\n  loading: boolean;\n  filterValue = '';\n  tableId = TABLE_ATTRIBUTES_SETTINGS;\n  pageSize: number;\n\n  ngOnInit() {\n    this.pageSize = this.tableConfigService.getTablePageSize(this.tableId);\n    this.route.parent.parent.params.subscribe(params => {\n      this.resourceId = params['resourceId'];\n      this.refreshTable();\n    });\n  }\n\n  onDelete() {\n    const config = getDefaultDialogConfig();\n    config.width = '450px';\n    config.data = {\n      entityId: this.resourceId,\n      entity: 'resource',\n      attributes: this.selection.selected\n    };\n\n    const dialogRef = this.dialog.open(DeleteAttributeDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  onSave() {\n    // have to use this to update attribute with map in it, before saving it\n    this.list.updateMapAttributes();\n\n    const config = getDefaultDialogConfig();\n    config.width = '450px';\n    config.data = {\n      entityId: this.resourceId,\n      entity: 'resource',\n      attributes: this.selection.selected\n    };\n\n    const dialogRef = this.dialog.open(EditAttributeDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  onCreate() {\n    const config = getDefaultDialogConfig();\n    config.width = '1050px';\n    config.data = {\n      entityId: this.resourceId,\n      entity: 'resource',\n      notEmptyAttributes: this.attributes,\n      style: 'resource-theme'\n    };\n\n    const dialogRef = this.dialog.open(CreateAttributeDialogComponent, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'saved') {\n       this.refreshTable();\n      }\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.attributesManager.getResourceAttributes(this.resourceId).subscribe(attributes => {\n      this.attributes = attributes;\n      this.selection.clear();\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n   this.filterValue = filterValue;\n  }\n\n  pageChanged(event: PageEvent) {\n    this.pageSize = event.pageSize;\n    this.tableConfigService.setTablePageSize(this.tableId, event.pageSize);\n  }\n}\n","<div>\n  <h1 class=\"page-subtitle\">{{'RESOURCE_DETAIL.SETTINGS.ATTRIBUTES.TITLE' | translate}}</h1>\n  <perun-web-apps-refresh-button (refresh)=\"refreshTable()\"></perun-web-apps-refresh-button>\n  <button mat-flat-button class=\"mr-2\" color=\"accent\" (click)=\"onCreate()\">\n    {{'RESOURCE_DETAIL.SETTINGS.ATTRIBUTES.CREATE' | translate}}\n  </button>\n\n  <button mat-flat-button class=\"mr-2\" color=\"accent\" (click)=\"onSave()\" [disabled]=\"selection.selected.length === 0\">\n    {{'RESOURCE_DETAIL.SETTINGS.ATTRIBUTES.SAVE' | translate}}\n  </button>\n\n  <button mat-flat-button color=\"warn\" (click)=\"onDelete()\" [disabled]=\"selection.selected.length === 0\">\n    {{'RESOURCE_DETAIL.SETTINGS.ATTRIBUTES.DELETE' | translate}}\n  </button>\n  <perun-web-apps-immediate-filter (filter)=\"applyFilter($event)\" [placeholder]=\"'SHARED_LIB.PERUN.COMPONENTS.ATTRIBUTES_LIST.FILTER'\"></perun-web-apps-immediate-filter>\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n  <perun-web-apps-attributes-list\n    (page)=\"pageChanged($event)\"\n    [pageSize]=\"pageSize\"\n    #list\n    *ngIf=\"!loading\"\n    [filterValue]=\"filterValue\"\n    [attributes]=\"attributes\"\n    [selection]=\"selection\">\n  </perun-web-apps-attributes-list>\n</div>\n","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {MenuItem} from '@perun-web-apps/perun/models';\nimport { Resource, ResourcesManagerService } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-resource-settings-overview',\n  templateUrl: './resource-settings-overview.component.html',\n  styleUrls: ['./resource-settings-overview.component.scss']\n})\nexport class ResourceSettingsOverviewComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private resourceManager: ResourcesManagerService\n  ) { }\n\n  items: MenuItem[] = [];\n  resource: Resource;\n\n  ngOnInit() {\n    this.route.parent.parent.params.subscribe(parentParams => {\n      const resourceId = parentParams['resourceId'];\n\n      this.resourceManager.getResourceById(resourceId).subscribe(resource => {\n        this.resource = resource;\n\n        this.initItems();\n      });\n    });\n  }\n\n  private initItems() {\n    this.items = [\n      {\n        cssIcon: 'perun-attributes',\n        url: `/facilities/${this.resource.facilityId}/resources/${this.resource.id}/settings/attributes`,\n        label: 'MENU_ITEMS.RESOURCE.ATTRIBUTES',\n        style: 'resource-btn'\n      }\n    ];\n  }\n}\n","<div>\n  <perun-web-apps-menu-buttons-field [items]=\"items\" [size]=\"'small'\"></perun-web-apps-menu-buttons-field>\n</div>\n","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {fadeIn} from '@perun-web-apps/perun/animations';\n\n@Component({\n  selector: 'app-resource-settings',\n  templateUrl: './resource-settings.component.html',\n  styleUrls: ['./resource-settings.component.scss'],\n  animations: [\n    fadeIn\n  ]\n})\nexport class ResourceSettingsComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","<app-animated-router-outlet></app-animated-router-outlet>\n"]}